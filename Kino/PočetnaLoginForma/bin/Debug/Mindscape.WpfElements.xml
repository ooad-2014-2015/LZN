<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mindscape.WpfElements</name>
    </assembly>
    <members>
        <member name="T:Mindscape.WpfElements.AnimatedValueDisplay">
            <summary>
            A control that displays a value and animates the visible value as it changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AnimatedValueDisplay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.AnimatedValueDisplay"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AnimatedValueDisplay.OnValueChanged(System.Double,System.Double)">
            <summary>
            Called when the value changes.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Mindscape.WpfElements.AnimatedValueDisplay.DisplayedValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AnimatedValueDisplay.DisplayedValue"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AnimatedValueDisplay.OnDisplayedValueChanged">
            <summary>
            Called when the displayed value changes during animation.  Derived classes can override this
            to update user interface elements in response to the animation.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.AnimatedValueDisplay.DisplayedValue">
            <summary>
            Gets the current value to be displayed. This value is animated whenever the Value property changes;
            a derived class or template can use it to display a smooth transition to the new value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AnimatedValueDisplay.DisplayedValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.AxisLabel">
            <summary>
            Represents an axis label displayed by a <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.AxisLabel.ToString">
            <summary>
            Returns a string representation of the <see cref="T:Mindscape.WpfElements.Charting.AxisLabel"/>.
            </summary>
            <returns>A string representation of the <see cref="T:Mindscape.WpfElements.Charting.AxisLabel"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.AxisLabel.Label">
            <summary>
            Gets the content of the <see cref="T:Mindscape.WpfElements.Charting.AxisLabel"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.AxisLabel.FormattedLabel">
            <summary>
            Gets the string formatted content of the <see cref="T:Mindscape.WpfElements.Charting.AxisLabel"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.AxisLabelLayout">
            <summary>
            Specifies how to position axis labels along a <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisLabelLayout.Normal">
            <summary>
            Axis labels are positioned from the start to the end of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisLabelLayout.Inside">
            <summary>
            Axis labels start and end between a buffer placed at each end of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>. This is useful for bar charts.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.AxisPlacement">
            <summary>
            Specifies where an axis is placed around the chart canvas.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Left">
            <summary>
            The axis is placed on the left edge of the chart canvas. Only supported by vertical axes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Top">
            <summary>
            The axis is placed on the top edge of the chart canvas. Only supported by horizontal axes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Right">
            <summary>
            The axis is placed on the right edge of the chart canvas. Only supported by vertical axes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Bottom">
            <summary>
            The axis is placed on the bottom edge of the chart canvas. Only supported by horizontal axes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Auto">
            <summary>
            The axis is placed automatically.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisPlacement.Overlay">
            <summary>
            The axis overlays the charting canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.AxisTickLayout">
            <summary>
            Specifies the layout of the tick marks along a <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisTickLayout.Normal">
            <summary>
            Tick marks are positioned from the start to the end of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AxisTickLayout.Inside">
            <summary>
            Tick marks start and end between a buffer placed at each end of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Bar">
            <summary>
            Represents a data point in a <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.CartesianDataPoint">
            <summary>
            Represents a single data point to be plotted on cartesian (X/Y) axes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataPoint">
            <summary>
            Represents a single piece of data to be plotted on a chart.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataPoint.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse enters the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataPoint.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse leaves the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataPoint.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed over the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataPoint.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the right mouse button is pressed over the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPoint.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataPoint.IsMouseOver"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPoint.LabelContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataPoint.LabelContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPoint.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataPoint.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPoint.IsSelectedChangedEvent">
            <summary>
            Identifies the IsSelectedChanged routed event.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataPoint.IsMouseOver">
            <summary>
            Gets whether the mouse is over the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataPoint.IsMouseOverProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataPoint.LabelContent">
            <summary>
            Gets or sets custom data to be displayed in the data label for this <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            This property can be set using the DataSeries.LabelBinding property.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataPoint.LabelContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataPoint.IsSelected">
            <summary>
            Gets or sets whether the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> is selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataPoint.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.DataPoint.IsSelectedChanged">
            <summary>
            Raised when the IsSelected property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.CartesianDataPoint.XObjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.CartesianDataPoint.XObject"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.CartesianDataPoint.YObjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.CartesianDataPoint.YObject"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.CartesianDataPoint.DataSeriesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.CartesianDataPoint.DataSeries"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.CartesianDataPoint.XObject">
            <summary>
            Gets or sets the object that specifies the X value of the <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.CartesianDataPoint.YObject">
            <summary>
            Gets or sets the object that specifies the Y value of the <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.CartesianDataPoint.DataSeries">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.CartesianDataPoint.DataSeries"/> that created this <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.CartesianDataPoint.DataSeriesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.CartesianDataPoint.LogicalPoint">
            <summary>
            Gets the logical X,Y plotting position of the <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Bar.#ctor(System.Object,System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Bar"/> class.
            <param name="data">The data plotted by the <see cref="T:Mindscape.WpfElements.Charting.Bar"/>.</param>
            <param name="orientation">The <see cref="P:Mindscape.WpfElements.Charting.Bar.Orientation"/> of the <see cref="T:Mindscape.WpfElements.Charting.Bar"/>.</param>
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Bar.IsNegativeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Bar.IsNegative"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Bar.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Bar.Title"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Bar.IsNegative">
            <summary>
            Gets whether or not the <see cref="T:Mindscape.WpfElements.Charting.Bar"/> is plotting a negative value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Bar.IsNegativeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Bar.Orientation">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.Bar.Orientation"/> of the <see cref="T:Mindscape.WpfElements.Charting.Bar"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Bar.Title">
            <summary>
            Gets or sets the optional title of the data point.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BoxAndWhiskers">
            <summary>
            The graphical representation of data points in a <see cref="T:Mindscape.WpfElements.Charting.BoxplotSeries"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartileProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartile"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartileProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartile"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Median"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartilePositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartilePosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartilePositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartilePosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxHeight"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Orientation">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Orientation"/> of the <see cref="T:Mindscape.WpfElements.Charting.BoxAndWhiskers"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Minimum">
            <summary>
            Gets or sets the logical minimum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Maximum">
            <summary>
            Gets or sets the logical maximum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartile">
            <summary>
            Gets or sets the logical lower quartile value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartileProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartile">
            <summary>
            Gets or sets the logical upper quartile value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartileProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.Median">
            <summary>
            Gets or sets the logical median value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumPosition">
            <summary>
            Gets or sets the physical position of the minimum value from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MinimumPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumPosition">
            <summary>
            Gets or sets the physical position of the maximum value from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MaximumPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartilePosition">
            <summary>
            Gets or sets the physical position of the lower quartile value from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.LowerQuartilePositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartilePosition">
            <summary>
            Gets or sets the physical position of the upper quartile value from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.UpperQuartilePositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianPosition">
            <summary>
            Gets or sets the physical position of the median value from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.MedianPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxWidth">
            <summary>
            Gets or sets the width of the box.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxHeight">
            <summary>
            Gets or sets the height of the box.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxAndWhiskers.BoxHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Bubble">
            <summary>
            Represents a data point in a <see cref="T:Mindscape.WpfElements.Charting.BubbleSeries"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Bubble.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Bubble.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Bubble.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> class.
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> plots.</param>
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Bubble.SizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Bubble.Size"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Bubble.IsNegative">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> is plotting a negative value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Bubble.Size">
            <summary>
            Gets or sets the Size.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Candlestick">
            <summary>
            The graphical data point of a <see cref="T:Mindscape.WpfElements.Charting.CandlestickSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StockDataPointBase">
            <summary>
            A base class for data points used by stock charts.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.LowProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.Low"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.HighProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.High"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.OpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.Open"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.CloseProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.Close"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.OpenPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.OpenPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.ClosePositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.ClosePosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.LowPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.LowPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockDataPointBase.VisualStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockDataPointBase.VisualStyle"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.Low">
            <summary>
            Gets or sets the logical low value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.LowProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.High">
            <summary>
            Gets or sets the logical high value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.HighProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.Open">
            <summary>
            Gets or sets the logical open value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.OpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.Close">
            <summary>
            Gets or sets the logical close value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.CloseProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.OpenPosition">
            <summary>
            Gets or sets the physical position of the open point from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.OpenPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.ClosePosition">
            <summary>
            Gets or sets the physical position of the close point from the top of this data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.ClosePositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.LowPosition">
            <summary>
            Gets or sets the physical position of the low value from the top of this data point. In other words, this is the height of the data point graphics.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.LowPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPointBase.VisualStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> used for rendering the data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockDataPointBase.VisualStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Candlestick.BoxWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Candlestick.BoxWidth"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Candlestick.BoxWidth">
            <summary>
            Gets or sets the width of the open-close box.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Candlestick.BoxWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Chart">
            <summary>
            A control for displaying data series on a chart.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Chart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Chart"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Chart.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Chart.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed while the <see cref="T:Mindscape.WpfElements.Charting.Chart"/> has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Chart.ForceRender">
            <summary>
            Forces the chart to auto-calculate the axis range and render the data.
            This method is useful for printing and exporting charts that are not added to a visual tree and
            generally should not be used in normal application operations.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.XAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.YAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.TitleTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.TitleTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.ZoomBoxStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.ZoomBoxStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.LegendStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.LegendStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.ZoomModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.ZoomMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.LegendPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.LegendPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.CanToggleSelectionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.CanToggleSelection"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.CanDeselectOnClickNothingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.CanDeselectOnClickNothing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.IsRightClickSelectionEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.IsRightClickSelectionEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Chart.IsChartClippedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Chart.IsChartClipped"/> property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ZoomCanceled">
            <summary>
            Raised when a zoom operation is canceled (the user presses the Esc key while dragging a zoom marquee).
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseMove">
            <summary>
            Raised when the mouse is moved over the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseEnter">
            <summary>
            Raised when the mouse enters the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseLeave">
            <summary>
            Raised when the mouse leaves the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseLeftButtonUp">
            <summary>
            Raised when the left mouse button is released over the the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseLeftButtonDown">
            <summary>
            Raised when the left mouse button is pressed over the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseRightButtonUp">
            <summary>
            Raised when the right mouse button is released over the the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartMouseRightButtonDown">
            <summary>
            Raised when the right mouse button is pressed over the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.ChartZoomed">
            <summary>
            Raised whenever the user either uses the mouse wheel or the zoom box to change the zoom level of the chart.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.FinishedPlottingData">
            <summary>
            Raised when the chart has finished plotting/rendering the data.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.XAxis">
            <summary>
            Gets or sets the X (horizontal) axis of the <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.  This can be
            used to configure axis settings.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.YAxis">
            <summary>
            Gets or sets the YAxis used by the <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.TitleTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> applied to the title of the <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.ZoomBoxStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to be applied to the zoom box.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.LegendStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the <see cref="T:System.Windows.Controls.HeaderedItemsControl"/> that displays the legend items.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.SelectionMode">
            <summary>
            Gets or sets the selection mode of the <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.ZoomMode">
            <summary>
            Gets or sets the current <see cref="P:Mindscape.WpfElements.Charting.Chart.ZoomMode"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.LegendPosition">
            <summary>
            Gets or sets the position on the <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control where the legend is displayed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.CanToggleSelection">
            <summary>
            Gets or sets whether or not the user can toggle the selection of a series or data point.
            When true, clicking a series or data point will toggle the selection.
            When false, clicking a selected series or data point will not deselect it.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Chart.CanToggleSelectionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.CanDeselectOnClickNothing">
            <summary>
            Gets or sets whether or not clicking nothing (an empty area on the chart) will deselect the current selection. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Chart.CanDeselectOnClickNothingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.IsRightClickSelectionEnabled">
            <summary>
            Gets or sets whether or not the right mouse button participates in selection. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Chart.IsRightClickSelectionEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.IsChartClipped">
            <summary>
            Gets or sets whether or not the chart visuals are clipped within the axis region.
            If false, the chart can overlap the axes. This is useful for chart symbols from line series etc.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.Chart.IsChartClippedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.Series">
            <summary>
            Gets the collection of the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> plotted on the chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.AlternativeYAxes">
            <summary>
            Gets a collection of alternative Y axes.
            </summary>
            <remarks>Multiple Y axes allow for plotting data on different scales
            on the same graph.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.AlternativeXAxes">
            <summary>
            Gets a collection of alternative X axes.
            </summary>
            <remarks>Multiple X axes allow for plotting data on different scales
            on the same graph.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.LegendItems">
            <summary>
            Gets the items to be displayed in the legend.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.ForegroundElements">
            <summary>
            Gets the collection of <see cref="T:System.Windows.UIElement"/> objects displayed in front of the chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.BackgroundElements">
            <summary>
            Gets the collection of <see cref="T:System.Windows.UIElement"/> objects displayed behind the chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Chart.MouseMode">
            <summary>
            Gets the current <see cref="T:Mindscape.WpfElements.Charting.ChartMouseMode"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.Chart.SelectedDataSeriesChanged">
            <summary>
            Raised when the selected data series changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartAxis">
            <summary>
            Represents an axis for a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a dependency property value changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.SetRange(System.Double,System.Double)">
            <summary>
            Sets both the minimum and maximum values of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
            <param name="min">The new minimum value.</param>
            <param name="max">The new maximum value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.Pan(System.Double)">
            <summary>
            Changes the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMinimum"/> and <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMaximum"/> by the given value. This does not change the difference between
            the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMinimum"/> and <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMaximum"/>.
            </summary>
            <param name="delta">The logical distance to pan the axis.</param>
            <returns>The logical distance that the axis actually moved by.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.ActualMinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMinimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.ActualMaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMaximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.IsAutoViewportEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.IsAutoViewportEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MinimumRangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MinimumRange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.PlacementProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.Placement"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.StackIdentifierProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.StackIdentifier"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelLayoutProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelLayout"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TickLayoutProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.TickLayout"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TitleVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.TitleVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelLevelCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelLevelCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelStepProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelStep"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.ValueConverterProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.ValueConverter"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelFormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.AxisLineStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.AxisLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TickMarkModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.TickMarkMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelRotationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelRotation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MajorTickMarkStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MajorTickMarkStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MajorTickSpacingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MajorTickSpacing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TickMarkOffsetProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.TickMarkOffset"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelOffsetProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelOffset"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.LabelSpacingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.LabelSpacing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.IsSliderVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.IsSliderVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.SliderStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.SliderStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.IsReversedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.IsReversed"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.IsTitleRotatedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.IsTitleRotated"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartAxis.TitleWrappingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartAxis.TitleWrapping"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.GetLogicalPosition(System.Object)">
            <summary>
            Calculates the logical data position of the given object against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
            <param name="o">The object to calculate the position of.</param>
            <returns>The logical position of the given object against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.ConvertLogicalToPhysical(System.Double)">
            <summary>
            Calculates the physical position of the given data value against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
            <param name="logicalPosition">The logical value to convert</param>
            <returns>The physical position of the given data value against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.ConvertPhysicalToLogical(System.Double)">
            <summary>
            Calculates the logical position of the given physical value against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
            <param name="physicalPosition">The physical value to convert.</param>
            <returns>The logical position of the given physical value against the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.ConvertLogicalToPhysicalSize(System.Double)">
            <summary>
            Converts the given logical size to a physical size.
            </summary>
            <param name="logicalSize">The logical size to convert.</param>
            <returns>The physical interpretation of the given logical size.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartAxis.ConvertPhysicalToLogicalSize(System.Double)">
            <summary>
            Converts the given physical size to a logical size.
            </summary>
            <param name="physicalSize">The physical size to convert.</param>
            <returns>The logical interpretation of the given physical size.</returns>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.ChartAxis.RangeChanged">
            <summary>
            Raised when either the ActualMinimum or ActualMaximum properties change.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Maximum">
            <summary>
            Gets or sets the maximum value that the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> can display.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Minimum">
            <summary>
            Gets or sets the minimum value that the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> can display.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMinimum">
            <summary>
            Gets or sets the minimum value that is currently visible on the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            This is a dependency property.
            </summary>
            <remarks>This property can be used for programmatic panning and zooming.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.ActualMaximum">
            <summary>
            Gets or sets the maximum value that is currently visible on the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            This is a dependency property.
            </summary>
            <remarks>This property can be used for programmatic panning and zooming.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.IsAutoViewportEnabled">
            <summary>
            Gets or sets whether or not the viewport of the axis will update when the minimum and maximum values change. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.IsAutoViewportEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MinimumRange">
            <summary>
            Gets or sets the minimum logic distance between the ActualMinimum and ActualMaximum.
            The default is 0.0
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.MinimumRangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Orientation">
            <summary>
            Gets the orientation of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.OrientationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Placement">
            <summary>
            Gets or sets the placement of this <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> against the chart canvas.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.PlacementProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.StackIdentifier">
            <summary>
            Gets or sets the StackIdentifier.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.StackIdentifierProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelLayout">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.AxisLabelLayout"/> of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.TickLayout">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.AxisTickLayout"/> that specifies how the tick marks are arranged along the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.TitleVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> of the axis title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.TitleVisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelLevelCount">
            <summary>
            Gets or sets the number of levels used for placing the axis labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelStep">
            <summary>
            Gets or sets a value that determines if any axis labels should not be rendered.
            A value of 1 will allow all labels to be rendered. A value of 2 means only every second label will be rendered and so on.
            A value of 0 will automatically calculate a suitable label step that tries to prevent labels from overlapping.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.LabelStepProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.ValueConverter">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.IAxisValueConverter"/> used for converting between axis values and objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelFormat">
            <summary>
            Gets or sets the string format used to display the axis labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.AxisLineStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the axis line.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> applied to the axis labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.TickMarkMode">
            <summary>
            Gets or sets how tick marks behave when the user pans a zoomed-in chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelRotation">
            <summary>
            Gets or sets the rotation angle of the axis labels in degrees. Ideal values for this property
            are between 0 - 90 and 270 - 360. The default is 0 degrees.
            This feature is currently only supported by X axes.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the minor tick marks.
            Tick marks are <see cref="T:System.Windows.Controls.Border"/> objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MajorTickMarkStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to major tick marks.
            Tick marks are <see cref="T:System.Windows.Controls.Border"/> objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MajorTickSpacing">
            <summary>
            Gets or sets the logical axis distance between the major tick marks. 
            This is a dependency property.
            </summary>
            <remarks>If this property is zero (the default), the logical tick mark
            spacing will be calculated automatically based on the actual minimum and maximum property values.
            When setting this property manually, make sure it is reasonable based on the 
            actual minimum and maximum property values so as not to create too many tick marks.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.TickMarkOffset">
            <summary>
            Gets or sets the logical tick mark shift for controling how the tick marks align with the data.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.TickMarkOffsetProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelOffset">
            <summary>
            Gets or sets the logical axis label shift for controling how the labels align with the data.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.LabelOffsetProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.LabelSpacing">
            <summary>
            Gets or sets the logical spacing between the axis labels. If this property value is zero (the default), the label spacing
            will be the same as the major tick spacing.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> of the minor tick marks.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkCount">
            <summary>
            Gets or sets the number of minor tick marks to render between each major tick mark. The default is 4.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarkCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.IsSliderVisible">
            <summary>
            Gets or sets whether or not to display the axis dual-slider.
            The slider is a UI control for zooming and panning the axis.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.IsSliderVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.SliderStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the axis dual-slider.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.SliderStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.IsReversed">
            <summary>
            Gets or sets whether or not to reverse the axis.
            When set to true, the axis and chart data will be rendered from right to left for X axes, and top to bottom for Y axes. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.IsReversedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.IsTitleRotated">
            <summary>
            Gets or sets whether or not the title is rotated. This only affects Y axes.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.IsTitleRotatedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.TitleWrapping">
            <summary>
            Gets or sets the text wrapping behavior of the axis title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ChartAxis.TitleWrappingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MajorTickMarks">
            <summary>
            Gets a collection of major tick marks.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.MinorTickMarks">
            <summary>
            Gets a collection of minor tick marks.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.Labels">
            <summary>
            Gets the collection of the generated axis labels to place along the <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartAxis.AllowMajorTickSpacingZoomAdjustment">
            <summary>
            Gets or sets whether or not the major tick spacing is adjusted while zooming.
            When set to true, the specified MajorTickSpacing value determines the number of tick marks at maximum zoom.
            While zooming, the density of ticks marks will be kept as constant as possible.
            When set to false, the specified MajorTickSpacing will be used at all zoom levels.
            The default is true.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartCommands">
            <summary>
            Contains commands used with the <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartCommands.ResetZoom">
            <summary>
            A command for resetting the zoom level of a chart control back to 100 percent.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartGrid">
            <summary>
            Renders grid lines and stripe lines based on a pair of <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.ChartGrid"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.XAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.YAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.VerticalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.VerticalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.HorizontalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.HorizontalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.VerticalDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.VerticalDashArray"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.HorizontalDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.HorizontalDashArray"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalDashArray"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalDashArray"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.VerticalStripeBrushes">
            <summary>
            Gets the collection of vertical stripe brushes.  These are used in rotation
            to fill the vertical stripes of the grid, beginning with the leftmost column.
            </summary>
            <remarks>Horizontal stripes are drawn over the top of vertical stripes.  Therefore,
            an opaque horizontal brush will obscure the vertical stripe color where the stripes
            overlap.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.HorizontalStripeBrushes">
            <summary>
            Gets the collection of horizontal stripe brushes.  These are used in rotation
            to fill the horizontal stripes of the grid, beginning with the bottom row.
            </summary>
            <remarks>Horizontal stripes are drawn over the top of vertical stripes.  Therefore,
            an opaque horizontal brush will obscure the vertical stripe color where the stripes
            overlap.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.XAxis">
            <summary>
            Gets or sets the X axis used by the <see cref="T:Mindscape.WpfElements.Charting.ChartGrid"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.YAxis">
            <summary>
            Gets or sets the Y axis used by the <see cref="T:Mindscape.WpfElements.Charting.ChartGrid"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.VerticalGridLineBrush">
            <summary>
            Gets or sets the brush applied to vertical grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.HorizontalGridLineBrush">
            <summary>
            Gets or sets the brush applied to horizontal grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.VerticalDashArray">
            <summary>
            Gets or sets the dash array used by vertical grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.HorizontalDashArray">
            <summary>
            Gets or sets the dash array used by horizontal grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalGridLineBrush">
            <summary>
            Gets or sets the MinorVerticalGridLineBrush.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalGridLineBrush">
            <summary>
            Gets or sets the MinorHorizontalGridLineBrush.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.MinorVerticalDashArray">
            <summary>
            Gets or sets the MinorVerticalDashArray.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartGrid.MinorHorizontalDashArray">
            <summary>
            Gets or sets the MinorHorizontalDashArray.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartMouseEventArgs">
            <summary>
            Holds information about mouse events that occur on a chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartMouseEventArgs.PhysicalPoint">
            <summary>
            Gets the physical position of the mouse pointer over the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartMouseEventArgs.LogicalPoint">
            <summary>
            Gets the logical position of the mouse pointer over the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartMouseEventArgs.ConstrainedLogicalPoint">
            <summary>
            Gets the logical postion of the mouse pointer constrained by the dimensions of the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartMouseEventArgs.IsMouseDown">
            <summary>
            Gets whether or not the left mouse button is down.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartMouseEventArgs.IsMouseOver">
            <summary>
            Gets whether or not the mouse pointer is within the bounds of the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartMouseMode">
            <summary>
            Specifies the mouse mode of a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartMouseMode.Zoom">
            <summary>
            The mouse is used for zooming.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartMouseMode.Pan">
            <summary>
            The mouse is used for panning the chart.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ChartMouseMode.None">
            <summary>
            The mouse is pressed over the chart, but is not interacting with the chart.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartSymbol">
            <summary>
            Represents a data point of a data series involving plotted points.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartSymbol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ChartSymbol.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> class.
            </summary>
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> plots.</param>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BooleanToDoubleConverter">
            <summary>
            Selects a double value according to whether the binding source is true or false.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BooleanToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a double according to whether the input is true or false.
            </summary>
            <param name="value">The boolean value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected double.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BooleanToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BooleanToDoubleConverter.TrueDouble">
            <summary>
            The double to return if the value is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BooleanToDoubleConverter.FalseDouble">
            <summary>
            The double to return if the value if false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.CandlestickToPathGeometryConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.Charting.Candlestick"/> data point into a path geometry to create the standard candle stick chart graphics.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.CandlestickToPathGeometryConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.PathGeometry"/> for rendering a <see cref="T:Mindscape.WpfElements.Charting.Stick"/> based on the given values.
            The first value is the hight of the data point. (LowPosition)
            The second value is the distance from the top to the open value. (OpenPosition)
            The third value is the distance from the top to the close value. (ClosePosition)
            The fourth value is the width of the data point. (BoxWidth)
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Media.PathGeometry"/> for rendering a <see cref="T:Mindscape.WpfElements.Charting.Stick"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.CandlestickToPathGeometryConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DoubleToThicknessConverter">
            <summary>
            Converts a double to a <see cref="T:System.Windows.Thickness"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Thickness"/>.
            </summary>
            <param name="value">The double value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Thickness"/> based on the given double.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.IsLeft">
            <summary>
            Gets or sets whether or not the double is applied to the left of the <see cref="T:System.Windows.Thickness"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.IsTop">
            <summary>
            Gets or sets whether or not the double is applied to the top of the <see cref="T:System.Windows.Thickness"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.IsBottom">
            <summary>
            Gets or sets whether or not the double is applied to the bottom of the <see cref="T:System.Windows.Thickness"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DoubleToThicknessConverter.IsRight">
            <summary>
            Gets or sets whether or not the double is applied to the right of the <see cref="T:System.Windows.Thickness"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.HeatmapGradientConverter">
            <summary>
            Creates a <see cref="T:System.Windows.Media.LinearGradientBrush"/> for displaying a <see cref="T:Mindscape.WpfElements.Charting.HeatmapSeries"/> legend icon.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.HeatmapGradientConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Media.GradientBrush"/> into a <see cref="T:System.Windows.Media.LinearGradientBrush"/> that can be used to display a <see cref="T:Mindscape.WpfElements.Charting.HeatmapSeries"/> legend icon.
            </summary>
            <param name="value">The <see cref="T:System.Windows.Media.GradientBrush"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Media.LinearGradientBrush"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.HeatmapGradientConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.HeatmapGradientConverter.Orientation">
            <summary>
            Gets or sets the orientation of the gradient.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToAreaBackgroundConverter">
            <summary>
            Determins the background brush to be applied to an area for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToAreaBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a background brush to apply to an area for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The background brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToAreaBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToAreaChartSymbolMarginConverter">
            <summary>
            Returns the margin to be used on the chart symbol for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToAreaChartSymbolMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Thickness"/> to be used on the chart symbol for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:System.Windows.Thickness"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The <see cref="T:System.Windows.Thickness"/> for the chart symbol.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToAreaChartSymbolMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBackgroundConverter">
            <summary>
            Determins the background brush to be applied to a chart symbol for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a background brush for a chart symbol for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The background brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBorderBrushConverter">
            <summary>
            Determins the border brush to be applied to a chart symbol for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBorderBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a border brush for a chart symbol for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The border brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolBorderBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToChartSymbolSizeConverter">
            <summary>
            Determins the size of a chart symbol for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolSizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the size for a chart symbol for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A size as a double value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToChartSymbolSizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToDashArrayConverter">
            <summary>
            Returns a dash array to be used in the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToDashArrayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a dash array for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The dash array.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToDashArrayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItemToLineStrokeConverter">
            <summary>
            Determins the stroke brush to be applied to a path for a given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToLineStrokeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a line stroke to be applied to a path for the given <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> object produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The line stroke.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItemToLineStrokeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> into an integer value.
            This is useful for setting the Grid.Row and Grid.Column properties of the legend.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns an integer based on the given <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An integer based on the given <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.LeftInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is left.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.RightInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is right.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.TopInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is top.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.BottomInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is bottom.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.CenterInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is center.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToIntegerConverter.NoneInteger">
            <summary>
            Gets or sets the integer to be returned if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is none.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> into a <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Visibility"/> based on the given <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Visibility"/> based on the given <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.LeftVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is left.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.RightVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is right.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.TopVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is top.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.BottomVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is bottom.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.CenterVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is center.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendPositionToVisibilityConverter.NoneVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to return if the <see cref="T:Mindscape.WpfElements.Charting.LegendPosition"/> is none.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:System.Windows.Controls.Orientation"/> value from a binding source to a <see cref="T:System.Windows.Visibility"/> for use by a binding target.
            </summary>
            <param name="value">The Orientation produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns><see cref="P:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.VerticalVisibility"/> if the value is Orientation.Vertical; otherwise <see cref="P:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.HorizontalVisibility"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.VerticalVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to be returned if the orientation is vertical. The default is Visibility.Visible.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.OrientationToVisibilityConverter.HorizontalVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> to be returned if the orientation is horizontal. The default is Visibility.Collapsed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter">
            <summary>
            Creates a <see cref="T:System.Windows.Media.RadialGradientBrush"/> for a <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.RadialGradientBrush"/> for the given <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The created <see cref="T:System.Windows.Media.RadialGradientBrush"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.GradientStops">
            <summary>
            Gets the collection of <see cref="T:System.Windows.Media.GradientStop"/> objects for the <see cref="T:System.Windows.Media.RadialGradientBrush"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.DoughnutGradientStops">
            <summary>
            Gets the collection of <see cref="T:System.Windows.Media.GradientStop"/> objects to use if the pie slice has a doughnut shape.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSliceToRadialGradientBrushConverter.GradientCenter">
            <summary>
            Gets or sets the center point of the <see cref="T:System.Windows.Media.RadialGradientBrush"/>. This point will typically be made up of values between
            0 and 1 which are factors relative to the bounding box of all the pie slices in the chart. The default is (0.5, 0.5).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StickToPathGeometryConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.Charting.Stick"/> data point into a path geometry to create the standard stock chart graphics.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StickToPathGeometryConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.PathGeometry"/> for rendering a <see cref="T:Mindscape.WpfElements.Charting.Stick"/> based on the given values.
            The first value is the hight of the data point. (LowPosition)
            The second value is the distance from the top to the open value. (OpenPosition)
            The third value is the distance from the top to the close value. (ClosePosition)
            The fourth value is the current style. (VisualStyle)
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Media.PathGeometry"/> for rendering a <see cref="T:Mindscape.WpfElements.Charting.Stick"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StickToPathGeometryConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.SelectedDataSeriesChangeddEventArgs">
            <summary>
            Holds information about the DataSeries that was selected
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.SelectedDataSeriesChangeddEventArgs.SelectedDataSeries">
            <summary>
            Gets the selected <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.SelectedDataSeriesChangeddEventArgs.PreviousSelectedDataSeries">
            <summary>
            Gets the previously selected <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.IChartDataExtractor">
            <summary>
            Provides logic for extracting X and Y values from custom data point model objects. This is a high performance alternative to using XBinding and YBinding.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IChartDataExtractor.GetX(System.Object)">
            <summary>
            Gets the X object from the given data point model object.
            </summary>
            <param name="o">The data point model object.</param>
            <returns>The X object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IChartDataExtractor.GetY(System.Object)">
            <summary>
            Gets the Y object from the given data point model object.
            </summary>
            <param name="o">The data point model object.</param>
            <returns>The Y object.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BarRenderingMode">
            <summary>
            Identifies how bars should be rendered.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarRenderingMode.Overlap">
            <summary>
            Bars from different series in the same X position will be overlapped.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarRenderingMode.SideBySide">
            <summary>
            Bars from different series in the same X position will be rendered side-by-side.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BoxplotDataPoint">
            <summary>
            A data point made up of a minimum, maximum, lower quartile, upper quartile and median value used by a <see cref="T:Mindscape.WpfElements.Charting.BoxplotSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ViewModelBase">
            <summary>
            Provides property change notification servics for view model objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.ViewModelBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ViewModelBase.Set``1(``0@,``0,System.String)">
            <summary>
            Sets the specified field, raising the <see cref="E:Mindscape.WpfElements.ViewModelBase.PropertyChanged"/> event if required.
            </summary>
            <typeparam name="T">The type of field.</typeparam>
            <param name="field">The field to set.</param>
            <param name="value">The value to which to set the field.</param>
            <param name="propertyName">The name of the property for the <see cref="E:Mindscape.WpfElements.ViewModelBase.PropertyChanged"/> event.</param>
        </member>
        <member name="E:Mindscape.WpfElements.ViewModelBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BoxplotDataPoint.#ctor(System.Object,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.BoxplotDataPoint"/> class.
            </summary>
            <param name="group">The group identifier plotted along the dependent axis.</param>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <param name="lowerQuartile">The lower quartile value.</param>
            <param name="upperQuartile">The upper quartile value.</param>
            <param name="median">The median value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.Group">
            <summary>
            Gets or sets a group identifier. This defines where the box is plotted along the dependent axis.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.LowerQuartile">
            <summary>
            Gets or sets the lower quartile value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.UpperQuartile">
            <summary>
            Gets or sets the upper quartile value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotDataPoint.Median">
            <summary>
            Gets or sets the median value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DateTimeDouble">
            <summary>
            Represents a data object containing a <see cref="P:Mindscape.WpfElements.Charting.DateTimeDouble.DateTime"/> and a double.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeDouble.#ctor(System.DateTime,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DateTimeDouble"/> class.
            </summary>
            <param name="dateTime">The <see cref="P:Mindscape.WpfElements.Charting.DateTimeDouble.DateTime"/> value.</param>
            <param name="d">The double value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeDouble.DateTime">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.Charting.DateTimeDouble.DateTime"/> value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeDouble.Double">
            <summary>
            Gets or sets the double value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition">
            <summary>
            Defines a date time interval to be used within the specified time spans.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.#ctor(System.TimeSpan,System.TimeSpan,Mindscape.WpfElements.Charting.DateTimeUnit,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition"/> class.
            </summary>
            <param name="minimumTimeSpan">The minimim <see cref="T:System.TimeSpan"/> that can use the date time interval.</param>
            <param name="maximumTimeSpan">The maximum <see cref="T:System.TimeSpan"/> that can use the date time interval.</param>
            <param name="intervalUnit">The <see cref="T:Mindscape.WpfElements.Charting.DateTimeUnit"/> of the interval.</param>
            <param name="intervalMagnitude">The number of date time units that make up the interval.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.#ctor(System.TimeSpan,System.TimeSpan,Mindscape.WpfElements.Charting.DateTimeUnit,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition"/> class.
            </summary>
            <param name="minimumTimeSpan">The minimim <see cref="T:System.TimeSpan"/> that can use the date time interval.</param>
            <param name="maximumTimeSpan">The maximum <see cref="T:System.TimeSpan"/> that can use the date time interval.</param>
            <param name="intervalUnit">The <see cref="T:Mindscape.WpfElements.Charting.DateTimeUnit"/> of the interval.</param>
            <param name="intervalMagnitude">The number of date time units that make up the interval.</param>
            <param name="intervalFormat">The string format used to display <see cref="T:System.DateTime"/> </param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.MinimumTimeSpan">
            <summary>
            Gets or sets the minimum <see cref="T:System.TimeSpan"/> that can use the date time interval.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.MaximumTimeSpan">
            <summary>
            gets or sets the maximum <see cref="T:System.TimeSpan"/> that can use the date time interval.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.IntervalUnit">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.DateTimeUnit"/> of the interval.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.InternalMagnitude">
            <summary>
            Gets or sets the number of date time units that make up the interval.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition.IntervalFormat">
            <summary>
            Gets or sets the string format used to display <see cref="T:System.DateTime"/> values when using this interval.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DateTimeUnit">
            <summary>
            Specifies a time unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Millisecond">
            <summary>
            Milliseconds unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Second">
            <summary>
            Seconds unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Minute">
            <summary>
            Minute unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Hour">
            <summary>
            Hour unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Day">
            <summary>
            Day unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Week">
            <summary>
            Week unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Month">
            <summary>
            Month unit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DateTimeUnit.Year">
            <summary>
            Year unit.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Point3">
            <summary>
            A data object made of 3 double values.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.Point3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.Point3"/> class.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <param name="z">The z value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Point3.X">
            <summary>
            Gets or sets the x value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Point3.Y">
            <summary>
            Gets or sets the y value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Point3.Z">
            <summary>
            Gets or sets the z value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StockDataPoint">
            <summary>
            A data point made up of open-high-low-close values used by stock charts.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StockDataPoint.#ctor(System.DateTime,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.StockDataPoint"/> class.
            </summary>
            <param name="date">The <see cref="P:Mindscape.WpfElements.Charting.StockDataPoint.DateTime"/> value.</param>
            <param name="open">The open value.</param>
            <param name="high">The high value.</param>
            <param name="low">The low value.</param>
            <param name="close">The close value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPoint.Low">
            <summary>
            Gets or sets the low value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPoint.High">
            <summary>
            Gets or sets the high value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPoint.Open">
            <summary>
            Gets or sets the open value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPoint.Close">
            <summary>
            Gets or sets the close value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockDataPoint.DateTime">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.Charting.StockDataPoint.DateTime"/> value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StringDouble">
            <summary>
            Represents a data object containing a string and a double.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StringDouble.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.StringDouble"/> class.
            </summary>
            <param name="s">The string value.</param>
            <param name="d">The double value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StringDouble.String">
            <summary>
            Gets or sets the string value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StringDouble.Double">
            <summary>
            Gets or sets the double value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StringDoubleDouble">
            <summary>
            Represents a data object containing a string value and 2 double values.
            Useful for plotting data in a <see cref="T:Mindscape.WpfElements.Charting.BubbleSeries"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StringDoubleDouble.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.StringDoubleDouble"/> class.
            </summary>
            <param name="str">The string value, generally plotted along the X axis.</param>
            <param name="d">The double value, generally plotted along the Y axis.</param>
            <param name="size">The size value, used for the size of the bubbles.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StringDoubleDouble.String">
            <summary>
            Gets or sets the string value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StringDoubleDouble.Double">
            <summary>
            Gets or sets the double value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StringDoubleDouble.Size">
            <summary>
            Gets or sets the size value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BoxplotSeries">
            <summary>
            Renders data as a box and whisker diagram on the charting canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataSeries">
            <summary>
            Represents a data series that can be plotted by a <see cref="P:Mindscape.WpfElements.Charting.DataSeries.Chart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a dependency property value changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.LegendIconTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.AlwaysShowYAxisZeroProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.AlwaysShowYAxisZero"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.YAxisDataBufferProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.YAxisDataBuffer"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.YAxisTitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.YAxisTitle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.XAxisTitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.XAxisTitle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.HighlightModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.HighlightMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.SeriesBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SeriesBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.IsShownInLegendProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.IsShownInLegend"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.OnLegendItemsChanged">
            <summary>
            Raises the LegendItemsChanged event.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.OnXAxisChanged">
            <summary>
            Called when the XAxis property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.OnYAxisChanged">
            <summary>
            Called when the YAxis property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.AllowsDataSamplingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.AllowsDataSampling"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.IsDataSamplingUsedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.IsDataSamplingUsed"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.IsMinMaxSamplingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.IsMinMaxSamplingEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.DataSamplerProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.DataSampler"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.ConvertLogicalToPhysicalPoint(System.Windows.Point)">
            <summary>
            Converts the given logical data point to a physical point on the chart canvas.
            </summary>
            <param name="point">The logical data point to convert.</param>
            <returns>A physical position on the chart canvas based on the given logical data point.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.ConvertPhysicalToLogicalPoint(System.Windows.Point)">
            <summary>
            Converts the given physical position to a logical point based on the X and Y axes that this series uses.
            </summary>
            <param name="point">The physical position to convert.</param>
            <returns>A logical point based on the given physical position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.GetDataPoint(System.Object,System.Int32)">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> mapped to the given data object and index.
            </summary>
            <param name="o">The data object.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> mapped to the given object if it exists.</returns>
            <param name="index">The index of the data object within the ItemsSource.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.SelectedDataPointProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SelectedDataPoint"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeries.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SelectedItem"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.PrepareDataPoint(Mindscape.WpfElements.Charting.CartesianDataPoint,System.Int32)">
            <summary>
            Prepares the given <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> to participate in selection features and data notifications.
            </summary>
            <param name="dataPoint">The <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> to prepare.</param>
            <param name="index">The index of the data object within the ItemsSource.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataSeries.GetPoint(Mindscape.WpfElements.Charting.CartesianDataPoint,System.Int32)">
            <summary>
            Returns a <see cref="T:System.Windows.Point"/> containing the X and Y logical axis values of the given <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            In the case that the given data object is a primitive numerical value, the reverseAxes parameter
            can be used to specify that YAxis is the independent axis instead of the XAxis by default. This is useful for
            data series such as horizontal bar charts.
            </summary>
            <param name="dataPoint">The <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> holding the data to calculate a <see cref="T:System.Windows.Point"/> for.</param>
            <param name="index">The index of the data point in the items source</param>
            <returns>A <see cref="T:System.Windows.Point"/> containg the X and Y axis values for the given data object.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.LegendItems">
            <summary>
            Gets a list of legend items to be displayed in the legend for this <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.LegendIconTemplate">
            <summary>
            Gets or sets the LegendIconTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.ItemsSource">
            <summary>
            Gets or sets the ItemsSource. This is the data to be plotted on a <see cref="P:Mindscape.WpfElements.Charting.DataSeries.Chart"/> control.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.AlwaysShowYAxisZero">
            <summary>
            Gets or sets whether or not the Y axis will always include the zero coordinate when the range is automatically being set.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.AlwaysShowYAxisZeroProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.YAxisDataBuffer">
            <summary>
            Gets or sets a logical data buffer for automatically setting the minimum and maximum Y axis values.
            The default is 1. The data buffer is the logical gap between the largest/smallest data point and the calculated limits of the Y axis.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.YAxisDataBufferProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.YAxisTitle">
            <summary>
            Gets or sets the title of the Y axis that this data series will be plotted against.
            This is used for plotting along an alternate Y axis of the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.XAxisTitle">
            <summary>
            Gets or sets the title of the X axis that this data series will be plotted against.
            This is used for plotting along an alternate X axis of the <see cref="P:Mindscape.WpfElements.Charting.DataSeries.Chart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.SelectionMode">
            <summary>
            Gets or sets the selection mode for the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects displayed in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.HighlightMode">
            <summary>
            Gets or sets the highlight mode of the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.IsSelected">
            <summary>
            Gets or sets whether or not this series is selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.SeriesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to color the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.IsShownInLegend">
            <summary>
            Gets or sets whether or not this data series should be displayed in the legend.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.IsShownInLegendProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.DataSeries.LegendItemsChanged">
            <summary>
            Raised when the legend items for this <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.XAxis">
            <summary>
            Gets the X axis that the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> is plotted against.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.YAxis">
            <summary>
            Gets the Y axis that the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> is plotted against.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.SupportsDataSampling">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> supports sampling for large data sets.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.AllowsDataSampling">
            <summary>
            Gets or sets whether or not this <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> will use data sampling. Data sampling is used to skip over a calculated number of
            data points to improve the performance of plotting charts with large data sets. The default is true.
            Note that it is possible for data sampling to skip over outlying data points.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.AllowsDataSamplingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.IsDataSamplingUsed">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> is currently skipping some data points.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.IsDataSamplingUsedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.IsMinMaxSamplingEnabled">
            <summary>
            Gets or sets the IsMinMaxSamplingEnabled.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.IsMinMaxSamplingEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.DataSampler">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.IChartDataSampler"/> used for calculating the index interval.
            The default is a <see cref="T:Mindscape.WpfElements.Charting.FixedSampleCountSampler"/> with a max data point count of 400.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.DataSamplerProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.MinimumIndex">
            <summary>
            Gets the index of the data that is closest to the actual minimum value of the independent axis.
            Custom data series can use this value to optimise chart rendering.
            </summary>
            <remarks>This property should be accessed only from the <see cref="M:Mindscape.WpfElements.Charting.DataSeries.BuildChartCore"/> method,
            and is only meaningful if <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SupportsDataSampling"/> is true for the series.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.MaximumIndex">
            <summary>
            Gets the index of the data that is closest to the actual maximum value of the independent axis.
            Custom data series can use this value to optimise chart rendering.
            </summary>
            <remarks>This property should be accessed only from the <see cref="M:Mindscape.WpfElements.Charting.DataSeries.BuildChartCore"/> method,
            and is only meaningful if <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SupportsDataSampling"/> is true for the series.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.IndexStep">
            <summary>
            Gets the index step between data point that are to be rendered.
            Custom data series can use this value to optimise chart rendering.
            </summary>
            <remarks>This property should be accessed only from the <see cref="M:Mindscape.WpfElements.Charting.DataSeries.BuildChartCore"/> method,
            and is only meaningful if <see cref="P:Mindscape.WpfElements.Charting.DataSeries.SupportsDataSampling"/> is true for the series.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.XBinding">
            <summary>
            Gets or sets a binding used to extract the X axis value from a data object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.YBinding">
            <summary>
            Gets or sets a binding used to extract the Y axis value from a data object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.DataExtractor">
            <summary>
            Gets or sets the data extractor used to get X and Y values from custom data point model objects. This is a high performance alternative to using XBinding and YBinding.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.LabelBinding">
            <summary>
            Gets or sets a binding used to extract the label content from a data point model object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.ToolTipBinding">
            <summary>
            Gets or sets a binding used to extract the tool tip content from a data point model object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.DataPoints">
            <summary>
            Gets a read only collection containing the <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> objects within the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            A <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/> is the graphical representation of plotted data and is created by the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.SelectedDataPoint">
            <summary>
            Gets the currently selected <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            This will be null if none of the data points in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.SelectedDataPointProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.DataSeries.SelectedDataPointChanged">
            <summary>
            Raised when the selected data point changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataSeries.SelectedItem">
            <summary>
            Gets or sets the selected data object.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataSeries.SelectedItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BoxplotSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.BoxplotSeries"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxplotSeries.BoxAndWhiskerStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxplotSeries.BoxAndWhiskerStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BoxplotSeries.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BoxplotSeries.Orientation"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.SupportsDataSampling">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.BoxplotSeries"/> supports data sampling.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.BoxAndWhiskerStyle">
            <summary>
            Gets or sets the BoxAndWhiskerStyle.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxplotSeries.BoxAndWhiskerStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.Orientation">
            <summary>
            Gets or sets the Orientation.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BoxplotSeries.OrientationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.MinimumBinding">
            <summary>
            Gets or set the binding used to extract the minimum value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.MaximumBinding">
            <summary>
            Gets or set the binding used to extract the maximum value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.LowerQuartileBinding">
            <summary>
            Gets or set the binding used to extract the lower quartile value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.UpperQuartileBinding">
            <summary>
            Gets or set the binding used to extract the upper quartile value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BoxplotSeries.MedianBinding">
            <summary>
            Gets or set the binding used to extract the meadian value from each data point.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.CandlestickSeries">
            <summary>
            A series primarily used for plotting open-high-low-close data in the form of candle sticks.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StockSeriesBase">
            <summary>
            The base class for stock series involving open, high, low and close values.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StockSeriesBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.StockSeriesBase"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeSeriesBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeSeriesBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockSeriesBase.PositiveStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockSeriesBase.PositiveStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeStyle"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.HighBinding">
            <summary>
            Gets or set the binding used to extract the high value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.LowBinding">
            <summary>
            Gets or set the binding used to extract the low value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.OpenBinding">
            <summary>
            Gets or set the binding used to extract the open value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.CloseBinding">
            <summary>
            Gets or set the binding used to extract the close value from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeSeriesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to render negative data points.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeSeriesBrushProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.PositiveStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> used when the close value is higher than the open value of a data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockSeriesBase.PositiveStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> used when the close value is lower than the open value of a data point.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StockSeriesBase.NegativeStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.CandlestickSeries.SupportsDataSampling">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/> supports data sampling.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.FloatingBarSeries">
            <summary>
            Plots a floating bar series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.  A floating bar series is represented
            by a set of vertical or horizontal bars each having its own baseline.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BarSeries">
            <summary>
            Plots a bar series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.  A bar series is represented
            by a set of vertical bars.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.BarStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.BarStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.ShowDataLabelsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.ShowDataLabels"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.DataLabelStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.DataLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.ShowAllLegendItemsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.ShowAllLegendItems"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.BaselineStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.BaselineStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.BarSizeFactorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.BarSizeFactor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.LogicalBarSizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.LogicalBarSize"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.BaselineProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.Baseline"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BarSeries.BarRenderingModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.BarRenderingMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BarSeries.SetTitle(Mindscape.WpfElements.Charting.Bar,System.Int32)">
            <summary>
            Sets the title of the given <see cref="T:Mindscape.WpfElements.Charting.Bar"/> based on the TitleBinding property or
            the bar index if there is no TitleBinding.
            </summary>
            <param name="bar">The <see cref="T:Mindscape.WpfElements.Charting.Bar"/> to find a title for.</param>
            <param name="index">The index of the <see cref="T:Mindscape.WpfElements.Charting.Bar"/> within the items source. This is used
            to create a default title if the Bar has no TitleBinding.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.Brushes">
            <summary>
            Gets the brushes used to fill the bars.  If there are more bars than brushes, the
            brushes are used in rotation.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.SupportsDataSampling">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/> supports data sampling.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.Orientation">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.Charting.BarSeries.Orientation"/> of the bars. The default is Orientation.Vertical.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.BarStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the bars.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.ShowDataLabels">
            <summary>
            Gets or sets the whether or not to display the data labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.DataLabelStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the data labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.ShowAllLegendItems">
            <summary>
            Gets or sets whether or not each item in the ItemsSource should have its own legend item.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.BaselineStyle">
            <summary>
            Gets or sets the style applied to the baseline of the bar chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.BarSizeFactor">
            <summary>
            Gets or sets the size factor used to calculate the thickness of the bars. This will typically be a value between 0 and 1.
            This value is the factor between a single axis unit and the thickness of a bar. A value of 1 will cause all the bars to
            be adjacent with no gaps between them (like a histogram). Smaller values put spaces between the bars. When plotting multiple
            bar series, the BarSizeFactor is used to calculate the total thickness of all the bars plotted on the same independent axis value.
            This is a dependency property. The default is 0.8.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.LogicalBarSize">
            <summary>
            Gets or sets the logical size available to bars in this bar series.
            When set to zero, the logical size will be automatically calculated based on the spread of the data.
            The default is zero.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BarSeries.LogicalBarSizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.Baseline">
            <summary>
            Gets or sets the baseline position of this <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/>. This is the line that separates negative and positive values.
            The default is 0.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BarSeries.BaselineProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.BarRenderingMode">
            <summary>
            Gets or sets how to render the bars. The default is side-by-side.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.BarSeries.BarRenderingModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.TitleBinding">
            <summary>
            Gets or sets the data binding used to extract the bar title from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BarSeries.LegendItems">
            <summary>
            Gets a list of legend items to be displayed in a legend for this <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.FloatingBarSeries.BaselineBinding">
            <summary>
            Gets or sets the binding used to extract the baseline value from a data point model.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.HeatmapSeries">
            <summary>
            Renders a heatmap on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.HeatmapSeries.MissingColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.HeatmapSeries.MissingColor"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.HeatmapSeries.MissingColor">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Color"/> used to display missing data.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.HeatmapSeries.MissingColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.HeatmapSeries.SupportsDataSampling">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StepSeries">
            <summary>
            Plots a stair/step series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LineAreaSeriesBase">
            <summary>
            A base class for <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> that use lines to plot data, such as <see cref="T:Mindscape.WpfElements.Charting.LineSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PointSeriesBase">
            <summary>
            A base class for data series which plot data using points, such as line series or
            scatter graphs.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolSizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolSize"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabelsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabels"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabelLinesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabelLines"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PointSeriesBase.DataLabelStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PointSeriesBase.DataLabelStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.PerformLabelBoundsCorrection(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the constrained position of a data label.
            </summary>
            <param name="left">The desired horizontal position of the data label.</param>
            <param name="top">The desired vertical position of the data label.</param>
            <param name="labelWidth">The width of the data label.</param>
            <param name="labelHeight">The height of the data label.</param>
            <returns>The position of the data label constrained by the bounds of the chart canvas.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.GetWidth(System.Object)">
            <summary>
            Returns the width of a data label for the given data object.
            </summary>
            <param name="data">The data object.</param>
            <returns>The width of a data label displaying the given data object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.GetHeight(System.Object)">
            <summary>
            Returns the height of a data label for the given data object.
            </summary>
            <param name="data">The data object.</param>
            <returns>The width of a data label displaying the given data object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.GetChartSymbol(System.Object,System.Int32,System.Windows.Point@)">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> for the given data object.
            </summary>
            <param name="o">The data object that the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> displays.</param>
            <param name="index">The index of the data.</param>
            <param name="point">The logical plot position of the data.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> to display the given data object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.SetupChartSymbol(Mindscape.WpfElements.Charting.ChartSymbol,System.Windows.Point)">
            <summary>
            Sets the style and position of the given <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> and adds it to the canvas.
            </summary>
            <param name="symbol">The <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> to setup.</param>
            <param name="normalPoint">The physical position of the <see cref="T:Mindscape.WpfElements.Charting.ChartSymbol"/> on the chating canvas.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.AddDataLabel(System.Int32,System.Windows.Media.Brush)">
            <summary>
            Adds a data label to the chart canvas.
            </summary>
            <param name="index">The index of the data to create a label for.</param>
            <param name="brush">The <see cref="T:System.Windows.Media.Brush"/> used to color the data label.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PointSeriesBase.AddDataLabel(System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Media.Brush)">
            <summary>
            Adds a data label to the chart canvas.
            </summary>
            <param name="index">The index of the data to create a label for.</param>
            <param name="currentPoint">The current logical data position.</param>
            <param name="nextPoint">The next logical data position.</param>
            <param name="brush">The <see cref="T:System.Windows.Media.Brush"/> used to color the data label.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolSize">
            <summary>
            Gets or sets the size of the symbols rendered by this data series.
            This property affects both the width and height of the symbols.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.PointSeriesBase.SymbolSizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabels">
            <summary>
            Gets or sets whether or not to display the data labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PointSeriesBase.ShowDataLabelLines">
            <summary>
            Gets or sets whether or not to display the data label lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PointSeriesBase.DataLabelStyle">
            <summary>
            Gets or sets the DataLabelStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LineAreaSeriesBase.LineStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.LineAreaSeriesBase.LineStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LineAreaSeriesBase.DashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.LineAreaSeriesBase.DashArray"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LineAreaSeriesBase.GetY(System.Double)">
            <summary>
            Returns the logical Y axis value for the given X axis value limited to the currently plotted data.
            </summary>
            <param name="x">The logical X axis value.</param>
            <returns>The logical Y axis value.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LineAreaSeriesBase.LineStyle">
            <summary>
            Gets or sets the style to be applied to the line.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LineAreaSeriesBase.DashArray">
            <summary>
            Gets or sets the dash array for the line.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LineAreaSeriesBase.SupportsDataSampling">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> supports sampling for large data sets.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StockSeries">
            <summary>
            A data series primarily used for plotting open-high-low-close data in the form of a
            vertical line with an open tick to the left and a close tick to the right.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StockSeries.SupportsDataSampling">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.BarSeries"/> supports data sampling.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Stick">
            <summary>
            The graphical data point of a <see cref="T:Mindscape.WpfElements.Charting.StockSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StripeLine">
            <summary>
            Renders an individual stripe line on a chart. Stripe lines can have optional outlines and a label.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StripeLine.#ctor">
            <summary>
            Initializes anew instance of the <see cref="T:Mindscape.WpfElements.Charting.StripeLine"/> clas..
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.StartValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.StartValue"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.EndValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.EndValue"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.RangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.Range"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.ContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.Content"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.ContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.ContentTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.StripeStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.StripeStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.YAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.XAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StripeLine.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.Orientation"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.StartValue">
            <summary>
            Gets or sets the axis plot position of the start of the stripe line.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.StartValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.EndValue">
            <summary>
            Gets or sets the axis plot position of the end of the stripe line.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.EndValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.Range">
            <summary>
            Gets or sets the logical distance between the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.StartValue"/> and the <see cref="P:Mindscape.WpfElements.Charting.StripeLine.EndValue"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.RangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.Content">
            <summary>
            Gets or sets the optional content displayed on the stripe line.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.ContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.ContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display the content.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.ContentTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.StripeStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the stripe. The target type of the style is <see cref="T:System.Windows.Shapes.Shape"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.StripeStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.YAxis">
            <summary>
            Gets or sets the Y axis. By default this will be the primary Y axis of the host chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.XAxis">
            <summary>
            Gets or sets the X axis. By default this will be the primary X axis of the host chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StripeLine.Orientation">
            <summary>
            Gets or sets the orientation of the marked stripes. The default is horizontal.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StripeLine.OrientationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkOpacityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkOpacity"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkMarginProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkMargin"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkPaddingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkPadding"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkRenderTransformProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkRenderTransform"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkTextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkText"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkClipProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkClip"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkEffectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkEffect"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkFlowDirectionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFlowDirection"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkFontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFontFamily"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Watermark.WatermarkFontSizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFontSize"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkVisibility">
            <summary>
            Gets or sets the WatermarkVisibility.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkOpacity">
            <summary>
            Gets or sets the WatermarkOpacity.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkMargin">
            <summary>
            Gets or sets the WatermarkMargin.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkPadding">
            <summary>
            Gets or sets the WatermarkPadding.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkRenderTransform">
            <summary>
            Gets or sets the WatermarkRenderTransform.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkText">
            <summary>
            Gets or sets the WatermarkText.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkClip">
            <summary>
            Gets or sets the WatermarkClip.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkEffect">
            <summary>
            Gets or sets the WatermarkEffect.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFlowDirection">
            <summary>
            Gets or sets the WatermarkFlowDirection.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFontFamily">
            <summary>
            Gets or sets the WatermarkFontFamily.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Watermark.WatermarkFontSize">
            <summary>
            Gets or sets the WatermarkFontSize.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ChannelColorPicker">
            <summary>
            A color picker control that uses color sliders to modify the individual color channels (red, green, blue, alpha).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NotifyingColorPickerBase">
            <summary>
            A base class for color pickers that provide individual color channel editing.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NotifyingColorPickerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.NotifyingColorPickerBase"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NotifyingColorPickerBase.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.SelectedColor"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NotifyingColorPickerBase.OnSelectedColorChanged">
            <summary>
            Called when the selected color changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NotifyingColorPickerBase.NotifyingColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.NotifyingColor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NotifyingColorPickerBase.HProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.H"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NotifyingColorPickerBase.SProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.S"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NotifyingColorPickerBase.VProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.V"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColorPickerBase.SelectedColor">
            <summary>
            Gets or sets the current <see cref="T:System.Windows.Media.Color"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NotifyingColorPickerBase.SelectedColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColorPickerBase.NotifyingColor">
            <summary>
            Gets a <see cref="P:Mindscape.WpfElements.NotifyingColorPickerBase.NotifyingColor"/> which provides support for changing individual color channels of the selected color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NotifyingColorPickerBase.NotifyingColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColorPickerBase.H">
            <summary>
            Gets or sets the hue of the selected color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NotifyingColorPickerBase.HProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColorPickerBase.S">
            <summary>
            Gets or sets the saturation of the selected color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NotifyingColorPickerBase.SProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColorPickerBase.V">
            <summary>
            Gets or sets the value (brightness) of the selected color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NotifyingColorPickerBase.VProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="M:Mindscape.WpfElements.ChannelColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ChannelColorPicker"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChannelColorPicker.IsRgbVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChannelColorPicker.IsRgbVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChannelColorPicker.IsHsvVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChannelColorPicker.IsHsvVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChannelColorPicker.IsAlphaVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChannelColorPicker.IsAlphaVisible"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ChannelColorPicker.IsRgbVisible">
            <summary>
            Gets or sets whether the RGB channel editors are visible. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChannelColorPicker.IsRgbVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ChannelColorPicker.IsHsvVisible">
            <summary>
            Gets or sets whether the HSV channel editors are visible. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChannelColorPicker.IsHsvVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ChannelColorPicker.IsAlphaVisible">
            <summary>
            Gets or sets whether the Alpha channel editor is visible. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChannelColorPicker.IsAlphaVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.ColorButton">
            <summary>
            A button that can be added to a <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/> to allow the user to select a particular <see cref="P:Mindscape.WpfElements.ColorButton.Color"/>.
            This is useful for an 'Automatic' color button or 'No color' button.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorButton.OnChecked(System.Windows.RoutedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.ColorButton"/> is checked.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorButton.OnUnchecked(System.Windows.RoutedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.ColorButton"/> is unchecked.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorButton.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over this <see cref="T:Mindscape.WpfElements.ColorButton"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ColorButton.ColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorButton.Color"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorButton.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorButton.SelectedColor"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorButton.Color">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.ColorButton.Color"/> of this <see cref="T:Mindscape.WpfElements.ColorButton"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorButton.ColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorButton.SelectedColor">
            <summary>
            Gets or sets the currently selected color of the color picker.
            This is for determining if this <see cref="T:Mindscape.WpfElements.ColorButton"/> is checked or not.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorButton.SelectedColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.ColorSquare">
            <summary>
            A control for modifying the saturation and brightness of a color.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ColorSquare"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed over this <see cref="T:Mindscape.WpfElements.ColorSquare"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved over this <see cref="T:Mindscape.WpfElements.ColorSquare"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over this <see cref="T:Mindscape.WpfElements.ColorSquare"/> .
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.ColorSquare"/> loses mouse capture.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ColorSquare.CursorPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorSquare.CursorPosition"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorSquare.OnSelectedColorChanged">
            <summary>
            Called when the selected color changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorSquare.CursorPosition">
            <summary>
            Gets the position of the color cursor.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorSquare.CursorPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownPopupItem">
            <summary>
            A control that acts like a menu item which can be added to a popup. The drop down pane can support any content.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownPopupItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse enters this <see cref="T:Mindscape.WpfElements.DropDownPopupItem"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownPopupItem.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownPopupItem.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownPopupItem.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownPopupItem.Header"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownPopupItem.ContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownPopupItem.Content"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownPopupItem.ContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownPopupItem.ContentTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownPopupItem.IconProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownPopupItem.Icon"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownPopupItem.IsDropDownOpen">
            <summary>
            Gets or sets whether or not the drop down pane is open.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownPopupItem.IsDropDownOpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownPopupItem.Header">
            <summary>
            Gets or sets the header that labels this <see cref="T:Mindscape.WpfElements.DropDownPopupItem"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownPopupItem.HeaderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownPopupItem.Content">
            <summary>
            Gets or sets the content of the drop down pane.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownPopupItem.ContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownPopupItem.ContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> for the drop down content.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownPopupItem.ContentTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownPopupItem.Icon">
            <summary>
            Gets or sets the icon that appears in this <see cref="T:Mindscape.WpfElements.DropDownPopupItem"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownPopupItem.IconProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.HsvColorPicker">
            <summary>
            A color picker control for editing the hue, saturation and value (brightness) of a color using a <see cref="T:Mindscape.WpfElements.ColorSquare"/> and a hue slider.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.HsvColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.HsvColorPicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.HsvColorPicker.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MoreColorsButton">
            <summary>
            A button that can be added to a <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/> to provide advanced color editing.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MoreColorsButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MoreColorsButton"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MoreColorsButton.NewColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MoreColorsButton.NewColor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MoreColorsButton.CurrentColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MoreColorsButton.CurrentColor"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MoreColorsButton.NewColor">
            <summary>
            Gets or sets the color being edited by the user.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MoreColorsButton.NewColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MoreColorsButton.CurrentColor">
            <summary>
            Gets or sets the current un-edited color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MoreColorsButton.CurrentColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.MoreColorsButtonCommands">
            <summary>
            Contains commands used with the <see cref="T:Mindscape.WpfElements.MoreColorsButton"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MoreColorsButtonCommands.AcceptColor">
            <summary>
            A command for selecting the current color of the <see cref="T:Mindscape.WpfElements.MoreColorsButton"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MoreColorsButtonCommands.CancelColor">
            <summary>
            A command for ignoring the current color of the <see cref="T:Mindscape.WpfElements.MoreColorsButton"/> and closing the drop down.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorTextBox">
            <summary>
            Selects a <see cref="T:System.Windows.Media.Color"/> via text input.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed while this <see cref="T:Mindscape.WpfElements.ColorTextBox"/> has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.ColorTextBox"/> gains keyboard focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed over this <see cref="T:Mindscape.WpfElements.ColorTextBox"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over this <see cref="T:Mindscape.WpfElements.ColorTextBox"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.ColorTextBox"/> loses focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ColorTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Called when the text of this <see cref="T:Mindscape.WpfElements.ColorTextBox"/> changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.SelectedColor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.AlwaysShowAlphaHexEncodingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.AlwaysShowAlphaHexEncoding"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.IsHashSymbolDisplayedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.IsHashSymbolDisplayed"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.IsMinimizeHexEncodingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.IsMinimizeHexEncodingEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.SelectAllOnEntryProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.SelectAllOnEntry"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorTextBox.UpdateSelectedColorWhileEditingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorTextBox.UpdateSelectedColorWhileEditing"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.SelectedColor">
            <summary>
            Gets or sets the selected <see cref="T:System.Windows.Media.Color"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.SelectedColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.AlwaysShowAlphaHexEncoding">
            <summary>
            Gets or sets whether or not alpha hex encoding should always be displayed when displaying the color as a hexadecimal value.
            If this property is false, the hexadecimal alpha value will not be displayed for opaque colors. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.AlwaysShowAlphaHexEncodingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.IsHashSymbolDisplayed">
            <summary>
            Gets or sets whether or not a hash (#) prefix should be displayed when displaying the color as a hexadecimal value. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.IsHashSymbolDisplayedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.IsMinimizeHexEncodingEnabled">
            <summary>
            Gets or sets whether or not to minimize the hexadecimal color encoding when possible. This means if the red, green and blue
            color channels all produce a hex value with identical digits, the hex encoding will be minimized. For example #112233 would become #123.
            Note that this will only be used if the alpha hex encoding is not displayed. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.IsMinimizeHexEncodingEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.SelectAllOnEntry">
            <summary>
            Gets or sets whether this <see cref="T:Mindscape.WpfElements.ColorTextBox"/> should select all text when it gains focus. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.SelectAllOnEntryProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorTextBox.UpdateSelectedColorWhileEditing">
            <summary>
            Gets or sets whether or not the SelectedColor property is updated while the user is editing the text.
            If this property is set to false, the SelectedColor property will only update when this <see cref="T:Mindscape.WpfElements.ColorTextBox"/>
            loses focus, or the Enter key is pressed.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorTextBox.UpdateSelectedColorWhileEditingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.BooleanToObjectConverter">
            <summary>
            Converts a boolean to an object based on the TrueObject and FalseObject properties.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToObjectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a boolean to an object.
            </summary>
            <param name="value">The boolean value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The object mapped to the boolean value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToObjectConverter.TrueObject">
            <summary>
            Gets or sets the object to be returned if the value is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToObjectConverter.FalseObject">
            <summary>
            Gets or sets the object to be returned if the value is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorChannelAdjustmentBrushMultiConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> or a <see cref="T:System.Windows.Media.SolidColorBrush"/> into a <see cref="T:System.Windows.Media.LinearGradientBrush"/> that displays the effects of changing
            a specified channel of the given color. The second value in the mutlti binding is a hue value that is considered for the 'Saturation' and 'Value' channels.
            This is used for displaying mixer channels in a <see cref="T:Mindscape.WpfElements.ChannelColorPicker"/> template.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelAdjustmentBrushMultiConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> or a <see cref="T:System.Windows.Media.SolidColorBrush"/> into a <see cref="T:System.Windows.Media.LinearGradientBrush"/> that displays the effects of changing
            a specified channel of the given color. The second value in the mutlti binding is a hue value that is considered for the 'Saturation' and 'Value' channels.
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Media.LinearGradientBrush"/> for displaying mixer channels in a <see cref="T:Mindscape.WpfElements.ChannelColorPicker"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelAdjustmentBrushMultiConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelAdjustmentBrushMultiConverter.Channel">
            <summary>
            Gets or sets the channel that is affected by this <see cref="T:Mindscape.WpfElements.ColorChannelAdjustmentBrushMultiConverter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IntegerToMonthStringConverter">
            <summary>
            Converts an integer into the name of a month.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IntegerToMonthStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an integer to a month string. The integer needs to be between 0 and 11 inclusively.
            </summary>
            <param name="value">The integer value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A month name based on the current thread culture and the given integer.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.IntegerToMonthStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.NullableToStringConverter">
            <summary>
            Handles nullable types.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NullableToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            returns the given value with no conversion.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The unconverted value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.NullableToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns null if the target type is nullable and the given value is the empty string. Otherwise returns the given value.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>Null if the target type is nullable and the given value is the empty string. Otherwise returns the given value.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSpanConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter"/> for converting a string into a <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given string value into a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>A <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the sourceType is a string.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if the sourceType is a string.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.AggregateBase">
            <summary>
            Base class for aggregates.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IAggregate">
            <summary>
            Implementations of this interface calculate various aggregate values for a list of objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IAggregate.Calculate(System.Collections.IEnumerable)">
            <summary>
            Calculates the aggregate for the given collection of items.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The aggregate value.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.IAggregate.Result">
            <summary>
            Gets the result of the aggregate.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AggregateBase.Calculate(System.Collections.IEnumerable)">
            <summary>
            Calculates the aggregate for the given collection of items.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The aggregate value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AggregateBase.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Calculates the aggregate for the given collection of items.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The aggregate value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AggregateBase.GetValue(System.Object)">
            <summary>
            Returns a value from the given item based on the property info.
            </summary>
            <param name="item">A data object.</param>
            <returns>A value extracted from the given data object.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.AggregateBase.Result">
            <summary>
            Gets the result of the aggregate.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.AverageAggregate">
            <summary>
            An aggregate that calculates the average of all values in the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AverageAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Calculates the average of all the items in the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The avergae of the items in the collection.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.CountAggregate">
            <summary>
            An aggregate that calculates the number of items in the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.CountAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Calculates the number of items in the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The number of items in the collection.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.MaximumAggregate">
            <summary>
            An aggregate that finds the largest value in the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.MaximumAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Finds the largest value in the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The largest value in the collection</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.MinimumAggregate">
            <summary>
            An aggregate the finds the smallest value in the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.MinimumAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Finds the smallest value in the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The smallest value in the collection.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.Mode">
            <summary>
            Represents the mode (most occurring value) of a collection and includes the percantage of occurrence.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.Mode.#ctor(System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.Mode"/> class.
            </summary>
            <param name="value">The mode value.</param>
            <param name="percentage">The percentage of occurrence.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.Mode.Value">
            <summary>
            Gets the mode value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.Mode.Percentage">
            <summary>
            Gets the percentage of occurrence.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ModeAggregate">
            <summary>
            An aggregate that calculates the mode (most occurring value) of a collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ModeAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Calculates the mode (most occurring value) of the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The mode (most occurring value) of the collection.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.SumAggregate">
            <summary>
            An aggregate that calculates the sum of all values in the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.SumAggregate.CalculateCore(System.Collections.IEnumerable)">
            <summary>
            Calculates the sum of the items in the collection.
            </summary>
            <param name="items">The collection of items.</param>
            <returns>The sum of the items.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.AutoColumnWidthBehavior">
            <summary>
            Defines the behavior of automatic column widths.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.AutoColumnWidthBehavior.OneTime">
            <summary>
            The column widths are calculated once whenever the items source changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.AutoColumnWidthBehavior.Dynamic">
            <summary>
            The column widths are constantally recalculated as the data scrolls.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.IPropertyInfo">
            <summary>
            Provides access to property metadata.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.GetIndexParameters">
            <summary>
            Returns an array of all the index parameters for the property.
            </summary>
            <returns>An array containing index parameter metadata.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Returns the value of the property.
            </summary>
            <param name="obj">The object whose property value will be returned.</param>
            <param name="invokeAttr">The invocation attribute.</param>
            <param name="binder">A reflection binder, or null to use the default binder.</param>
            <param name="index">The index values for indexed properties, or null for 
            non-indexed properties.</param>
            <param name="culture">The culture to use for localization.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Sets the value of the property.
            </summary>
            <param name="obj">The object whose property value will be set.</param>
            <param name="value">The value to which to set the property.</param>
            <param name="invokeAttr">The invocation attribute.</param>
            <param name="binder">A reflection binder, or null to use the default binder.</param>
            <param name="index">The index values for indexed properties, or null for 
            non-indexed properties.</param>
            <param name="culture">The culture to use for localization.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.Attributes">
            <summary>
            Gets the attributes for the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.CanRead">
            <summary>
            Gets a value indicating whether the property can be read.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.CanWrite">
            <summary>
            Gets a value indicating whether the property can be written to.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.DeclaringType">
            <summary>
            Gets the class that declares this property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.DisplayName">
            <summary>
            Gets the display name of the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.Category">
            <summary>
            Gets the category of the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.Description">
            <summary>
            Gets the description of the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.IsBrowsable">
            <summary>
            Gets whether the property should be displayed in the grid.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.PropertyType">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.Converter">
            <summary>
            Gets the type converter for this property.
            </summary>
            <remarks>This may return null if no type converter is defined for the property.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.AsPropertyInfo">
            <summary>
            Gets a <see cref="T:System.Reflection.PropertyInfo"/> representing this property.
            </summary>
            <remarks>This member is provided primarily for compatibility.  Applications 
            should use IPropertyInfo members to access metadata unless they must interface to
            code that expects a <see cref="T:System.Reflection.PropertyInfo"/>.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyInfo.AsPropertyDescriptor">
            <summary>
            Gets a <see cref="T:System.ComponentModel.PropertyDescriptor"/> representing this property.
            </summary>
            <remarks>This member is provided primarily for compatibility.  Applications 
            should use IPropertyInfo members to access metadata unless they must interface to
            code that expects a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellEventArgs">
            <summary>
            Contains event information for when mouse over occurs on a cell.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellEventArgs.Cell">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> that the event relates to.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridIndentConverter">
            <summary>
            Converts a grouping level and an indent size into the total number of pixels to indent of data grid row.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridIndentConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a grouping level and an indent size into the total number of pixels to indent of data grid row.
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The total number of pixels to indent of data grid row.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridIndentConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridItemsSourceConverter">
            <summary>
            Converts the items source of a data grid if necessary. This is useful for setting the items source to be a <see cref="T:System.Data.DataTable"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridItemsSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Data.DataTable"/> into a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper"/>.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> that can be used to set the items source of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridItemsSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.FormattingConverter">
            <summary>
            Formats a binding source value using a format string.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.FormattingConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.FormattingConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.FormattingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the binding source value using a format string.
            </summary>
            <param name="value">The object value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The formatted object string.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.FormattingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.FormattingConverter.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ChartZoomEventArgs">
            <summary>
            Holds information about the chart zoom event.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartZoomEventArgs.XZoom">
            <summary>
            Gets the current zoom percentage of the X axis. This will be a value between 0 and 1.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartZoomEventArgs.YZoom">
            <summary>
            Gets the current zoom percentage of the Y axis. This will be a value between 0 and 1.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ChartZoomEventArgs.AverageZoom">
            <summary>
            Gets the current average zoom percentage of the chart control. This will be a value between 0 and 1.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.FixedSampleCountSampler">
            <summary>
            An <see cref="T:Mindscape.WpfElements.Charting.IChartDataSampler"/> that calculates an index interval based on a desired maximum number of data points
            to render.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.IChartDataSampler">
            <summary>
            Implementations of this interface can be used for providing data sampling logic for a <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IChartDataSampler.CalculateIndexStep(System.Int32,System.Windows.Size)">
            <summary>
            Calculates the index interval of the data sampling. The data series will skip this number of data points when rendering the chart.
            </summary>
            <param name="dataCount">The number of data points available to display in the current viewport.</param>
            <param name="canvasSize">The dimensions of the charting canvas.</param>
            <returns>The index interval of the data sampling.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.FixedSampleCountSampler.CalculateIndexStep(System.Int32,System.Windows.Size)">
            <summary>
            Calculates the index interval of the data sampling. The data series will skip this number of data points when rendering the chart.
            </summary>
            <param name="dataCount">The number of data points available to display in the current viewport.</param>
            <param name="canvasSize">The dimensions of the charting canvas.</param>
            <returns>The index interval of the data sampling.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.FixedSampleCountSampler.MaxDataPointCount">
            <summary>
            Gets or sets the maximum number of data points that this <see cref="T:Mindscape.WpfElements.Charting.FixedSampleCountSampler"/> will allow to be rendered.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataLabel">
            <summary>
            Represents a label for data points on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DataLabel.#ctor(Mindscape.WpfElements.Charting.DataPoint,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.DataLabel"/> class.
            </summary>
            <param name="dataPoint">The data point control holding all the plotted data information.</param>
            <param name="dependentData">The plotted data value along the dependent axis.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataLabel.DataPointProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataLabel.DataPoint"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataLabel.DependentDataProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.DataLabel.DependentData"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataLabel.DataPoint">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.DataLabel.DataPoint"/> control that the <see cref="T:Mindscape.WpfElements.Charting.DataLabel"/> maps to.
            This can be used to obtain any piece of data that the data point is made up of.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataLabel.DataPointProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DataLabel.DependentData">
            <summary>
            Gets the plotted data value along the dependent axis.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.DataLabel.DependentDataProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataPointHighlightMode">
            <summary>
            Sepecifies how a <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> can be highlighted within its <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointHighlightMode.None">
            <summary>
            <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> can not be highlighted.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointHighlightMode.MouseOver">
            <summary>
            <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects within the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are highlighted when the mouse is over them.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointHighlightMode.ClosestXValue">
            <summary>
            <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects within the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are highlighted when the mouse is close to
            their respective X values.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataPointSelectionMode">
            <summary>
            Specifies how <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects can be selected within a <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointSelectionMode.None">
            <summary>
            No <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> can be selected.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointSelectionMode.Single">
            <summary>
            Only a single <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> within the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> can be selected at a time.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointSelectionMode.Multiple">
            <summary>
            Multiple <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects can be selected.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataPointSelectionMode.All">
            <summary>
            All <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are selected at once.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DataSeriesSelectionMode">
            <summary>
            Specifies the selection mode of <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> within a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeriesSelectionMode.Single">
            <summary>
            Only <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects from a single <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> can be selected at a time.
            Selecting a <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> within a <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> will deselect any data points in the
            previously selected <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.DataSeriesSelectionMode.Multiple">
            <summary>
            Any number of <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> can have selected <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter">
            <summary>
            A type of <see cref="T:Mindscape.WpfElements.Charting.IAxisValueConverter"/> used for creating a DateTime axis scale.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.IAxisValueConverter">
            <summary>
            Converts between data values and logical axis positions to create custom axis scales.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IAxisValueConverter.GetAxisPlotPosition(System.Object)">
            <summary>
            Gets the logical axis plot position for a data object.
            </summary>
            <param name="o">The data object whose plot position is required.</param>
            <returns>The logical axis position of the given data object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IAxisValueConverter.GetDataObjectAt(System.Double)">
            <summary>
            Gets the data object corresponding to a logical axis position.
            </summary>
            <param name="axisPosition">The logical axis position.</param>
            <returns>The object represented on the axis at that position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.GetAxisPlotPosition(System.Object)">
            <summary>
            Gets the logical axis position for a DateTime.
            </summary>
            <param name="o">The DateTime whose plot position is required.</param>
            <returns>The logical axis position of the given DateTime.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.GetDataObjectAt(System.Double)">
            <summary>
            Gets the DateTime corresponding to a logical axis position.
            </summary>
            <param name="axisPosition">The logical axis position.</param>
            <returns>The DateTime represented on the axis at that position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.GetNextAxisPlotPosition(System.Double,System.Double,System.Double)">
            <summary>
            Returns the next axis plot position starting from the given position.
            </summary>
            <param name="axisMinimum">The minimum axis value.</param>
            <param name="axisMaximum">The maximum axis value.</param>
            <param name="currentPlotPosition">The current axis plot position.</param>
            <returns>The next axis plot position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.GetPreviousAxisPlotPosition(System.Double,System.Double,System.Double)">
            <summary>
            Returns the previous axis plot position starting from the given position.
            </summary>
            <param name="axisMinimum">The minimum axis value.</param>
            <param name="axisMaximum">The maximum axis value.</param>
            <param name="currentPlotPosition">The current axis plot position.</param>
            <returns>The previous axis plot position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.NormalizeAxisPlotPosition(System.Double,System.Double,System.Double)">
            <summary>
            Rounds the given axis plot position up to the start of the closest date time unit.
            </summary>
            <param name="axisMinimum">The minimum axis value.</param>
            <param name="axisMaximum">The maximum axis value.</param>
            <param name="currentPlotPosition">The current axis plot position to normalize.</param>
            <returns>The normalized axis plot position.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.GetFormat(System.Double,System.Double)">
            <summary>
            Returns a format string for a <see cref="T:System.DateTime"/> within the given interval.
            </summary>
            <param name="axisMinimum">The minimum plot position of the axis.</param>
            <param name="axisMaximum">The maximum plot position of the axis.</param>
            <returns>A format string for a <see cref="T:System.DateTime"/> within the axis range.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.IntervalUnit">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.DateTimeUnit"/> to for calculating axis intervals.
            Setting this will force this converter to use the specified interval and override the zooming intervals.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.IntervalMagnitude">
            <summary>
            Gets or sets the interval magnitude to use. If this value is 0, the interval magnitude will be calculated automatically.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.DateTimeAxisValueConverter.DateTimeIntervalDefinitions">
            <summary>
            Gets the collection of <see cref="T:Mindscape.WpfElements.Charting.DateTimeIntervalDefinition"/> objects used for customizing the date time interval zooming logic.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.SelectedDataPointChangedEventArgs">
            <summary>
            Contains event data for the DataSeries.SelectedDataPointChanged event.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.IndexData.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.IndexData"/> struct.
            </summary>
            <param name="index">The index.</param>
            <param name="data">The data object.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.IndexData.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.IndexData.Data">
            <summary>
            Gets the data object.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.Legend">
            <summary>
            Displays the title of each data series plotted on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.Legend.LegendPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.Legend.LegendPosition"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.Legend.LegendPosition">
            <summary>
            Gets or sets the position of the <see cref="T:Mindscape.WpfElements.Charting.Legend"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendItem">
            <summary>
            Represents an item to be displayed in a legend.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItem.#ctor(System.String,System.Windows.DataTemplate,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> class.
            </summary>
            <param name="label">The text to be displayed.</param>
            <param name="iconTemplate">The legend icon template.</param>
            <param name="iconBrush">The <see cref="T:System.Windows.Media.Brush"/> used to color the legend icon.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItem.#ctor(System.String,System.Windows.DataTemplate,System.Windows.Media.Brush,Mindscape.WpfElements.Charting.DataSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> class.
            </summary>
            <param name="label">The text to be displayed.</param>
            <param name="iconTemplate">The legend icon template.</param>
            <param name="iconBrush">The <see cref="T:System.Windows.Media.Brush"/> used to color the legend icon.</param>
            <param name="dataSeries">The <see cref="P:Mindscape.WpfElements.Charting.LegendItem.DataSeries"/> that created the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItem.#ctor(System.String,System.Windows.DataTemplate,System.Windows.Media.Brush,Mindscape.WpfElements.Charting.PolarSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> class.
            </summary>
            <param name="label">The text to be displayed.</param>
            <param name="iconTemplate">The legend icon template.</param>
            <param name="iconBrush">The <see cref="T:System.Windows.Media.Brush"/> used to color the legend icon.</param>
            <param name="polarSeries">The <see cref="P:Mindscape.WpfElements.Charting.LegendItem.PolarSeries"/> that created the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LegendItem.ToString">
            <summary>
            Returns a string representation of this <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
            <returns>A string representation of this <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendItem.LegendLabel">
            <summary>
            Gets the text to be displayed by the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendItem.LegendIconTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> used to display the legend icon.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendItem.LegendIconBrush">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Brush"/> used to color the legend icon.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendItem.DataSeries">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.LegendItem.DataSeries"/> that created the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LegendItem.PolarSeries">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.LegendItem.PolarSeries"/> that created the <see cref="T:Mindscape.WpfElements.Charting.LegendItem"/> if applicable.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LegendPosition">
            <summary>
            Specifies the location on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> where the legend is displayed.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.Left">
            <summary>
            The legend is placed to the left of the charting area.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.Right">
            <summary>
            The legend is placed to the right of the charting area.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.Top">
            <summary>
            The legend is placed above the charting area.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.Bottom">
            <summary>
            The legend is placed below the charting area.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.Center">
            <summary>
            The legend is placed within the charting area (though typically not
            centered on the chart itself).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.LegendPosition.None">
            <summary>
            The legend is invisible.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter">
            <summary>
            Plots data using a logarithmic scale.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.GetAxisPlotPosition(System.Object)">
            <summary>
            Converts the given value into an axis plot position.
            </summary>
            <param name="o">A numerical data value.</param>
            <returns>The axis plot position</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.GetDataObjectAt(System.Double)">
            <summary>
            Gets the data object corresponding to a logical axis position.
            </summary>
            <param name="axisPosition">The logical axis position.</param>
            <returns>The object represented on the axis at that position.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.Base">
            <summary>
             Gets or sets the logarithmic base. The default is 10.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.Minimum">
            <summary>
            Gets or sets the minimum value displayed on the axis. This is typically a value greater than 0 and less than or equal to 1.
            The default is 1.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.LogarithmicAxisValueConverter.StartsFromZero">
            <summary>
            Gets or sets whether or not the logarithmic scale includes zero.
            The default is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.MarkedStripe">
            <summary>
            Holds information about rendering colored zones against a <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/>
            in a <see cref="T:Mindscape.WpfElements.Charting.MarkedStripeGrid"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripe.Value">
            <summary>
            Gets or sets the axis value that the <see cref="T:Mindscape.WpfElements.Charting.MarkedStripe"/> is below.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripe.Background">
            <summary>
            Gets or sets the background brush of the <see cref="T:Mindscape.WpfElements.Charting.MarkedStripe"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.MarkedStripeGrid">
            <summary>
            Renders colored axis zones based on a pair of <see cref="T:Mindscape.WpfElements.Charting.ChartAxis"/> objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.MarkedStripeGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.MarkedStripeGrid"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.MarkedStripeGrid.YAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.MarkedStripeGrid.XAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.MarkedStripeGrid.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.Orientation"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.YAxis">
            <summary>
            Gets or sets the Y axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.XAxis">
            <summary>
            Gets or sets the X axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.Orientation">
            <summary>
            Gets or sets the orientation of the marked stripes. The default is horizontal.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.MarkedStripeGrid.OrientationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.MarkedStripeGrid.MarkedStripes">
            <summary>
            Gets the observable collection of <see cref="T:Mindscape.WpfElements.Charting.MarkedStripe"/> objects used to render the <see cref="T:Mindscape.WpfElements.Charting.MarkedStripeGrid"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.MonthAxisValueConverter">
            <summary>
            A type of <see cref="T:Mindscape.WpfElements.Charting.IAxisValueConverter"/> used to create a month axis scale.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.MonthAxisValueConverter.GetAxisPlotPosition(System.Object)">
            <summary>
            Gets the logical axis position for a DateTime based on the year and month only.
            </summary>
            <param name="o">The DateTime whose plot position is required.</param>
            <returns>The logical axis position of the given DateTime.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.MonthAxisValueConverter.GetDataObjectAt(System.Double)">
            <summary>
            Gets the date corresponding to a logical axis position.
            </summary>
            <param name="axisPosition">The logical axis position.</param>
            <returns>A DateTime representing the month on the axis at that position.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PieChart">
            <summary>
            A control for displaying <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieChart.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.TitleTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.TitleTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.LegendStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.LegendStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.LegendPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.LegendPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieChart.RadiusFactorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieChart.RadiusFactor"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.Series">
            <summary>
            Gets the collection of <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/> displayed by the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.LegendItems">
            <summary>
            Gets the items to be displayed in the legend.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.TitleTemplate">
            <summary>
            Gets or sets the DataTemplate applied to the title of the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.SelectionMode">
            <summary>
            Gets or sets the selection mode of the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.LegendStyle">
            <summary>
            Gets or sets the Style applied to the HeaderedItemsControl that displays the legend items.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.LegendPosition">
            <summary>
            Gets or sets the position on the <see cref="T:Mindscape.WpfElements.Charting.PieChart"/> control where the legend is displayed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieChart.RadiusFactor">
            <summary>
            Gets or sets the radius factor.
            This is a value between 0 and 1 which specifies the proportional size of the rendered data compared to the available space in the rendering area.
            The default value is 0.8.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.PieChart.RadiusFactorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PieSeries">
            <summary>
            Holds data for a single pie chart series.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.IsSingleDataLineVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.IsSingleDataLineVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.DoughnutScaleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.DoughnutScale"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabelsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabels"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabelLinesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabelLines"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.DataLabelOffsetFactorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.DataLabelOffsetFactor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.DataLabelStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.DataLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.StartAngleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.StartAngle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.PieSliceStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.PieSliceStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.LegendIconTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSeries.FullCircleTotalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.FullCircleTotal"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.DataPoints">
            <summary>
            Gets a read only collection containing the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> objects within the <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/>.
            A <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> is the graphical representation of plotted data and is created by the <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.Brushes">
            <summary>
            Gets the observable collection of brushes used to color each piece of the pie chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.ItemsSource">
            <summary>
            Gets or sets the ItemsSource. This is the data that the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.PieChart"/> displays.
            If the sum of the given data values is less than 1, then a partial pie chart is created.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.IsSingleDataLineVisible">
            <summary>
            Gets or sets whether or not to display the line from the center to the edge when there is only a single piece of data.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.DoughnutScale">
            <summary>
            Gets or sets a value used to determine the thickness of a doughnut. This should be a value between 0 and 1.
            A value of 1 will create a pie chart. The default is 1.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabels">
            <summary>
            Gets or sets whether or not the data lables are displayed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.ShowDataLabelLines">
            <summary>
            Gets or sets whether or not to display a line from the data labels to the data pieces.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.DataLabelOffsetFactor">
            <summary>
            Gets or sets a value used to determine the distance between a data label and the center of the pie chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.DataLabelStyle">
            <summary>
            Gets or sets the DataLabelStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.StartAngle">
            <summary>
            Gets or sets the starting angle of the <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/> in degrees.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.PieSliceStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to apply to the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.LegendIconTemplate">
            <summary>
            Gets or sets the LegendIconTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.SelectionMode">
            <summary>
            Gets or sets the SelectionMode.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.FullCircleTotal">
            <summary>
            Gets or sets a value that determines if a partial chart or a full chart should be drawn.
            If the total sum of data is less than the FullCircleTotal, then this is a partial <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/>.
            The default is zero.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.TitleBinding">
            <summary>
            A binding used to extract the title of a data object.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PieSeries.LegendItemsChanged">
            <summary>
            Raised when the legend items changed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.LegendItems">
            <summary>
            Gets a list of legend items to be displayed in a legend for this <see cref="T:Mindscape.WpfElements.Charting.PieSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.Canvas">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.Canvas"/> that the pie series is plotted on.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.DataBinding">
            <summary>
            Gets or sets a binding used to extract a data value from a data object in the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.ItemsSource"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.RadiusBinding">
            <summary>
            Gets or sets a binding used to extract a radius factor from a data object in the <see cref="P:Mindscape.WpfElements.Charting.PieSeries.ItemsSource"/>.
            This can be used to create a pie chart with data pieces of different radius scales.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.LabelBinding">
            <summary>
            Gets or sets a binding used to extract the label content from a data point model object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.ToolTipBinding">
            <summary>
            Gets or sets a binding used to extract the tool tip content from a data point model object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSeries.SelectedDataPoint">
            <summary>
            Gets the currently selected <see cref="T:Mindscape.WpfElements.Charting.CartesianDataPoint"/>.
            This will be null if none of the data points in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are selected.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PieSeries.SelectedDataPointChanged">
            <summary>
            Raised when the selected data point changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PieSlice">
            <summary>
            Represents a data point on a <see cref="T:Mindscape.WpfElements.Charting.PieChart"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSlice.#ctor(System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> class.
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> plots.</param>
            <param name="doughnutScale">The doughnut scale of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.</param>
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PieSlice.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> class.
            </summary>
            <param name="data">The data that the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> holds.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSlice.RadiusFactorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.RadiusFactor"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSlice.DataValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.DataValue"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSlice.PieSeriesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.PieSeries"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSlice.ExplodedDistanceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.ExplodedDistance"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PieSlice.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.Title"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.RadiusFactor">
            <summary>
            Gets or sets the radius factor of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>. This is generally a value between 0 and 1.
            This property can be set using the RadiusBinding property of a <see cref="P:Mindscape.WpfElements.Charting.PieSlice.PieSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.DataValue">
            <summary>
            Gets or sets the numerical data value that the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> is plotting.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.PieSeries">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Charting.PieSlice.PieSeries"/> that created this <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.PieSlice.PieSeriesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.Percentage">
            <summary>
            Gets the percentage of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.PathData">
            <summary>
            Gets a <see cref="T:System.Windows.Media.PathGeometry"/> that specifies the shape and position of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.Diameter">
            <summary>
            Gets the diameter of the pie chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.Radius">
            <summary>
            Gets the radius of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.CenterPoint">
            <summary>
            Gets the position of the center corner of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> relative to the
            <see cref="T:System.Windows.Controls.Canvas"/> that the pie chart is being hosted in.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.Self">
            <summary>
            Gets this pie slice. This is useful for binding to this pie slice when the center point changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.DoughnutScale">
            <summary>
            Gets the doughnut scale of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            By multiplying this value with the radius, you get the thickness of the douughnut shape.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.ExplodedDistance">
            <summary>
            Gets or sets the distance of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/> from the center of the pie chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PieSlice.ExplodedDistanceChanged">
            <summary>
            Raised when the exploded distance changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PieSlice.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Mindscape.WpfElements.Charting.PieSlice"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PieSlice.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarAxisBase">
            <summary>
            Represents a chart axis used by a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarAxisBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarAxisBase"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarAxisBase.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.ValueConverterProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.ValueConverter"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.LabelFormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.LabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.LabelTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarAxisBase.MajorTickSpacingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarAxisBase.MajorTickSpacing"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarAxisBase.GetLogicalPosition(System.Object)">
            <summary>
            Calculates the logical data position of the given object against this polar axis.
            </summary>
            <param name="o">The object to calculate the position of.</param>
            <returns>The logical position of the given object against this polar axis.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarAxisBase.UpdateAxis">
            <summary>
            Updates the axis visual.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarAxisBase.UpdateAxisCore">
            <summary>
            When overriden, this method manages the creation and placement of axis labels.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.Minimum">
            <summary>
            Gets or sets the minimum axis value.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.Maximum">
            <summary>
            Gets or sets the maximum axis value.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.ValueConverter">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.Charting.IAxisValueConverter"/> used for converting between axis values and objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.LabelFormat">
            <summary>
            Gets or sets the LabelFormat.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.LabelTemplate">
            <summary>
            Gets or sets the LabelTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarAxisBase.MajorTickSpacing">
            <summary>
            Gets or sets the MajorTickSpacing.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarAxisBase.AxisUpdated">
            <summary>
            Raised when the axis is updated.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarBar">
            <summary>
            Represents a single data point in a <see cref="T:Mindscape.WpfElements.Charting.RoseSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarDataPoint">
            <summary>
            Represents a single data point to be plotted on polar axes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarDataPoint.ThetaObjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarDataPoint.ThetaObject"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarDataPoint.RhoObjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarDataPoint.RhoObject"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarDataPoint.ThetaObject">
            <summary>
            Gets or sets the object that specifies the theta value of the <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarDataPoint.RhoObject">
            <summary>
            Gets or sets the object that specifies the rho value of the <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarDataPoint.LogicalPoint">
            <summary>
            Gets the logical theta,rho plotting position of the <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarBar.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/> class.
            </summary>
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/> plots.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarBar.PathData">
            <summary>
            Gets the geometry of this <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarBar.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarBubble">
            <summary>
            Represents a data point in a <see cref="T:Mindscape.WpfElements.Charting.PolarBubbleSeries"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarBubble.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarBubble"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarBubble.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarBubble"/> class.
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PolarBubble"/> plots.</param>
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarBubble.SizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarBubble.Size"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarBubble.IsNegative">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Charting.PolarBubble"/> is plotting a negative value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarBubble.Size">
            <summary>
            Gets or sets the size of the bubble.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarBubbleSeries">
            <summary>
            Plots a bubble series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarSeries">
            <summary>
            Represents a data series that can be plotted by a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.OnLegendItemsChanged">
            <summary>
            Raises the LegendItemsChanged event.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.ConvertLogicalToPhysicalPoint(Mindscape.WpfElements.Charting.PolarPoint)">
            <summary>
            Converts the given logical data point to a physical point on the chart canvas.
            </summary>
            <param name="point">The logical data point to convert.</param>
            <returns>A physical position on the chart canvas based on the given logical data point.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.GetDataPoint(System.Object,System.Int32)">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> mapped to the given data object and index.
            </summary>
            <param name="o">The data object.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> mapped to the given object if it exists.</returns>
            <param name="index">The index of the data object within the ItemsSource.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.PrepareDataPoint(Mindscape.WpfElements.Charting.PolarDataPoint,System.Int32)">
            <summary>
            Prepares the given <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> to participate in selection features and data notifications.
            </summary>
            <param name="dataPoint">The <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> to prepare.</param>
            <param name="index">The index of the data object within the ItemsSource.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarSeries.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarSeries.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarSeries.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarSeries.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarSeries.LegendIconTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarSeries.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarSeries.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarSeries.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarSeries.SeriesBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarSeries.SeriesBrush"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.GetPoint(Mindscape.WpfElements.Charting.PolarDataPoint)">
            <summary>
            Returns a <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> containing the theta and rho logical axis values of the given <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            </summary>
            <param name="dataPoint">The <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> holding the data to be plotted.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> containg the theta and rho axis values for the given <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSeries.GetPoint(Mindscape.WpfElements.Charting.PolarDataPoint,System.Boolean)">
            <summary>
            Returns a <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> containing the theta and rho logical axis values of the given <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/>.
            </summary>
            <param name="dataPoint">The <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> holding the data to calculate a <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> for.</param>
            <param name="reverseAxes">Specifies whether or not the RhoAxis is the independent axis.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> containg the theta and rho axis values for the given data object.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.LegendItems">
            <summary>
            Gets a list of legend items to be displayed in the legend for this <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarSeries.LegendItemsChanged">
            <summary>
            Raised when the legend items for this <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.ThetaAxis">
            <summary>
            Gets the theta axis that the <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/> is plotted against.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.RhoAxis">
            <summary>
            Gets the rho axis that the <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/> is plotted against.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.ThetaBinding">
            <summary>
            Gets or sets a binding used to extract the theta axis value from a data object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.RhoBinding">
            <summary>
            Gets or sets a binding used to extract the rho axis value from a data object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.DataPoints">
            <summary>
            Gets a read only collection containing the <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> objects within the <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/>.
            A <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/> is the graphical representation of plotted data and is created by the <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.SelectedDataPoint">
            <summary>
            Gets the currently selected <see cref="T:Mindscape.WpfElements.Charting.PolarDataPoint"/>.
            This will be null if none of the data points in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> are selected.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarSeries.SelectedDataPointChanged">
            <summary>
            Raised when the selected data point changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.Title">
            <summary>
            Gets or sets the Title.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.SelectionMode">
            <summary>
            Gets or sets the selection mode for the <see cref="T:Mindscape.WpfElements.Charting.DataPoint"/> objects displayed in the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.LegendIconTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> for the legend icon.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.ItemsSource">
            <summary>
            Gets or sets the ItemsSource. This is the data to be plotted on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarSeries.SeriesBrush">
            <summary>
            Gets or sets the SeriesBrush.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarSeries.PropertyChanged">
            <summary>
            Raised when a property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarBubbleSeries.BubbleStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarBubbleSeries.BubbleStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarBubbleSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.PolarBubbleSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarBubbleSeries.SizeBinding">
            <summary>
            Gets or sets the binding used to extract the bubble size from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarBubbleSeries.BubbleStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to be applied to the <see cref="T:Mindscape.WpfElements.Charting.PolarBubble"/> data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarChart">
            <summary>
            A control for display polar coordinate data series.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarChart.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.ThetaAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.ThetaAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.RhoAxisProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.RhoAxis"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.TitleTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.TitleTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.LegendStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.LegendStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.LegendPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.LegendPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChart.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.SelectionMode"/> property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarChart.ChartMouseMove">
            <summary>
            Raised when the mouse is moved over the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarChart.ChartMouseEnter">
            <summary>
            Raised when the mouse enters the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarChart.ChartMouseLeave">
            <summary>
            Raised when the mouse leaves the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarChart.ChartMouseLeftButtonUp">
            <summary>
            Raised when the left mouse button is released over the the chart area.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Charting.PolarChart.ChartMouseLeftButtonDown">
            <summary>
            Raised when the left mouse button is pressed over the chart area.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.Series">
            <summary>
            Gets the collection of the <see cref="T:Mindscape.WpfElements.Charting.DataSeries"/> plotted on the chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.LegendItems">
            <summary>
            Gets the items to be displayed in the legend.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.ForegroundElements">
            <summary>
            Gets the collection of <see cref="T:System.Windows.UIElement"/> objects displayed in front of the chart data.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.BackgroundElements">
            <summary>
            Gets the collection of <see cref="T:System.Windows.UIElement"/> objects displayed behind the chart data.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.ThetaAxis">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.ThetaAxis"/> of this <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.RhoAxis">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.Charting.PolarChart.RhoAxis"/> of this <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.Title">
            <summary>
            Gets or sets the Title.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.TitleTemplate">
            <summary>
            Gets or sets the TitleTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.LegendStyle">
            <summary>
            Gets or sets the LegendStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.LegendPosition">
            <summary>
            Gets or sets the LegendPosition.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChart.SelectionMode">
            <summary>
            Gets or sets the selection mode of the <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarChartGrid">
            <summary>
            Renders radial and angular grid lines on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarChartGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarChartGrid"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChartGrid.RadialLineTypeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialLineType"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChartGrid.AngularGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChartGrid.AngularGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChartGrid.RadialGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChartGrid.AngularDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChartGrid.AngularDashArray"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarChartGrid.RadialDashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialDashArray"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.AngularStripeBrushes">
            <summary>
            Gets the collection of angular stripe brushes.  These are used in rotation
            to fill the angular sectors of the grid.
            </summary>
            <remarks>Radial stripes are drawn over the top of angular stripes.  Therefore,
            an opaque radial brush will obscure the angular stripe color where the stripes
            overlap.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialStripeBrushes">
            <summary>
            Gets the collection of radial stripe brushes.  These are used in rotation
            to fill the radial stripes of the grid.
            </summary>
            <remarks>Radial stripes are drawn over the top of angular stripes.  Therefore,
            an opaque radial brush will obscure the angular stripe color where the stripes
            overlap.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialLineType">
            <summary>
            Gets or sets whether radial grid lines and stripes lines are curved or straight.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.AngularGridLineBrush">
            <summary>
            Gets or sets the AngularGridLineBrush.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialGridLineBrush">
            <summary>
            Gets or sets the RadialGridLineBrush.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.AngularDashArray">
            <summary>
            Gets or sets the AngularDashArray.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartGrid.RadialDashArray">
            <summary>
            Gets or sets the RadialDashArray.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs">
            <summary>
            Holds information about mouse events that occur on a polar chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.PhysicalPoint">
            <summary>
            Gets the physical position of the mouse pointer over the polar chart canvas.
            This point is relative to the top left corner of the canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.PhysicalPolarPoint">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> containing the actual angle and distance of the mouse point from the center of the polar chart.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.LogicalPoint">
            <summary>
            Gets the logical position of the mouse pointer over the polar chart canvas.
            The logical values are based on the range of the axes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.ConstrainedLogicalPoint">
            <summary>
            Gets the logical postion of the mouse pointer constrained by the range of the axes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.IsMouseDown">
            <summary>
            Gets whether or not the left mouse button is down.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarChartMouseEventArgs.IsMouseOver">
            <summary>
            Gets whether or not the mouse pointer is within the bounds of the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarChartSymbol">
            <summary>
            Represents a data point of a polar data series involving plotted points.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarChartSymbol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarChartSymbol.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> class.
            </summary>
            <param name="data">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> plots.</param>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase">
            <summary>
            A base class for <see cref="T:Mindscape.WpfElements.Charting.PolarSeries"/> that use lines to plot data, such as <see cref="T:Mindscape.WpfElements.Charting.RadarSeries"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarPointSeriesBase">
            <summary>
            A base class for polar data series which plot using points, such as radar series or
            polar plot charts.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarPointSeriesBase.SymbolStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarPointSeriesBase.SymbolStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarPointSeriesBase.GetChartSymbol(System.Object,System.Int32,Mindscape.WpfElements.Charting.PolarPoint@)">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> for the given data object.
            </summary>
            <param name="o">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> displays.</param>
            <param name="index">The index of the data.</param>
            <param name="point">The logical plot position of the data.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Charting.PolarChartSymbol"/> to display the given data object.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarPointSeriesBase.SymbolStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> applied to the data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.LineStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.LineStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.DashArrayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.DashArray"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.LineStyle">
            <summary>
            Gets or sets the LineStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarLineAreaSeriesBase.DashArray">
            <summary>
            Gets or sets the DashArray.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarLineSeries">
            <summary>
            Plots a line series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.  A <see cref="T:Mindscape.WpfElements.Charting.PolarLineSeries"/> is represented
            by a sequence of symbols, joined by line segments.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarLineSeriesBase">
            <summary>
            Base class for polar series that can have either an open or closed loop.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.PolarLineSeriesBase.IsClosedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.PolarLineSeriesBase.IsClosed"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarLineSeriesBase.IsClosed">
            <summary>
            Gets or sets whether or not this <see cref="T:Mindscape.WpfElements.Charting.PolarLineSeriesBase"/> is a closed loop. The default is false.
            This is a dependency property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarLineSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.PolarLineSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarPoint">
            <summary>
            Represents a thata- and rho-coordinate pair in polar space.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/> struct.
            </summary>
            <param name="theta">The theta coordinate.</param>
            <param name="rho">The rho coordinate.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarPoint.Theta">
            <summary>
            Gets the theta coordinate value of this <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PolarPoint.Rho">
            <summary>
            Gets the rho coordinate of this <see cref="T:Mindscape.WpfElements.Charting.PolarPoint"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarScatterSeries">
            <summary>
            Plots a scatter series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarScatterSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.PolarScatterSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarSplineAreaSeries">
            <summary>
            Plots a spline area series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.RadarSeries">
            <summary>
            Plots a radar series on the <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            A radar series is the polar version of a cartesian <see cref="T:Mindscape.WpfElements.Charting.AreaSeries"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.RadarSeries.AreaStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.RadarSeries.AreaStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.RadarSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.RadarSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.RadarSeries.AreaStyle">
            <summary>
            Gets or sets the AreaStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSplineAreaSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.PolarSplineAreaSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PolarSplineSeries">
            <summary>
            Plots a spline series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PolarSplineSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.PolarSplineSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.RadialType">
            <summary>
            Determines whether polar radial lines are curved or stright.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.RadialType.Curved">
            <summary>
            Polar radial lines are curved.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.RadialType.Straight">
            <summary>
            Polar radial lines are straight.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.RhoAxis">
            <summary>
            Represents the rho axis of a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            The rho axis is used for plotting radial coordinates.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.RhoAxis.UpdateAxisCore">
            <summary>
            Manages the creation and placement of axis labels.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.RhoAxis.ConvertLogicalToPhysicalSize(System.Double)">
            <summary>
            Converts the given logical size to a physical size.
            </summary>
            <param name="logicalSize">The logical size to convert.</param>
            <returns>The physical interpretation of the given logical size.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.RoseSeries">
            <summary>
            Plots a bar series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.RoseSeries.BarStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.RoseSeries.BarStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.RoseSeries.BarSizeFactorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.RoseSeries.BarSizeFactor"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.RoseSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.RoseSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.RoseSeries.GetBar(System.Object,System.Int32,Mindscape.WpfElements.Charting.PolarPoint@)">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/> for the given data object.
            </summary>
            <param name="o">The data object that the <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/> displays.</param>
            <param name="index">The index of the data.</param>
            <param name="point">The logical plot position of the data.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Charting.PolarBar"/> to display the given data object.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.RoseSeries.BarStyle">
            <summary>
            Gets or sets the BarStyle.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.RoseSeries.BarSizeFactor">
            <summary>
            Gets or sets the size factor used to calculate the thickness of the bars. This will typically be a value between 0 and 1.
            This value is the factor between a single axis unit and the thickness of a bar. A value of 1 will cause all the bars to
            be adjacent with no gaps between them. Smaller values put spaces between the bars.
            This is a dependency property. The default is 0.8.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedPolarLineSeries">
            <summary>
            Plots a stacked line series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StackedPolarLineSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.StackedPolarLineSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedPolarSplineAreaSeries">
            <summary>
            plots a spline area series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StackedPolarSplineAreaSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.StackedPolarSplineAreaSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedPolarSplineSeries">
            <summary>
            Plots a spline series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StackedPolarSplineSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.StackedSplineSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedRadarSeries">
            <summary>
            Plots a stacked radar series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StackedRadarSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.StackedRadarSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedRoseSeries">
            <summary>
            plots a stacked bar series on a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.StackedRoseSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.StackedRoseSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ThetaAxis">
            <summary>
            Represents the theta axis of a <see cref="T:Mindscape.WpfElements.Charting.PolarChart"/>.
            The theta axis is used for plotting angular coordinates.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ThetaAxis.UpdateAxisCore">
            <summary>
            Manages the creation and placement of axis labels.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ThetaAxis.StartAngleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ThetaAxis.StartAngle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ThetaAxis.IsReversedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.ThetaAxis.IsReversed"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ThetaAxis.StartAngle">
            <summary>
            Gets or sets the angle in degrees where the minimum of the theta scale starts.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ThetaAxis.StartAngleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.ThetaAxis.IsReversed">
            <summary>
            Gets or sets whether or not the axis is rendered anticlock wise.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.ThetaAxis.IsReversedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.AreaSeries">
            <summary>
            Plots an area series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.AreaSeries.AreaStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.AreaSeries.AreaStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.AreaSeries.GetAreaBrush">
            <summary>
            Returns the <see cref="T:System.Windows.Media.Brush"/> to be used on the area if the AreaStyle did not cause the area to be given a fill.
            </summary>
            <returns>The <see cref="T:System.Windows.Media.Brush"/> used to color the area.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.AreaSeries.AreaStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to be applied to the area.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.BubbleSeries">
            <summary>
            Plots a bubble series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.BubbleSeries.BubbleStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.BubbleSeries.BubbleStyle"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.BubbleSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.BubbleSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BubbleSeries.SizeBinding">
            <summary>
            Gets or sets the binding used to extract the bubble size from each data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.BubbleSeries.BubbleStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to be applied to the <see cref="T:Mindscape.WpfElements.Charting.Bubble"/> data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.LineSeries">
            <summary>
            Plots a line series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.  A line series is represented
            by a sequence of symbols, joined by lines.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ScatterSeries">
            <summary>
            Plots a scatter series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.ScatterSeries.BuildChartCore">
            <summary>
            Plots the <see cref="T:Mindscape.WpfElements.Charting.ScatterSeries"/> on the chart canvas.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.SplineAreaSeries">
            <summary>
            Plots a spline area series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.SplineSeries">
            <summary>
            Plots a spline series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedAreaSeries">
            <summary>
            Plots a stacked area series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedBarSeries">
            <summary>
            Plots a stcaked bar series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.StackedBarSeries.StackIdentifierProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Charting.StackedBarSeries.StackIdentifier"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.StackedBarSeries.StackIdentifier">
            <summary>
            Gets or sets the StackIdentifier.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Charting.StackedBarSeries.StackIdentifierProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedLineSeries">
            <summary>
            Plots a stacked line series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedSplineAreaSeries">
            <summary>
            Plots a stacked spline area series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.StackedSplineSeries">
            <summary>
            Plots a stacked spline series on a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.PixelDensitySampler">
            <summary>
            An <see cref="T:Mindscape.WpfElements.Charting.IChartDataSampler"/> that calculates an index interval based on the pixel dimensions of the viewport and a desired
            number of pixels between each data point.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Charting.PixelDensitySampler.CalculateIndexStep(System.Int32,System.Windows.Size)">
            <summary>
            Calculates the index interval of the data sampling. The data series will skip this number of data points when rendering the chart.
            </summary>
            <param name="dataCount">The number of data points available to display in the current viewport.</param>
            <param name="canvasSize">The dimensions of the charting canvas.</param>
            <returns>The index interval of the data sampling.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PixelDensitySampler.PixelSpacing">
            <summary>
            Gets or sets the desired number of pixels between each rendered data point.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Charting.PixelDensitySampler.IsZoomAdjustmentEnabled">
            <summary>
            Gets or sets whether or not zoom adjustment is enabled. Zoom adjustment forces the index interval to be rounded to the
            nearest exponential of base 2 which allows data to look consistent at different zoom levels. The default is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.TickMarkMode">
            <summary>
            Specifies how tick marks respond to panning the chart canvas.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.TickMarkMode.Stationary">
            <summary>
            Tick marks are stationary. The first tick mark will always start at the very start of the axis and
            adopt whatever axis value they land on.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.TickMarkMode.Movable">
            <summary>
            Tick marks will slide as the chart canvas is panned. This will allow tick marks to be lined up with number series such as
            0,1,2,3... or 0,0.5,1,1.5... or 0,10,20,30...
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Charting.ZoomMode">
            <summary>
            Specifies the zoom mode of a <see cref="T:Mindscape.WpfElements.Charting.Chart"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ZoomMode.None">
            <summary>
            No zooming.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ZoomMode.Vertical">
            <summary>
            Zooming can be performed along the vertical axis only.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ZoomMode.Horizontal">
            <summary>
            Zooming can be performed along the horizontal axis only.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Charting.ZoomMode.Both">
            <summary>
            Zooming can be performed along both vertical and horizontal axes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ChildWindow">
            <summary>
            A simple control for displaying dialog content in an XBAP.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChildWindow.WindowHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChildWindow.WindowHeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChildWindow.WindowWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChildWindow.WindowWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ChildWindow.BackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ChildWindow.BackgroundBrush"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ChildWindow.WindowHeight">
            <summary>
            Gets or sets the WindowHeight.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChildWindow.WindowHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ChildWindow.WindowWidth">
            <summary>
            Gets or sets the WindowWidth.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChildWindow.WindowWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ChildWindow.BackgroundBrush">
            <summary>
            Gets or sets the BackgroundBrush.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ChildWindow.BackgroundBrushProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.ColorPicker">
            <summary>
            A control for selecting colors from a list or by freely mixing color channels.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorPicker.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.ColorPicker"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorPicker.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorPicker.SelectedColor"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorPicker.OnSelectedColorChanged">
            <summary>
            Called when the selected color changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorPicker.PaletteProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorPicker.Palette"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorPicker.RecentColorsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ColorPicker.RecentColors"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorPicker.SelectedColor">
            <summary>
            Gets or sets the currently selected color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorPicker.SelectedColorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorPicker.Palette">
            <summary>
            Gets or sets the Palette.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorPicker.PaletteProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ColorPicker.RecentColors">
            <summary>
            Gets the collection of recently used user-defined colors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ColorPicker.RecentColorsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.NotifyingColor">
            <summary>
            Encapsulates a Color and provides notification of changes to individual
            channels in order to support WPF data binding.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NotifyingColor.ToColor">
            <summary>
            Returns the color of this <see cref="T:Mindscape.WpfElements.NotifyingColor"/>.
            </summary>
            <returns>The color of this NotifyingColor.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.NotifyingColor.SetFromColor(System.Windows.Media.Color)">
            <summary>
            Sets this <see cref="T:Mindscape.WpfElements.NotifyingColor"/> to wrap the specified color.
            </summary>
            <param name="color">The color to wrap.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NotifyingColor.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.NotifyingColor.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.A">
            <summary>
            Gets or sets the alpha channel value of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.R">
            <summary>
            Gets or sets the red channel value of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.G">
            <summary>
            Gets or sets the green channel value of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.B">
            <summary>
            Gets or sets the blue channel value of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.H">
            <summary>
            Gets or sets the hue channel of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.S">
            <summary>
            Gets or sets the saturation channel of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NotifyingColor.V">
            <summary>
            Gets or sets the value (brightness) channel of the color.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.NotifyingColor.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.StandardPalettes">
            <summary>
            Provides standard palettes for use with the <see cref="T:Mindscape.WpfElements.ColorPicker"/> control.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.OfficePalette">
            <summary>
            Gets a palette containing Office-style theme colors.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.GrayscalePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Grayscale' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.AdjacencyPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Adjacency' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.AnglesPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Angles' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ApexPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Apex' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ApothecaryPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Apothecary' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.AspectPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Aspect' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.AustinPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Austin' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.BlackTiePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Black Tie' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.CivicPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Civic' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ClarityPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Clarity' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.CompositePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Composite' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ConcoursePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Concourse' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.CouturePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Couture' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ElementalPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Elemental' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.EquityPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Equity' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.EssentialPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Essential' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ExecutivePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Executive' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.FlowPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Flow' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.FoundryPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Foundry' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.GridPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Grid' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.HardcoverPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Hardcover' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.HorizonPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Horizon' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.MedianPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Median' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.MetroPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Metro' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ModulePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Module' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.NewsprintPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Newsprint' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.OpulentPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Opulent' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.OrielPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Oriel' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.OriginPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Origin' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.PaperPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Paper' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.PerspectivePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Perspective' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.PushpinPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Pushpin' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.SlipstreamPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Slipstream' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.SolsticePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Solstice' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.TechnicPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Technic' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.ThatchPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Thatch' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.TrekPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Trek' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.UrbanPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Urban' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.VervePalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Verve' style.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.StandardPalettes.WaveformPalette">
            <summary>
            Gets a palette containing the colors seen in the Office 'Waveform' style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.FilteringTextBoxBase">
            <summary>
            Provides common functionality for text boxes that restrict user input.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.FilteringTextBoxBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.FilteringTextBoxBase"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.FilteringTextBoxBase.EndInit">
            <summary>
            Indicates that the initialization process for the element is complete.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.FilteringTextBoxBase.CultureProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.FilteringTextBoxBase.Culture"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.FilteringTextBoxBase.TextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.FilteringTextBoxBase.Text"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.FilteringTextBoxBase.TextAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.FilteringTextBoxBase.TextAlignment"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.FilteringTextBoxBase.OnApplyTemplate">
            <summary>
            Called by the framework when a template is applied to the control.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.FilteringTextBoxBase.Culture">
            <summary>
            Gets or sets the culture used for parsing and formatting of user input.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.FilteringTextBoxBase.CultureProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.FilteringTextBoxBase.Text">
            <summary>
            Gets or sets the text displayed to represent the value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.FilteringTextBoxBase.TextProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>BindsTwoWayByDefault</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.FilteringTextBoxBase.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.FilteringTextBoxBase.TextAlignmentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.FilteringTextBoxBase.BorderBrushKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the brush used to draw text box
            borders.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NumericTextBoxBase`1">
            <summary>
            Abstract base class for text boxes editing numeric values.
            </summary>
            <typeparam name="TNumber">The type of numeric value.</typeparam>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.NumericTextBoxBase`1"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.EndInit">
            <summary>
            Indicates that the initialization process for the element is complete.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.ShowSeparatorsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.ShowSeparators"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.RangeConstraintModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.RangeConstraintMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.SelectAllOnEntryProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.SelectAllOnEntry"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.ValueChangedEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.NumericTextBoxBase`1.ValueChanged"/> routed event.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.IsReadOnly"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Overrides default handling for the PreviewTextInput event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Overrides default handling for the PreviewKeyDown event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Adds class handling for the <see cref="E:System.Windows.UIElement.GotKeyboardFocus"/> event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Adds class handling for the <see cref="E:System.Windows.UIElement.LostKeyboardFocus"/> event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Adds class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown"/> event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over the numeric text box.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.AllowsNoValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.AllowsNoValue"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxBase`1.HasValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBoxBase`1.HasValue"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBoxBase`1.OnVisualParentChanged(System.Windows.DependencyObject)">
            <summary>
            Invoked when the parent element of this UIElement reports a change to its underlying visual parent.
            </summary>
            <param name="oldParent">The previous parent.</param>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.Value">
            <summary>
            Gets or sets the numeric value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>BindsTwoWayByDefault</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.ShowSeparators">
            <summary>
            Gets or sets whether to show group separators.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.ShowSeparatorsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.Minimum">
            <summary>
            Gets or sets the minimum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.Maximum">
            <summary>
            Gets or sets the maximum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.RangeConstraintMode">
            <summary>
            Gets or sets when the control enforces range (minimum and maximum) constraints.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.RangeConstraintModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.SelectAllOnEntry">
            <summary>
            Gets or sets the whether the control should select all text when it gains focus.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.SelectAllOnEntryProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.NumericTextBoxBase`1.ValueChanged">
            <summary>
            Occurs when the Value changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.IsReadOnly">
            <summary>
            Gets or sets whether the text box is read-only.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.IsReadOnlyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.AllowsNoValue">
            <summary>
            Gets or sets whther or not the numeric text box allows the value to be deleted entirely, rather than defaulting to 0.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.AllowsNoValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBoxBase`1.HasValue">
            <summary>
            Gets or sets whether or not the numeric text box has a value. This only has use if the Value is zero.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBoxBase`1.HasValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.SignConverter">
            <summary>
            Classifies decimal values by sign.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SignConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a decimal value to a sign indicator.
            </summary>
            <param name="value">The decimal value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.Sign"/> indicating the sign of the value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SignConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Sign">
            <summary>
            The sign of a numeric value.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Sign.Positive">
            <summary>
            The value is positive (strictly greater than zero).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Sign.Zero">
            <summary>
            The value is zero.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Sign.Negative">
            <summary>
            The value is negative (strictly less than zero).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDay">
            <summary>
            Represents a time of day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/> class.
            </summary>
            <param name="hour">The hour of the day.</param>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/> class.
            </summary>
            <param name="hour">The hour of the day.</param>
            <param name="minute">The minute of the hour.</param>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_GreaterThan(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is later than another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>true if first is later than second; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_LessThan(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is earlier than another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>true if first is earlier than second; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_LessThanOrEqual(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is earlier than or the same as another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>true if first is earlier than or the same as second; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_Equality(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is equal to another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>true if first is equal to second; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_Inequality(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is unequal to another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>false if first is equal to second; otherwise true.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.op_GreaterThanOrEqual(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Gets whether one <see cref="T:Mindscape.WpfElements.TimeOfDay"/> is later than or the same as another.
            </summary>
            <param name="first">The first TimeOfDay to compare.</param>
            <param name="second">The second TimeOfDay to compare.</param>
            <returns>true if first is later than or the same as second; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.Equals(System.Object)">
            <summary>
            Tests whether another object is equal to this TimeOfDay.
            </summary>
            <param name="obj">The other object.</param>
            <returns>true if the other object is an equal TimeOfDay; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.GetHashCode">
            <summary>
            Gets a hash code for this object.
            </summary>
            <returns>A hash code for this object</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.ToString">
            <summary>
            Gets a string representation of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            </summary>
            <returns>A string representation of the TimeOfDay.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDay.CompareTo(Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Compares this <see cref="T:Mindscape.WpfElements.TimeOfDay"/> to another.
            </summary>
            <param name="other">The TimeOfDay to compare against.</param>
            <returns>A negative value if this TimeOfDay occurs before the other; a positive
            value if this TimeOfDay occurs after the other; 0 if the two TimeOfDays coincide.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDay.Hour">
            <summary>
            The hour of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDay.Minute">
            <summary>
            The minute of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDay.TwelveHourClockHour">
            <summary>
            The hour of the <see cref="T:Mindscape.WpfElements.TimeOfDay"/>, considered on the twelve-hour clock
            (e.g. 14:30 returns 2).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.AreEqualConverter">
            <summary>
            Converts two objects to a boolean value indicating whether the two are reference-equal.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.AreEqualConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts two values to a boolean indicating whether they are reference-equal.
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>true if the two values are reference-equal; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.AreEqualConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ArithmeticConverter">
            <summary>
            Modifies the input number using multiplication and addition.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ArithmeticConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ArithmeticConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ArithmeticConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a double value by multiplying by the <see cref="P:Mindscape.WpfElements.ArithmeticConverter.Multiplier"/> and adding with the <see cref="P:Mindscape.WpfElements.ArithmeticConverter.Additive"/>.
            </summary>
            <param name="value">The value to be modified.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The modified value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ArithmeticConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ArithmeticConverter.Multiplier">
            <summary>
            Gets or sets the amount by which to scale the input. The default is 1.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ArithmeticConverter.Additive">
            <summary>
            Gets or sets the value added to the input. The default is 0.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.BooleanToBrushConverter">
            <summary>
            Selects a brush according to a boolean value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a brush according to whether the input is true or false.
            </summary>
            <param name="value">The boolean value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToBrushConverter.TrueBrush">
            <summary>
            The brush to select when the source value is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToBrushConverter.FalseBrush">
            <summary>
            The brush to select when the source value is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.BooleanToStyleConverter">
            <summary>
            Selects a style according to a boolean value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToStyleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a style according to whether the input is true or false.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected style.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToStyleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToStyleConverter.TrueStyle">
            <summary>
            The style to select when the source value is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToStyleConverter.FalseStyle">
            <summary>
            The style to select when the source value is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.BooleanToThicknessConverter">
            <summary>
            Selects a Thickness according to a boolean value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a Thickness according to whether the input is true or false.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected Thickness.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToThicknessConverter.TrueThickness">
            <summary>
            The Thickness to select when the source value is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToThicknessConverter.FalseThickness">
            <summary>
            The Thickness to select when the source value is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.BooleanToVisibilityConverter">
            <summary>
            Converts a Boolean value to a visibility.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Boolean value from a binding source for use as a Visibility by a binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Visibility value from a binding target for writing to a Boolean binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>True if the given value is Visible. False if the given value is Collapsed or Hidden.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToVisibilityConverter.IsInverted">
            <summary>
            Gets or sets whether the normal visibility logic should be inverted.
            If IsInverted is false (the default), true is converted to Visible and false to Collapsed.
            If IsInverted is true, true is converted to Collapsed and false to Visible.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.BooleanToVisibilityConverter.Invisibility">
            <summary>
            Gets or sets what value to use for invisibility, either Hidden or Collapsed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.BrushToColorConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Media.SolidColorBrush"/> to a <see cref="T:System.Windows.Media.Color"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.BrushToColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a SolidColorBrush to a Color.
            </summary>
            <param name="value">The Color value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The Color extracted from the SolidColorBrush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.BrushToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>Converts the Color back into an equivalent SolidColorBrush.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.CellDisplayConverter">
            <summary>
            Converts the content of a data grid cell based on a <see cref="P:Mindscape.WpfElements.CellDisplayConverter.TypeConverter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CellDisplayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value to a string using the <see cref="P:Mindscape.WpfElements.CellDisplayConverter.TypeConverter"/>.
            </summary>
            <param name="value">The boolean value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The given value converted to a string.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CellDisplayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.CellDisplayConverter.TypeConverter">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.CellDisplayConverter.TypeConverter"/> used in the conversion.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter">
            <summary>
            Converts a color or solid brush to a gradient brush showing the effects
            of adjusting one channel on that color.  This is used for displaying
            mixer channels in a <see cref="T:Mindscape.WpfElements.ChannelColorPicker"/> template.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a solid color to a gradient brush.
            </summary>
            <param name="value">The Color or SolidColorBrush value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The value to which to set the specified <see cref="P:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter.Channel"/>.
            This value must be convertible to <see cref="T:System.Byte"/>.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A gradient brush from the original to the adjusted color.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter.Channel">
            <summary>
            Gets or sets the channel that is affected by this <see cref="T:Mindscape.WpfElements.ColorChannelAdjustmentBrushConverter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorChannelConverter">
            <summary>
            Converts a color by changing the value of one of its channels.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the input <see cref="T:System.Windows.Media.Color"/> by modifying the channel specified by the <see cref="P:Mindscape.WpfElements.ColorChannelConverter.Channel"/>
            property to the value specified in the parameter argument.
            </summary>
            <param name="value">The Color value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The value to which to set the specified <see cref="P:Mindscape.WpfElements.ColorChannelConverter.Channel"/>.
            This value must be convertible to <see cref="T:System.Byte"/>.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The modified color.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelConverter.Channel">
            <summary>
            Gets or sets the channel that is affected by this <see cref="T:Mindscape.WpfElements.ColorChannelConverter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorChannel">
            <summary>
            Identifies one of the channels of a <see cref="T:System.Windows.Media.Color"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Alpha">
            <summary>
            The alpha channel.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Red">
            <summary>
            The red channel.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Green">
            <summary>
            The green channel.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Saturation">
            <summary>
            The saturation channel
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Value">
            <summary>
            The value channel.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ColorChannel.Blue">
            <summary>
            The blue channel.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorChannelToTemplateConverter">
            <summary>
            Selects a ControlTemplate for the RepeatButton part of a channel mixer
            in a <see cref="T:Mindscape.WpfElements.ColorPicker"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelToTemplateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a ControlTemplate according to a <see cref="T:Mindscape.WpfElements.ColorChannel"/> value.
            </summary>
            <param name="value">The ColorChannel value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected ControlTemplate.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorChannelToTemplateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelToTemplateConverter.AlphaTemplate">
            <summary>
            The template for alpha channel repeat buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelToTemplateConverter.RedTemplate">
            <summary>
            The template for red channel repeat buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelToTemplateConverter.GreenTemplate">
            <summary>
            The template for green channel repeat buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ColorChannelToTemplateConverter.BlueTemplate">
            <summary>
            The template for blue channel repeat buttons.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ColorToBrushConverter">
            <summary>
            Converts a Color to an equivalent SolidColorBrush.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Color to an equivalent SolidColorBrush.
            </summary>
            <param name="value">The Color value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A SolidColorBrush whose color is that of the binding source.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ColorToNameConverter">
            <summary>
            Converts between Color values and names.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ColorToNameConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Color value to a name.
            </summary>
            <param name="value">The Color value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The name of the color, if it is a standard color (named in the
            Colors class); otherwise a string representation of the color.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ColorToNameConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ColorToNameConverter.UseClosestColor">
            <summary>
            Gets or sets whether this <see cref="T:Mindscape.WpfElements.ColorToNameConverter"/> will use the closest color for returning a name.
            If set to false, this converter will only return the color name if an exact match is found, Color.ToString will be returned if
            an exact match is not found. The default is false.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateRangeDisplayConverter">
            <summary>
            Formats the date range of a <see cref="T:Mindscape.WpfElements.ScheduleView"/> suitably for display
            in the <see cref="T:Mindscape.WpfElements.SchedulerNavigationBar"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateRangeDisplayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the <see cref="T:Mindscape.WpfElements.DateRangeDisplayInfo"/> value for display in a view title.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.DateRangeDisplayInfo"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A formatted representation of the date range.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateRangeDisplayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DateRangeDisplayConverter.MonthFormat">
            <summary>
            Gets or sets the format string to be used for displaying months.  The default is
            full month name (e.g. "January").
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeToBrushConverter">
            <summary>
            Converts a DateTime to a Brush based on whether or not the DateTime is DateTime.Now.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a brush according to whether or not the given DateTime is DateTime.Now.
            </summary>
            <param name="value">The DateTime value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeToBrushConverter.TodayBrush">
            <summary>
            The brush to select when the source is DateTime.Now
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeToBrushConverter.NeutralBrush">
            <summary>
            The brush to select when the source is not DateTime.Now.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeToDayOfMonthStringConverter">
            <summary>
            Converts a date to a string suitable for display as the day caption in a monthly
            view.  By default, this is the day of the month (e.g. "15").  However, if the
            day is part of a week that spans a month boundary, then the month is appended if the
            day is the first day of that week, or the first day of the month.  For example,
            in the week beginning 29 March 2010, 29 March would be formatted as "29 Mar",
            30 March as "30", 31 March as "31" and 1 April as "1 Apr".  Similar display
            logic applies to weeks that span a year boundary.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToDayOfMonthStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a date to a string suitable for display as the day caption in a monthly
            view.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string suitable for display as the day caption in a monthly view.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToDayOfMonthStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeToDayOfMonthStringConverter.OnlyShowNumber">
            <summary>
            Gets or sets whether or not to only display the number in the resulting string.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeToDayOfWeekStringConverter">
            <summary>
            Formats a DateTime as a day of the week (e.g. "Monday").
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToDayOfWeekStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats a DateTime as a day of the week (e.g. "Monday").
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the day of the week of the input date.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToDayOfWeekStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeToFullDateStringConverter">
            <summary>
            Converts a date to its full date representation (e.g. "1 January 2010").
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToFullDateStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a date to its full date representation (e.g. "1 January 2010").
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the formatted date.  (Time components are ignored.)</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToFullDateStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeToMonthStringConverter">
            <summary>
            Converts a DateTime value to its full month name (e.g. "January").
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToMonthStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a date to its full month name.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the full name of the month of the date.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeToMonthStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DimensionConverter">
            <summary>
            Converts a dimension to an adjusted value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DimensionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a dimension from a binding source for use by a binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DimensionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DimensionConverter.Add">
            <summary>
            The amount to be added to the input dimension.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DoubleToByteConverter">
            <summary>
            Converts between doubles and bytes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DoubleToByteConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a double value to a byte.
            </summary>
            <param name="value">The double value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A byte of equal value to the double.  If the double is not convertible
            to a byte (according to the rules of System.Convert), an exception is thrown.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DoubleToByteConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a byte value to a double.
            </summary>
            <param name="value">The byte value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The equivalent double value.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DoubleToVisibilityConverter">
            <summary>
            Converts a double into a visibility based on a constraint on the double value.
            This is useful for hiding the gripper lines in a scroll bar thumb style if the thumb gets too small.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DoubleToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a double into a visibility based on the visible threshold.
            If the given value is greater than or equal to the visible threshold, then Visibility.Visble will be returned.
            Otherwise Visibility.Collapsed will be returned.
            </summary>
            <param name="value">The double value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>Visibility.Visible if the given value is greater than or equal to the visible threshold.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DoubleToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DoubleToVisibilityConverter.VisibleThreshold">
            <summary>
            Gets or sets the visibility threshold.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ElementViewStatusToBrushConverter">
            <summary>
            Selects a brush according to an <see cref="T:Mindscape.WpfElements.ElementViewStatus"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ElementViewStatusToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a brush according to the input <see cref="T:Mindscape.WpfElements.ElementViewStatus"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ElementViewStatusToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ElementViewStatusToBrushConverter.NormalBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> is Normal.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ElementViewStatusToBrushConverter.MouseOverBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> is MouseOver.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ElementViewStatusToBrushConverter.PaddingBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> is Padding.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ElementViewStatusToBrushConverter.SelectedBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> is Selected.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ElementViewStatusToBrushConverter.MouseOverPaddingBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.ElementViewStatus"/> is MouseOverPadding.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EnumValuesConverter">
            <summary>
            Converts a value from an enumerated type into a set of permitted values.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EnumValuesConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding source for use by a binding target.
            </summary>
            <param name="value">The value for which a list of permitted values is required.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An array of values compatible with the type of <paramref name="value"/>,
            suitable for use as the ItemsSource of a list or combo box.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EnumValuesConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.EnumValuesConverter.HasEmptyValue">
            <summary>
            Gets or sets whether or not the resulting collection includes an empty value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.GridSpacingCompensationConverter">
            <summary>
            Calculates margins and padding required by editors with non-default background
            colors implemented using Border elements.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.GridSpacingCompensationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Calculates the margin or padding that should be set on a Border element to
            align the border with the column separator and the border content with the
            value column.
            </summary>
            <param name="value">The editor margin imposed by the BuiltInEditor class.
            This will be the <see cref="P:Mindscape.WpfElements.PropertyGrid.DefaultMargin"/> of the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> class.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The margin or padding to set on the Border element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.GridSpacingCompensationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.GridSpacingCompensationConverter.Usage">
            <summary>
            Gets or sets whether the thickness is for use as a margin (expanding a
            Border over the space reserved by the grid) or as padding (realigning content
            to unbordered layouts).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ThicknessUsage">
            <summary>
            Defines whether a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.GridSpacingCompensationConverter"/> should calculate
            margin or padding values.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ThicknessUsage.Margin">
            <summary>
            The converter should calculate margin values.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ThicknessUsage.Padding">
            <summary>
            The converter should calculate padding values.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.GroupingViewConverter">
            <summary>
            Converts a PropertyGrid to a boolean value indicating if grouping is enabled or disabled
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.GroupingViewConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a ObservableCollection of generic type GroupDescription to a boolean value indicating if grouping is enabled or disabled
            </summary>
            <param name="value">The ObservableCollection of generic type GroupDescription value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A Boolean whose value is true if grouping is enabled, otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.GroupingViewConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.HueToSaturationGradientBrushConverter">
            <summary>
            Converts the hue value of a color to a <see cref="T:System.Windows.Media.LinearGradientBrush"/> used by a <see cref="T:Mindscape.WpfElements.ColorSquare"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.HueToSaturationGradientBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.LinearGradientBrush"/> based on the given hue value of a color.
            </summary>
            <param name="value">The integer value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The gradient brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.HueToSaturationGradientBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.InputSuggestionToContentConverter">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.InputSuggestion"/> to a formatted text block containing the
            suggestion with the user input is highlighted in bold.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestionToContentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.InputSuggestion"/> to a formatted text block usable as content.
            </summary>
            <param name="value">The InputSuggestion value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A formatted text block containing the
            suggestion with the user input is highlighted in bold..</returns>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestionToContentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.LevelToIndentConverter">
            <summary>
            Converts the level of a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/> to a horizontal offset.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.LevelToIndentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding source for use by a binding target.
            </summary>
            <param name="value">The level of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A horizontal offset.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.LevelToIndentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayConverter">
            <summary>
            Derives display text for items in a list-select editor.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value to a string, using any available property metadata.
            </summary>
            <param name="values">An array of two objects: the value to be converted, and
            the property metadata expressed as an <see cref="T:Mindscape.WpfElements.PropertyEditing.IPropertyInfo"/>.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding sources.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ListToBooleanConverter">
            <summary>
            Converts an <see cref="T:System.Collections.IList"/> to a boolean depending on if the value of the Object property is contained
            within the list.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ListToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a list to a boolean depending on if the list contains the value of the Object property.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ListToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ListToBooleanConverter.Object">
            <summary>
            Gets or sets the object to be searched for within the list.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ListToSubListConverter">
            <summary>
            Extracts a sub-list from a master list.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ListToSubListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Extracts a sub-list from a master list.  The sub-list begins
            at <see cref="P:Mindscape.WpfElements.ListToSubListConverter.StartIndex"/>, and has <see cref="P:Mindscape.WpfElements.ListToSubListConverter.Length"/> elements.
            </summary>
            <param name="value">The <see cref="T:System.Collections.IList"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The sub-list extracted from the master list.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ListToSubListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ListToSubListConverter.StartIndex">
            <summary>
            The index within the source list at which to start extracting the sub-list.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ListToSubListConverter.Length">
            <summary>
            The length of the sub-list.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PointToTranslateTransformConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Point"/> to a <see cref="T:System.Windows.Media.TranslateTransform"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PointToTranslateTransformConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.TranslateTransform"/> based on the given <see cref="T:System.Windows.Point"/>.
            </summary>
            <param name="value">The <see cref="T:System.Windows.Point"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Media.TranslateTransform"/> based on the given <see cref="T:System.Windows.Point"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PointToTranslateTransformConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ThicknessToDoubleConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Thickness"/> into a double. This is useful for binding a BorderThickness property to a StrokeThickness property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ThicknessToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Thickness"/> value from a binding source for use as a double value by a binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ThicknessToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDayConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter"/> for converting a string into a <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given string value into a <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the sourceType is a string.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if the sourceType is a string.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given <see cref="T:Mindscape.WpfElements.TimeOfDay"/> into a string. If the destination type is not a string, then
            the default operation will be performed.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert. This should be a <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.</param>
            <param name="destinationType">The destination conversion type.</param>
            <returns>A string representing the TimeOfDay.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ManyToNodeConverter">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/> for a <see cref="T:Mindscape.WpfElements.PropertyEditing.Many"/> to a 
            node of singular type suitable for editor selection.
            </summary>
            <remarks>This class supports the multiple selection infrastructure and is 
            intended for use only as part of a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor"/> control template.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ManyToNodeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/> containing a consistent <see cref="T:Mindscape.WpfElements.PropertyEditing.Many"/>
            to a <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> carrying metadata for selecting an editor appropriate to the
            Many type.
            </summary>
            <param name="value">An ObjectWrapper containing a Many.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ManyToNodeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.MarginInversionConverter">
            <summary>
            Negates the Left and Right values of a Thickness.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.MarginInversionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Thickness to another Thickness which is equivalent except for negating
            the Left and Right properties.
            </summary>
            <param name="value">The value for which an inverted Thickness is required.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A Thickness with the same Top and Bottom values as the source,
            but whose Left and Right values have been negated (sign inverted).</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.MarginInversionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.MinuteOfHourBrushConverter">
            <summary>
            Selects a brush according to whether a minutes value is on the hour or not.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MinuteOfHourBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a brush according to whether the input value is on the hour or not.
            </summary>
            <param name="value">The integer value, representing a number of minutes, produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MinuteOfHourBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MinuteOfHourBrushConverter.OnTheHourBrush">
            <summary>
            Gets or sets the brush to use if the minutes value is 0.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MinuteOfHourBrushConverter.DefaultBrush">
            <summary>
            Gets or sets the brush to use if the minutes value is not 0.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.NodeToCategoryConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> to its category.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.NodeToCategoryConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> representing a property to the category of that
            property, as specified using the <see cref="T:System.ComponentModel.CategoryAttribute"/>.
            </summary>
            <param name="value">The node whose category is required.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The category of the node property, or the default category if none is specified.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.NodeToCategoryConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.NodeToCategoryConverter.DefaultCategory">
            <summary>
            Gets or sets the category name for properties with no <see cref="T:System.ComponentModel.CategoryAttribute"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ObjectToBooleanConverter">
            <summary>
            Converts an object to a boolean based on whether or not the object is equal to the value of the Object property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an object to a boolean depending on if the object is equal to the value of the Object property.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ObjectToBooleanConverter.Object">
            <summary>
            Gets or sets the object to be compared with the object being convertered.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ObjectToVisibilityConverter">
            <summary>
            Converts an object to a <see cref="T:System.Windows.Visibility"/> based on if the object is null or not.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an object to a visibility based on the <see cref="P:Mindscape.WpfElements.ObjectToVisibilityConverter.NullVisibility"/> property.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ObjectToVisibilityConverter.NullVisibility">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Visibility"/> that is returned if the object is null.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.RowToDescriptionConverter">
            <summary>
            Obtains the description of a property from a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.RowToDescriptionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/> to the description of the contained property.
            </summary>
            <param name="value">The PropertyGridRow.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The description string of the property contained in the row.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.RowToDescriptionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ScalingConverter">
            <summary>
            Scales a value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ScalingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Scales the specified value, optionally rounding up to the nearest integer.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The scaled and optionally rounded value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ScalingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ScalingConverter.ScaleFactor">
            <summary>
            Gets or sets the scale factor.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ScalingConverter.ForceToInteger">
            <summary>
            Gets or sets whether the resulting scaled value is rounded up
            to the nearest integer.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter">
            <summary>
            Calculates the corner radius for displaying a <see cref="T:Mindscape.WpfElements.SchedulerElement"/> in a view.
            The element is given rounded corners on the left or top if it includes the
            start of the schedule item, and on the right or bottom if it includes the end of the schedule
            item; otherwise, the item is given non-rounded corners.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Calculates corner rounding for displaying a <see cref="T:Mindscape.WpfElements.SchedulerElement"/> in a summary view.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A CornerRadius with left/top and right/bottom values set to the <see cref="P:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.ScheduleElementEndRadius"/>
            if the SchedulerElement includes the relevant end of the schedule item, otherwise unrounded.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.ScheduleElementEndRadius">
            <summary>
            Gets or sets the corner rounding to be applied at each end of the <see cref="T:Mindscape.WpfElements.SchedulerElement"/>
            if that end is included in the <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayStateToCornerRadiusConverter.Orientation">
            <summary>
            Gets or sets the orientation of the item.  If Vertical, the rounding will be applied to the top
            and/or bottom pairs of corners; if Horizontal, to the left and/or right pairs of corners.
            The default is Orientation.Vertical.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerElementDisplayStateToThicknessConverter">
            <summary>
            Calculates the margin for displaying a <see cref="T:Mindscape.WpfElements.SchedulerElement"/> in a view.
            The element is offset from the left if includes the start of the schedule item, and
            from the right if includes the end of the schedule item; otherwise, the element bleeds 
            to the edge of the view.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Calculates the margin for displaying a <see cref="T:Mindscape.WpfElements.SchedulerElement"/>
            in a view.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A Thickness with left and right values set to the <see cref="P:Mindscape.WpfElements.SchedulerElementDisplayStateToThicknessConverter.ScheduleElementEndOffset"/>
            if the SchedulerElement includes the relevant end of the schedule item, otherwise 0.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayStateToThicknessConverter.ScheduleElementEndOffset">
            <summary>
            Gets or sets the offset to be applied at each end of the <see cref="T:Mindscape.WpfElements.SchedulerElement"/>
            if that end is included in the <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerElementDisplayStateToTimeStringConverter">
            <summary>
            Formats the time component of a <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/>
            for display.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeStringConverterBase">
            <summary>
            Provides a base class for converters that output strings representing times.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeStringConverterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeStringConverterBase"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeStringConverterBase.FormatTimeOfDay(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Formats a time of day for display.
            </summary>
            <param name="timeToConvert">The time to be displayed.</param>
            <param name="culture">The culture to use in formatting.</param>
            <returns>A string representing the time of day part of the timeToConvert.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeStringConverterBase.FormatTimeOfDay(System.DateTime,System.Globalization.CultureInfo,Mindscape.WpfElements.TimeDisplayMode)">
            <summary>
            Formats a time of day for display.
            </summary>
            <param name="timeToConvert">The time to be displayed.</param>
            <param name="culture">The culture to use in formatting.</param>
            <param name="timeMode">The time display mode.</param>
            <returns>A string representing the time of day part of the timeToConvert.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TimeStringConverterBase.TimeDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.TimeStringConverterBase.TimeDisplayMode"/> that specifies how to convert the <see cref="T:Mindscape.WpfElements.TimeOfDay"/>
            object into a string.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeStringConverterBase.TimeEnd">
            <summary>
            Gets or sets which end of a range is to be formatted.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToTimeStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the time component of a <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/>
            for display.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.SchedulerElementDisplayState"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A formatted representation of the time selected by the <see cref="P:Mindscape.WpfElements.TimeStringConverterBase.TimeEnd"/> property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElementDisplayStateToTimeStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDayToMinuteStringConverter">
            <summary>
            Converts a time to a string suitable for display in the "minute" portion
            of the "time of day" bar in a day or week view.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayToMinuteStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a time to a string suitable for display in the "minute" portion
            of the "time of day" bar in a day or week view.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string for display in the time bar of a day or week view.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayToMinuteStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDayToStringConverter">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.TimeOfDay"/> object into a formatted string displaying the hours, minutes and AM/PM designator.
            Hours are displayed in 12 hour clock time. Minutes are always displayed with 2 digits.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.TimeOfDay"/> to a display string.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.TimeOfDay"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the formatted <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDayVerticalOffsetConverter">
            <summary>
            Determines the vertical offset at which to display items corresponding to a particular time of day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayVerticalOffsetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines the vertical offset corresponding to the time of day.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The vertical offset corresponding to the time of day of the input value.  (Date components
            of the input DateTime are ignored.)</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayVerticalOffsetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDayVerticalOffsetConverter.HourSlotHeight">
            <summary>
            Gets or sets the vertical offset to be applied per hour of the time of day.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSlotStateToBrushConverter">
            <summary>
            Selects a brush according to an <see cref="T:Mindscape.WpfElements.TimeSlotState"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSlotStateToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Selects a brush according to the input <see cref="T:Mindscape.WpfElements.TimeSlotState"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.TimeSlotState"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The selected brush.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSlotStateToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlotStateToBrushConverter.WorkTimeBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.TimeSlotState"/> is WorkTime.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlotStateToBrushConverter.NotWorkTimeBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.TimeSlotState"/> is NotWorkTime.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlotStateToBrushConverter.SelectedWorkTimeBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.TimeSlotState"/> is SelectedWorkTime.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlotStateToBrushConverter.SelectedNotWorkTimeBrush">
            <summary>
            The brush to use if the <see cref="T:Mindscape.WpfElements.TimeSlotState"/> is SelectedNotWorkTime.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSpanToStringConverter">
            <summary>
            Converts a <see cref="T:System.TimeSpan"/> to a formated string showing the number of minutes, hours, days or weeks.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.TimeSpan"/> to a formated string.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the formatted <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WeekToStringConverter">
            <summary>
            Formats a week as a date range string.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats a week as a date range string, e.g. "1 - 7 January 2010" or
            "31 December 2009 - 6 January 2010".
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.Internal.WeekModel"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string containing the date range represented by the input value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WeekToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.CoverFlow">
            <summary>
            A control that arranges items in a row such that the selected object
            is displayed in the center of the control, with the other items arranged to
            either side in a pseudo-perspective view, and animates the transition
            when the selection changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.CoverFlow"/> item.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.MouseSelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.MouseSelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ShearAngleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ShearAngle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.SelectedItemSeparationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.SelectedItemSeparation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ItemSeparationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ItemSeparation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ScaleXProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleX"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ScaleYProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleY"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ReflectionScaleYProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ReflectionScaleY"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ShowReflectionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ShowReflection"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.ReflectionBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.ReflectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlow.TransitionDurationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlow.TransitionDuration"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlow.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Responds to a <see cref="T:Mindscape.WpfElements.CoverFlow"/> selection change by raising 
            a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"/> event.
            </summary>
            <param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/></param>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlow.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlow.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlow.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ItemHeight">
            <summary>
            Gets or sets the height of the items within the <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            This represents the size of the selected item; the <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleX"/> and
            <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleY"/> properties are applied to non-selected items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ItemHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ItemWidth">
            <summary>
            Gets or sets the width of the items within the <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            This represents the size of the selected item; the <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleX"/> and
            <see cref="P:Mindscape.WpfElements.CoverFlow.ScaleY"/> properties are applied to non-selected items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ItemWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.MouseSelectionMode">
            <summary>
            Gets or sets how the user can select items using the mouse.
            The default is <see cref="F:Mindscape.WpfElements.CoverFlowMouseSelectionMode.MousePressed"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.MouseSelectionModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ShearAngle">
            <summary>
            Gets or sets the vertical shear of the items within this <see cref="T:Mindscape.WpfElements.CoverFlow"/>, in degrees.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ShearAngleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.SelectedItemSeparation">
            <summary>
            Gets or sets the separation between the selected item and the items adjacent to it.
            This is instead of, not additional to, the <see cref="P:Mindscape.WpfElements.CoverFlow.ItemSeparation"/> property,
            and should usually be larger than it.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.SelectedItemSeparationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ItemSeparation">
            <summary>
            Gets or sets the item spacing within the <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ItemSeparationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ScaleX">
            <summary>
            Gets or sets the horizontal scaling applied to the non-selected items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ScaleXProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ScaleY">
            <summary>
            Gets or sets the vertical scaling applied to the non-selected items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ScaleYProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ReflectionScaleY">
            <summary>
            Gets or sets the vertical scale applied to the reflection.
            This must be between 0 and 1.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ReflectionScaleYProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ShowReflection">
            <summary>
            Gets or sets whether the <see cref="T:Mindscape.WpfElements.CoverFlow"/> shows reflections below each item.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ShowReflectionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.ReflectionBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used in the reflection of each <see cref="T:Mindscape.WpfElements.CoverFlowItem"/>.
            This brush is overlaid on the reflection and should typically contain a gradient from a solid
            color (equal to the background color of the <see cref="T:Mindscape.WpfElements.CoverFlow"/>) to a translucent version of that color.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.ReflectionBrushProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlow.TransitionDuration">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Duration"/> of the coverflow animations.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlow.TransitionDurationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.CoverFlowItem">
            <summary>
            Implements a selectable item within a <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlowItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Responds to a <see cref="E:System.Windows.UIElement.MouseEnter"/> event.
            </summary>
            <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs"/>.</param>
        </member>
        <member name="M:Mindscape.WpfElements.CoverFlowItem.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Responds to a <see cref="E:System.Windows.UIElement.PreviewMouseDown"/> event.
            </summary>
            <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>.</param>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowItem.ClipBottomLeftProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlowItem.ClipBottomLeft"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowItem.ClipTopRightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlowItem.ClipTopRight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowItem.ClipBottomRightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CoverFlowItem.ClipBottomRight"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlowItem.TransitionAnimationKey">
            <summary>
            Identifies the template for selection transition animation.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlowItem.ClipBottomLeft">
            <summary>
            Gets the bottom left of the clip parallelogram.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlowItem.ClipBottomLeftProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlowItem.ClipTopRight">
            <summary>
            Gets the top right of the clip parallelogram.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlowItem.ClipTopRightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CoverFlowItem.ClipBottomRight">
            <summary>
            Gets the bottom right of the clip parallelogram.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CoverFlowItem.ClipBottomRightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.CoverFlowMouseSelectionMode">
            <summary>
            Specifies how the mouse can be used to interactively select an 
            item within a <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowMouseSelectionMode.MouseEnter">
            <summary>
            Items can be selected by moving the mouse over them.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowMouseSelectionMode.MousePressed">
            <summary>
            Items can be selected by clicking them with the mouse.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CoverFlowMouseSelectionMode.None">
            <summary>
            Items can not be selected interactively with the mouse.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NegativeConverter">
            <summary>
            Converts a double value to its negative.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a double value from a binding source to its negative for use by a binding target.
            </summary>
            <param name="value">The double value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The negative of the original double value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.NegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ReflectionPositionConverter">
            <summary>
            Calculates the offset of reflection elements within a <see cref="T:Mindscape.WpfElements.CoverFlow"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ReflectionPositionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding source for use by a binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A value suitable for use by the binding target.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ReflectionPositionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ReflectionPositionConverter.Offset">
            <summary>
            An offset that is added to the supplied value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.CurrencyTextBox">
            <summary>
            A text box for editing currency values.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CurrencyTextBox.NegativeStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CurrencyTextBox.NegativeStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CurrencyTextBox.EnforceDecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CurrencyTextBox.EnforceDecimalPlaces"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CurrencyTextBox.DecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CurrencyTextBox.DecimalPlaces"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CurrencyTextBox.NegativeStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> used to display negative values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CurrencyTextBox.NegativeStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CurrencyTextBox.EnforceDecimalPlaces">
            <summary>
            Gets or sets whether the user is prevented from typing beyond the permitted
            number of decimal places (as determined by the culture).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CurrencyTextBox.EnforceDecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CurrencyTextBox.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display. Set to -1
            to display the default number of decimal places for the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.CurrencyTextBox.DecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DataGrid">
            <summary>
            A control that displays a grid of data that can be edited by a user.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors">
            <summary>
            Represents an object which extends the repertoire of editors available to
            a <see cref="T:System.Windows.Controls.DataTemplateSelector"/>.
            </summary>
            <seealso cref="T:Mindscape.WpfElements.PropertyEditing.Editor"/>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors.Editors">
            <summary>
            Gets the list of additional editors available for selection.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors.EditorDecorations">
            <summary>
            Gets the list of additional editor decorations available for selection.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors.BuiltInEditorStyles">
            <summary>
            Gets the list of styles available for customising built-in editors.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.IProvideEditorHosting">
            <summary>
            An interface for controls that host other controls.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.IProvideEditorHosting.FindResource(System.Object)">
            <summary>
            Finds the resource for the given resource key.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The object mapped to the given resource key.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IProvideEditorHosting.DefaultMargin">
            <summary>
            Gets the default margin around hosted controls.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IProvideEditorHosting.BuiltInEditorStyles">
            <summary>
            Gets the collection of built in editor styles.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IProvideEditorHosting.DefaultMarginCompensationRequired">
            <summary>
            Gets whether or not default margin compensation is required.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DataGrid"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a dependancy property is changed.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when the <see cref="T:Mindscape.WpfElements.DataGrid"/> loses keyboard focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.RemoveInputBinding(System.Windows.Input.ICommand)">
            <summary>
            Removes the input binding for the given command.
            </summary>
            <param name="command">The <see cref="T:System.Windows.Input.ICommand"/> for finding the input binding to remove.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.RemoveInputBinding(System.Windows.Input.InputGesture)">
            <summary>
            Removes the input binding for the given input gesture.
            </summary>
            <param name="gesture">The <see cref="T:System.Windows.Input.InputGesture"/> for finding the input binding to remove.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.SelectAll">
            <summary>
            Selects all the items in this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.CanSelectAllProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.CanSelectAll"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the ItemsSource property changes.
            </summary>
            <param name="oldValue">The old items source.</param>
            <param name="newValue">The new items source.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the items property changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is released over this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse leaves this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved over this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Called when text input occurs while this <see cref="T:Mindscape.WpfElements.DataGrid"/> has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.MouseOverCellProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.MouseOverCell"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.HighlightedCellProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.HighlightedCell"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.HighlightedItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.HighlightedItem"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnHighlightedItemChanged(Mindscape.WpfElements.WpfDataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the HighlightedItemChanged event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.BringCellIntoView(Mindscape.WpfElements.WpfDataGrid.DataGridCell)">
            <summary>
            Changes the vertical and horizontal scroll offsets to include the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> within the viewport.
            </summary>
            <param name="cellModel">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> to bring into view.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.BringRowIntoView(System.Object)">
            <summary>
            Changes the vertical scroll offset to bring the given row into the viewport.
            </summary>
            <param name="row">The data context of the row to bring into view.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.GetCell(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> model object for the row and column at the given indicies.
            If the data grid is displaying data across multiple pages, a row index of zero will be the first item on the first page.
            </summary>
            <param name="rowIndex">The index of the row that the cell is in.</param>
            <param name="columnIndex">The index of the column that the cell is in.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> at the given row and column indicies.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.GetCellOnCurrentPage(System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> model object for the row and column indicies on the current page.
            A row index of zero will be the first item on the current page.
            </summary>
            <param name="rowIndex">The index of the row on the current page that the cell is in.</param>
            <param name="columnIndex">The index of the column that the cell is in.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> at the given row and column indicies.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.CellEditModeBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.CellEditModeBehavior"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsEditModeArrowKeyNavigationEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsEditModeArrowKeyNavigationEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsEditModeMaintainedDuringNavigationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsEditModeMaintainedDuringNavigation"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AllowUserToAddRowsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AllowUserToAddRows"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsSynchronizedWithCurrentItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsSynchronizedWithCurrentItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsToggleSelectAllButtonEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsToggleSelectAllButtonEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.HorizontalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.HorizontalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.VerticalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.VerticalGridLineBrush"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AlternatingRowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AlternatingRowBackground"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsViewportFixedWhenAddingAndRemovingRowsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsViewportFixedWhenAddingAndRemovingRows"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ObjectBuilderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ObjectBuilder"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnUserAddedRow(Mindscape.WpfElements.WpfDataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the UserAddedRow event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnValidateCell(Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.DataGrid.ValidateCell"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.OnMouseOverCellChanged(Mindscape.WpfElements.WpfDataGrid.DataGridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.DataGrid.MouseOverCellChanged"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsRightClickSelectionEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsRightClickSelectionEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectionTypeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectionType"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.DisplayedItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.DisplayedItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.PageSizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.PageSize"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.PageIndexProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.PageIndex"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsPagerVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsPagerVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.PagerStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.PagerStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.MaxPagerButtonCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.MaxPagerButtonCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.EllipsisModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.EllipsisMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsFilterRowVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsFilterRowVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsColumnHeaderFilterVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsColumnHeaderFilterVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsFooterVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsFooterVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsGroupingPanelVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsGroupingPanelVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.GroupedColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.GroupedColumns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.GroupingIndentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.GroupingIndent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AllowColumnReorderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AllowColumnReorder"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ShowColumnHeadersProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ShowColumnHeaders"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ShowRowHeadersProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ShowRowHeaders"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.RowHeaderWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.RowHeaderWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.RowHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.RowHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.GroupRowHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.GroupRowHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ColumnHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ColumnHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AllowEditingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AllowEditing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.HierarchyModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.HierarchyMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.ResetDisplayedItemsSource">
            <summary>
            Resets all sorting, grouping and filtering on the displayed items source.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.Expand(System.Object)">
            <summary>
            Expands the given data object if it has children.
            </summary>
            <param name="item">The hierarchical parent to expand.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.Collapse(System.Object)">
            <summary>
            Collapses the given data object if it has children.
            </summary>
            <param name="item">The hierarchical parent to collapse.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.SetAllowEditing(System.Object,System.Boolean)">
            <summary>
            Sets whether or not the given object can be edited by the user.
            </summary>
            <param name="rowContent">A data object displayed by the data grid.</param>
            <param name="allowEditing">Whether or not the user can edit the given object.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.SetRowBackground(System.Object,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush of the given row.
            </summary>
            <param name="rowContent">The row content to identify the desired row.</param>
            <param name="background">The background brush to apply to the row.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.SetAllowEditing(Mindscape.WpfElements.WpfDataGrid.DataGridCell,System.Boolean)">
            <summary>
            Sets whether or not the given cell can be edited by the user.
            </summary>
            <param name="cellModel">A <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> model object.</param>
            <param name="allowEditing">Whether or not the user can edit the value in the given cell.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGrid.SetCellBackground(Mindscape.WpfElements.WpfDataGrid.DataGridCell,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush of the gievn cell.
            </summary>
            <param name="cellModel">A <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> model object.</param>
            <param name="background">The background brush for the given cell.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.EffectiveColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.EffectiveColumns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.DefaultMarginProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.DefaultMargin"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AutoGenerateColumns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.Columns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.BuiltInEditorStylesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.BuiltInEditorStyles"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.BuiltInDisplayTemplatesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.BuiltInDisplayTemplates"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectedItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SkipGroupHeadersWhenNavigatingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SkipGroupHeadersWhenNavigating"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectionChangedEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.DataGrid.SelectionChanged"/> routed event.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectedItemsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectedItems"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectedCellProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectedCell"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.SelectedDataProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.SelectedData"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.FrozenColumnCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.FrozenColumnCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.FrozenRowCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.FrozenRowCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.FrozenEdgeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.FrozenEdge"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.FrozenRowEdgeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.FrozenRowEdge"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ShowFirstFrozenLineProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ShowFirstFrozenLine"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.ShowFrozenLineProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.ShowFrozenLine"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsFrozenLineVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsFrozenLineVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.IsFrozenRowLineVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.IsFrozenRowLineVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.AutoColumnWidthBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.AutoColumnWidthBehavior"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGrid.CanAutoSizeColumnHeadersProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DataGrid.CanAutoSizeColumnHeaders"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.CanSelectAll">
            <summary>
            Gets whether or not all the items in this <see cref="T:Mindscape.WpfElements.DataGrid"/> can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.CanSelectAllProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.RowIsExpandedChanged">
            <summary>
            Raised when a row is expanded or collapsed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.MouseOverCell">
            <summary>
            Gets the MouseOverCell.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.MouseOverCellProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.HighlightedCell">
            <summary>
            Gets or sets the highlighted <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.HighlightedCellProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.HighlightedCellChanging">
            <summary>
            Raised whenever the user has performed an action that will cause the Highlighted cell to change.
            This can be used to cancel the operation.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.HighlightedItem">
            <summary>
            Gets the highlighted item belonging to the row that contains the highlighted cell.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.HighlightedItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.HighlightedItemChanged">
            <summary>
            Raised when the HighlightedItem property value changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.CellEditModeBehavior">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellEditModeBehavior"/> which specifies how the user can cause a cell to go into edit mode using the mouse.
            The default is OnClickHighlightedCell.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.CellEditModeBehaviorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsEditModeArrowKeyNavigationEnabled">
            <summary>
            Gets or sets whether or not the arrow keys can be used to navigate the <see cref="T:Mindscape.WpfElements.DataGrid"/> while a cell is in edit mode.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsEditModeArrowKeyNavigationEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsEditModeMaintainedDuringNavigation">
            <summary>
            Gets or sets whether or not the DataGrid stays in edit mode when navigating cells. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsEditModeMaintainedDuringNavigationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AllowUserToAddRows">
            <summary>
            Gets or sets whether or not the user can add data grid rows. When set to true, an extra row is displayed at the end
            of the data. If the user edits a value in this row, the content of the row will be added to the items source.
            Then another empty row will be added at the end of the data.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AllowUserToAddRowsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsSynchronizedWithCurrentItem">
            <summary>
            Gets or sets a value that indicates whether a <see cref="T:Mindscape.WpfElements.DataGrid"/> should keep the SelectedItem synchronized with the current item in the Items property.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsSynchronizedWithCurrentItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsToggleSelectAllButtonEnabled">
            <summary>
            Gets or sets whether or not the toggle-select-all button is enabled.
            This is a button at the top left corner of the grid that selects or deselects all items.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsToggleSelectAllButtonEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.HorizontalGridLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to render the horizontal grid lines.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.HorizontalGridLineBrushProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.VerticalGridLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to render the verical grid lines.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.VerticalGridLineBrushProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AlternatingRowBackground">
            <summary>
            Gets or sets the AlternatingRowBackground.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AlternatingRowBackgroundProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsViewportFixedWhenAddingAndRemovingRows">
            <summary>
            Gets or sets whether or not the vieport is fixed to the currently displayed rows when new rows are added or removed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsViewportFixedWhenAddingAndRemovingRowsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ObjectBuilder">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IObjectBuilder"/> used for the user to add new rows.
            This is useful for building objects that do not have public default constructors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ObjectBuilderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.UserAddedRow">
            <summary>
            Raised whenever the user has finished adding a row to the <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.ValidateCell">
            <summary>
            Allows an application to validate the contents of a cell.  This is raised when the user changes the value of a cell.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.MouseOverCellChanged">
            <summary>
            Raised whenever the mouse is moved over a different cell.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsRightClickSelectionEnabled">
            <summary>
            Gets or sets whether or not the right mouse button can be used to select items.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsRightClickSelectionEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectionModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectionType">
            <summary>
            Gets or sets whether the user can select rows or cells.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectionTypeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.DisplayedItemsSource">
            <summary>
            Gets the collection of items being displayed by this <see cref="T:Mindscape.WpfElements.DataGrid"/>. This collection manages sorting and paging.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.DisplayedItemsSourceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.PageSize">
            <summary>
            Gets or sets the number of items per page.
            By default this value is zero which indicates all items are on one page.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.PageSizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.PageIndex">
            <summary>
            Gets or sets the index of the currently displayed page.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.PageIndexProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsPagerVisible">
            <summary>
            Gets or sets whether the built in pager control is visible. If set to null, the pager will be visible only if there is more than 1 page.
            The default is null.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsPagerVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.PagerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> for the built in <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.PagerStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.MaxPagerButtonCount">
            <summary>
            Gets or sets the maximum number of pager buttons that the built-in <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> can display.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.MaxPagerButtonCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.EllipsisMode">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.DataGrid.EllipsisMode"/> of the built-in <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.EllipsisModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsFilterRowVisible">
            <summary>
            Gets or sets whether or not the filter row is visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsFilterRowVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsColumnHeaderFilterVisible">
            <summary>
            Gets or sets whether or not the column header filter buttons are visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsColumnHeaderFilterVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsFooterVisible">
            <summary>
            Gets or sets whether or not the footer is visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsFooterVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsGroupingPanelVisible">
            <summary>
            Gets or sets whether the built in grouping panel is visible. The grouping panel allows users to group the data by columns.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsGroupingPanelVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.GroupedColumns">
            <summary>
            Gets the collection of grouped columns in the order of their grouping.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.GroupedColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.GroupingIndent">
            <summary>
            Gets or sets the number of pixels to indent a single level in the grouping tree.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.GroupingIndentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AllowColumnReorder">
            <summary>
            Gets or sets whether the user can reorder the columns.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AllowColumnReorderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ShowColumnHeaders">
            <summary>
            Gets or sets whether the column headers are visible.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ShowColumnHeadersProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ShowRowHeaders">
            <summary>
            Gets or sets whether the row headers are visible.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ShowRowHeadersProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header block.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.RowHeaderWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.RowHeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display custom content within row headers.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.RowHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.GroupRowHeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display custom content within group row headers;
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.GroupRowHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ColumnHeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to visualize column header content.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ColumnHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AllowEditing">
            <summary>
            Gets or sets whether the user can edit any of the cells in this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AllowEditingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.HierarchyMode">
            <summary>
            Gets or sets how to display hierarchical data when it is loaded. The default is collapsed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.HierarchyModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.HierarchicalItemStateChanging">
            <summary>
            Rasied when a hierarchical data item is requesting to be expanded or collapsed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.CustomSort">
            <summary>
            Gets or sets a custom sorting function. This is to provide more flexibility than custom sort comparers.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.EffectiveColumns">
            <summary>
            Gets the actual columns displayed by this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.EffectiveColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ScrollViewerStyleKey">
            <summary>
            Gets the resource key for the <see cref="T:System.Windows.Controls.ScrollViewer"/> style used by this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.DefaultMargin">
            <summary>
            Gets or sets the default margin around each control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.DefaultMarginProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.DefaultMarginCompensationRequired">
            <summary>
            Gets whether or not default margin compensation is required.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets whether the effective columns collection should be automatically be generated.
            Generated columns will be based on the gettable properties on the objects added to this <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AutoGenerateColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.Columns">
            <summary>
            Gets the collection of column definitions. Custom columns can be added to the data grid via this collection.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.EditorSelector">
            <summary>
            Gets the template selector used to create value editors.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.Editors">
            <summary>
            Gets the collection of custom editors for this <see cref="T:Mindscape.WpfElements.DataGrid"/> instance.
            </summary>
            <remarks>Add editors to this collection to define how to edit custom types or
            to customise the display of specific properties.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.BuiltInEditorStyles">
            <summary>
            Gets or sets the styles applied to built-in editors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.BuiltInEditorStylesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.BuiltInDisplayTemplates">
            <summary>
            Gets or sets the templates for displaying cell values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.BuiltInDisplayTemplatesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectedItem">
            <summary>
            Gets or sets the selected item. This property is only used when the data grid is in row selection mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectedItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SkipGroupHeadersWhenNavigating">
            <summary>
            Gets or sets whether or not navigating the cells will skip the group header rows. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SkipGroupHeadersWhenNavigatingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DataGrid.SelectionChanged">
            <summary>
            Raised when the selected items changed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectedItems">
            <summary>
            Gets or sets the collection of selected items. This property is only used when the data grid is in row selection mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectedItemsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectedCell">
            <summary>
            Gets or sets the selected cell. This property is only used when the data grid is in cell selection mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectedCellProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectedData">
            <summary>
            Gets the selected data. If a cell is selected, then this property holds the content of that cell.
            If a row is selected, then this property holds the content of that row.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.SelectedDataProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.SelectedCells">
            <summary>
            Gets the collection of selected cells. This property is only used when the data grid is in cell selection mode.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.FrozenColumnCount">
            <summary>
            Gets or sets the number of frozen columns.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.FrozenColumnCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.FrozenRowCount">
            <summary>
            Gets or sets the FrozenRowCount.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.FrozenRowCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.FrozenEdge">
            <summary>
            Gets the combined width of the frozen columns.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.FrozenEdgeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.FrozenRowEdge">
            <summary>
            Gets the FrozenRowEdge.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.FrozenRowEdgeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ShowFirstFrozenLine">
            <summary>
            Gets or sets whether the frozen line should be displayed when there are no frozen columns.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ShowFirstFrozenLineProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ShowFrozenLine">
            <summary>
            Gets or sets whether or not any frozen line are displayed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.ShowFrozenLineProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsFrozenLineVisible">
            <summary>
            Gets whether the frozen line is currently visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsFrozenLineVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.IsFrozenRowLineVisible">
            <summary>
            Gets the IsFrozenRowLineVisible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.IsFrozenRowLineVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.AutoColumnWidthBehavior">
            <summary>
            Gets or sets the auto column width behavior.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.AutoColumnWidthBehaviorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.CanAutoSizeColumnHeaders">
            <summary>
            Gets or sets whether or not column headers are considered when auto sizing a column. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DataGrid.CanAutoSizeColumnHeadersProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DataGrid.ExpanderToggleButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Style"/> of DataGrid expander toggle button.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridRowEventHandler">
            <summary>
            Represents the method that will handle row-related events of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridCellEventHandler">
            <summary>
            Represents the method that will handle cell-related events of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellEditModeBehavior">
            <summary>
            Specifies how the user can cause a data grid cell to go into edit mode using the mouse.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellEditModeBehavior.OnClick">
            <summary>
            Data grid cells will be editable after the user clicks on them.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellEditModeBehavior.OnClickHighlightedCell">
            <summary>
            Clicking on a highlighted data grid cell will cause it to go into edit mode.
            Cells can be highlighted by clicking on them with the mouse, or by using navigation keys to change which cell is highlighted.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeaderRole">
            <summary>
            Defines the state or role of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeaderRole.Normal">
            <summary>
            The column header displays above its associated column.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeaderRole.Floating">
            <summary>
            The column header is the object of a drag-and-drop operation to move a column.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeaderRole.Padding">
            <summary>
            The column header is the last header in the row of column headers and is used
            for padding.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeaderRole.Grouping">
            <summary>
            The column header is displayed in a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/> and represents a grouped column.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnToFilterVisibilityConverter">
            <summary>
            Determines whether or not to display the filter button for a given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnToFilterVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> into the visibility of the column header filter button.
            </summary>
            <param name="value">The value to be modified.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The visibility of the filter button for the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnToFilterVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridCsvExporter">
            <summary>
            Implementation class for exporting a DataGrid to CSV format
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridExporter">
            <summary>
             Exports a DataGrid's content to a particular format
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGridExporter.Csv">
            <summary>
            Exports a DataGrid to the CSV format
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DataGridExporter"/> class. 
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridExporter.WriteFile(Mindscape.WpfElements.DataGrid,System.String)">
            <summary>
            Exports a DataGrid to a file
            </summary>
            <param name="dataGrid">The DataGrid to be exported</param>
            <param name="path">The file in which to write the formatted data</param>
            <remarks>If the file exists, it is overwritten</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridExporter.WriteString(Mindscape.WpfElements.DataGrid)">
            <summary>
            Exports a DataGrid and returns the content formatted as the specified file format as a string
            </summary>
            <param name="dataGrid">The DataGrid to export</param>
            <returns>A string with the DataGrid's content formatted as the specified file type</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridExporter.WriteTextWriter(Mindscape.WpfElements.DataGrid,System.IO.TextWriter)">
            <summary>
            Exports a DataGrid to a TextWriter
            </summary>
            <param name="dataGrid">The DataGrid to export</param>
            <param name="textWriter">The TextWriter that is to have the contents written to</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridExporter.WriteCore(Mindscape.WpfElements.DataGrid,System.IO.TextWriter)">
            <summary>
            Override this with specific logic to format a DataGrid's ItemsContent to a particular file format.
            </summary>
            <param name="dataGrid">The DataGrid to export</param>
            <param name="textWriter">The TextWriter that will contain the resulting formatted data</param>
        </member>
        <member name="M:Mindscape.WpfElements.DataGridCsvExporter.WriteCore(Mindscape.WpfElements.DataGrid,System.IO.TextWriter)">
            <summary>
            Functionality to write the contents of a datagrid to an output destination
            </summary>
            <param name="dataGrid">The DataGrid to export</param>
            <param name="textWriter">The destination to export to</param>
        </member>
        <member name="P:Mindscape.WpfElements.DataGridCsvExporter.Delimiter">
            <summary>
            Gets or sets the character(s) used to separate cells in the CSV file
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGridCsvExporter.ExportMode">
            <summary>
            Property that selects which set of items will be exported from a DataGrid
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGridCsvExporter.IsQuotingEnabled">
            <summary>
            Gets or sets whether or not values are wrapped in quote marks. The default is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DataGridCsvExporter.IsColumnHeaderExported">
            <summary>
            Enables/disables the writing of a DataGrid's column headers as the first line
            of a CSV exporter's output
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DataGridExportMode">
            <summary>
            Selects what items in the DataGrid will be exported
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGridExportMode.All">
            <summary>
            Exports the entire collection the DataGrid is bound to
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DataGridExportMode.SelectedRows">
            <summary>
            Exports just the rows the user has selected from the DataGrid's ItemSource
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridFilterRow">
            <summary>
            A row of filtering editors that sync up with the columns of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridFooter">
            <summary>
            A footer row for a <see cref="T:Mindscape.WpfElements.DataGrid"/> that can be used to display collection aggregates.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridFooter"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridFooter.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridFooter.Columns"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridFooter.Columns">
            <summary>
            Gets or sets the collection of columns to generate the items source.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridFooter.ColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridFooterCell">
            <summary>
            Represents a cell on a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridFooter"/> lined up with a particular column.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridFooterCell.Column">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridFooterCell.Aggregate">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IAggregate"/> for displaying in the footer of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroup">
            <summary>
            The data model of a group in a data grid.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroup.Children">
            <summary>
            Gets the collection of items within this group.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroup.Level">
            <summary>
            Gets the level of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroup"/> within the grouping tree.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroup.IsExpanded">
            <summary>
            Gets or sets whether or not this group is expanded.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroup.GroupName">
            <summary>
            Gets the name of this group.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel">
            <summary>
            A panel that allows the user to drag and drop column headers to group by that column.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation enters this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation is moving over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation leaves this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation is dropped over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.ColumnDropRequestPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.ColumnDropRequestPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.IsRequestingColumnDropPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.IsRequestingColumnDropPosition"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Returns whether or not the given object can be used as its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True if the item can be used as its own container. False otherwise.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.GetContainerForItemOverride">
            <summary>
            Gets a container that can be displayed in this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <returns>A new <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Clears the given container.
            </summary>
            <param name="element">The container to clear.</param>
            <param name="item">The item held by the given container.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the given container to display the given item.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> to prepare.</param>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to be displayed by the given header.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.ColumnDropRequestPosition">
            <summary>
            Gets the position of the column drop request from the left edge of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.ColumnDropRequestPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.IsRequestingColumnDropPosition">
            <summary>
            Gets whether a column is requesting to be dropped onto this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingPanel.IsRequestingColumnDropPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow">
            <summary>
            A collapsable row in a data grid that appears above a group of rows.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IDataGridRow">
            <summary>
            A row element that can be displayed in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.IDataGridRow.Index">
            <summary>
            Gets the display index of this row on the current page.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.IndexProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.Index"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.Group">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroup"/> of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display the header of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to display the header of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.HeaderTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.Index">
            <summary>
            Gets the display index of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/> on the current page.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow.IndexProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchicalItemStateChangingEventArgs">
            <summary>
            Contains event information for when a hierarchical <see cref="T:Mindscape.WpfElements.DataGrid"/> item is requesting to be expanded or collapsed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchicalItemStateChangingEventArgs.Item">
            <summary>
            Gets the hierarchical data item that is changing state.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchicalItemStateChangingEventArgs.IsExpanding">
            <summary>
            Gets whether or not the hirarchical item is requesting to be expanded.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchicalItemStateChangingEventArgs.CanChangeState">
            <summary>
            Gets or sets whether or not the hierarchical item is allowed to change state.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchyMode">
            <summary>
            Specifies the default display of hierarchical data loaded in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchyMode.Collapsed">
            <summary>
            Hierarchical items are initially collapsed when loaded in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridHierarchyMode.Expanded">
            <summary>
            Hierarchical items are initially expanded when loaded in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridItemWrapper">
            <summary>
            Wraps around a data object that has been added to the data grid to surface hierarchical information.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridItemWrapper.Object">
            <summary>
            Gets the wrapped object.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridItemWrapper.PropertyChanged">
            <summary>
            Raised when a property changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridPagerVisibilityConverter">
            <summary>
            Determines the actual visibility of a built in <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPagerVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the visibility of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            The first value is the IsPagerVisible value from the <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            The second value is the page count.
            </summary>
            <param name="values">The values produced by the binding sources.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The visibility of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPagerVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to multiple binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel">
            <summary>
            Provides row virtualization for a <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the elements within this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/> and returns the desired size.
            </summary>
            <param name="availableSize">The available size for this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges all the elements within this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.OnClearChildren">
            <summary>
            Called when the visual children collection is cleared.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.LineUp">
            <summary>
            Scrolls up by one line.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.LineDown">
            <summary>
            Scrolls down by one line.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.LineLeft">
            <summary>
            Scrolls left by 16 pixels.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.LineRight">
            <summary>
            Scroll right by 16 pixels.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.PageUp">
            <summary>
            Scrolls up by the hight of the viewport.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.PageDown">
            <summary>
            Scrolls down by the height of the viewport.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.PageLeft">
            <summary>
            Scrolls left by the width of the viewport.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.PageRight">
            <summary>
            Scrolls right by the width of the viewport.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MouseWheelUp">
            <summary>
            Scrolls up.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MouseWheelDown">
            <summary>
            Scrolls down.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MouseWheelLeft">
            <summary>
            Scrolls left.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MouseWheelRight">
            <summary>
            Scrolls right.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.SetHorizontalOffset(System.Double)">
            <summary>
            Sets the horizontal scroll offset.
            </summary>
            <param name="offset">The desired horizontal scroll offset.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.SetVerticalOffset(System.Double)">
            <summary>
            Sets the vertical scroll offset.
            </summary>
            <param name="offset">The desired vertical scroll offset.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
            <summary>
            Not supported.
            </summary>
            <param name="visual">Not used.</param>
            <param name="rectangle">Not used.</param>
            <returns>A new <see cref="T:System.Windows.Rect"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.CanHorizontallyScroll">
            <summary>
            Gets or sets whether horizontal scrolling is supported.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.CanVerticallyScroll">
            <summary>
            Gets or sets whether vertical scrolling is supported.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ExtentWidth">
            <summary>
            Gets the width of the scroll extent.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ExtentHeight">
            <summary>
            Gets the height of the scroll extent.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ViewportWidth">
            <summary>
            Gets the width of the viewport.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ViewportHeight">
            <summary>
            Gets the height of the viewport.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPanel.ScrollOwner">
            <summary>
            Gets or sets the scroll owner.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowEventArgs">
            <summary>
            Provides data for row-related <see cref="T:Mindscape.WpfElements.DataGrid"/> events.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRowEventArgs.RowContent">
            <summary>
            Gets the content of the row associated with the event.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel">
            <summary>
            Provides column virtualization for a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the elements within this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/> and returns the desired size.
            </summary>
            <param name="availableSize">The available size for this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges all the elements within this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRowPanel.OnClearChildren">
            <summary>
            Called when the visual children collection is cleared.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.BuiltInDisplayTemplate">
            <summary>
            Maps an editor key to a <see cref="T:System.Windows.DataTemplate"/> used for displaying a data grid cell value.
            </summary>
            <remarks>This is used to override editor templates when creating themes for the grid; for
            mapping a type or property to an editor, use a TypeEditor or PropertyEditor declaration.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BuiltInDisplayTemplate.EditorKey">
            <summary>
            Gets or sets the editor key.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BuiltInDisplayTemplate.Template">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.BuiltInDisplayTemplateCollection">
            <summary>
            A collection for mapping editor keys to display templates.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.BuiltInDisplayTemplateCollection.FindTemplate(System.Object)">
            <summary>
            Returns the display template for the given editor key.
            </summary>
            <param name="editorKey">The editor key.</param>
            <returns>The display template mapped to the given editor key.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ColumnWidthChangedEventArgs">
            <summary>
            Holds information about the WidthChanged event of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ColumnWidthChangedEventArgs.OldWidth">
            <summary>
            Gets the width of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> before the width was changed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ColumnWidthChangedEventArgs.NewWidth">
            <summary>
            Gets the new width of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer">
            <summary>
            A control representing a single cell in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the content changes.
            </summary>
            <param name="oldContent">The old content.</param>
            <param name="newContent">The new content.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsHighlightedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsHighlighted"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsEditing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsValidProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsValid"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.ColumnProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Column"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.RowProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Row"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsExpandableCellProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsExpandableCell"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsSelected">
            <summary>
            Gets the whether this cell is selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsHighlighted">
            <summary>
            Gets whether this cell is the highlighted cell.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsHighlightedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsEditing">
            <summary>
            Gets whether this cell is in edit mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsEditingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsValid">
            <summary>
            Gets whether the current cell value is valid.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsValidProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Value">
            <summary>
            Gets or sets the cell value. This property is only set when the cell is in edit mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Column">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> that this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> belongs to.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.ColumnProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.Row">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> that this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> is displayed in.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.RowProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsExpandableCell">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> supports expandable content.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer.IsExpandableCellProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell">
            <summary>
            Represents the location of a cell in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridCell.#ctor(System.Object,Mindscape.WpfElements.WpfDataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> class.
            </summary>
            <param name="rowContent">The content of the row that the cell is within.</param>
            <param name="column">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> that the cell is within.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridCell.GetCell(System.Object,Mindscape.WpfElements.WpfDataGrid.DataGridColumn)">
            <summary>
            Returns a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> model object at the given row and column.
            </summary>
            <param name="rowContent">The data object displayed by the row that the cell is in.</param>
            <param name="column">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> that the cell is in.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCell"/> at the given row and column.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCell.RowContent">
            <summary>
            Gets the content of the row that the cell is within.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCell.Column">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> that the cell is within.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridCell.Value">
            <summary>
            Gets the value of the cell.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn">
            <summary>
            Represents a column in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FilterProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Filter"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.WidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Width"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.OnWidthChanged(Mindscape.WpfElements.WpfDataGrid.ColumnWidthChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.WidthChanged"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ActualWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ActualWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MinWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MinWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MaxAutoWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MaxAutoWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Header"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowSortProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowSort"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowResizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowResize"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowEditingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowEditing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowGroupingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowGrouping"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowFilteringProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowFiltering"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupHeaderCellTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupHeaderCellTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterAggregateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterAggregate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupAggregateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupAggregate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirectionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirection"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortComparerProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortComparer"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.TagProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Tag"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.BackgroundProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Background"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ForegroundProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsAlwaysInEditModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsAlwaysInEditMode"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.PropertyName">
            <summary>
            Gets or set the name of the property that the cells in this column are bound to.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayMemberBinding">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Data.Binding"/> that can be used to display data in this column.
            This is an alternative to setting PropertyName for more advanced cases.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Filter">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> that provides filtering logic for this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FilterProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Width">
            <summary>
            Gets or sets the width of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.WidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.WidthChanged">
            <summary>
            Raised when the width of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ActualWidth">
            <summary>
            Gets the actual rendered width of the column.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ActualWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MinWidth">
            <summary>
            Gets or sets the minimum allowed width of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            The default is 10 pixels.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MinWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MaxAutoWidth">
            <summary>
            Gets or sets the maximum auto width of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.MaxAutoWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Header">
            <summary>
            Gets or sets the object displayed in the column header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.HeaderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsVisible">
            <summary>
            Gets or sets whether or not this column is visible in the data grid.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowSort">
            <summary>
            Gets or sets the whether or not the user can sort this column.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowSortProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowResize">
            <summary>
            Gets or sets whether this column can be resized.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowResizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowEditing">
            <summary>
            Gets or sets whether the cells within this column can be edited.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowEditingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowEditingChanged">
            <summary>
            Raised when the AllowEditing property changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowGrouping">
            <summary>
            Gets or sets the AllowGrouping.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowGroupingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowFiltering">
            <summary>
            Gets or sets whether or not the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> supports filtering. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.AllowFilteringProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to customize the footer display for the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupHeaderCellTemplate">
            <summary>
            Gets or sets the GroupHeaderCellTemplate.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupHeaderCellTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterAggregate">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IAggregate"/> primarily used for displaying in the footer of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.FooterAggregateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupAggregate">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IAggregate"/> used for displaying in the group headers.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupAggregateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display cell values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to display cell values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.DisplayTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to edit cell values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to edit cell values.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.EditorTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display the group header of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/> generated by grouping this column.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to display the group header of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroupingRow"/> generated by grouping this column.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.GroupRowHeaderTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirection">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirection"/> of this column.
            The default is SortDirection.None.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirectionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortDirectionChanged">
            <summary>
            Raised when the sort direction of this column changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortComparer">
            <summary>
            Gets or sets a custom comparer to be used when sorting on this column.
            This is a dependency property.
            </summary>
            <remarks>
            The custom comparer is applied between the objects in the data source,
            not between the property values in this column.
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.SortComparerProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Tag">
            <summary>
            Gets or sets the object that contains data to associate with the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.TagProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Background">
            <summary>
            Gets or sets the background brush of all the cells in this column.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.BackgroundProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.Foreground">
            <summary>
            Gets or sets the foreground brush of all the cells in this column.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.ForegroundProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsAlwaysInEditMode">
            <summary>
            Gets or sets whether or not the cells in this column are always in edit mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.IsAlwaysInEditModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumn.PropertyInfo">
            <summary>
            Gets the property info of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader">
            <summary>
            The header control of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.ColumnProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.Column"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.RoleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.Role"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when previewing the left mouse button being pressed over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when previewing the mouse moving over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Called when a drag and drop operation is giving feedback.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.Column">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> for this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.ColumnProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.Role">
            <summary>
            Gets whether this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> control is being used as a normal header, a cursor visual for relocating a column, 
            padding at the end of all columns or a grouped column header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader.RoleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridCommands">
            <summary>
            A class containing commands used by a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.NextPage">
            <summary>
            A command for navigating to the next page of data.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.PreviousPage">
            <summary>
            A command for navigating to the prevous page of data.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.FirstPage">
            <summary>
            A command for navigating to the first page of data.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.LastPage">
            <summary>
            A command for navigating to the last page of data.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightUp">
            <summary>
            A command for navigating the highlighted cell up one row.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightDown">
            <summary>
            A command for navigating the highlighted cell down one row.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightLeft">
            <summary>
            A command for navigating the highlighted cell left one column.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightRight">
            <summary>
            A command for navigating the highlighted cell right one column.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightLeftWithWrapping">
            <summary>
            A command for navigating the highlighted cell left one column and wrapping to the next row if necessary.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.HighlightRightWithWrapping">
            <summary>
            A command for navigating the highlighted cell right one column and wrapping to the previous row if necessary.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.SelectUp">
            <summary>
            A command for adding the next cell up to the selection.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.SelectDown">
            <summary>
            A command for adding the next cell down to the selection.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.ToggleSelectAll">
            <summary>
            A command for toggling the selection of all items.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.StartOfRow">
            <summary>
            A command for navigating the highlighted cell to the start of the row.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.StartOfGrid">
            <summary>
            A command for navigating the highlighted cell to the first cell in the grid.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.EndOfRow">
            <summary>
            A command for navigating the highlighted cell to the end of the row.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.EndOfGrid">
            <summary>
            A command for navigating the highlighted cell to the last cell in the grid.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.PageUp">
            <summary>
            A command for navigating the highlighted cell up by the number of rows that currently fit within the view port.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.PageDown">
            <summary>
            A command for navigating the highlighted cell down by the number of rows that currently fit within the view port.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.EnterEditMode">
            <summary>
            A command for switching the current cell into edit mode.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.CancelEditMode">
            <summary>
            A command for canceling cell edit mode and reverting any value changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.UngroupColumn">
            <summary>
            A command for ungrouping a data grid column.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.ToggleExpandedState">
            <summary>
            A command for changing the expanded state of hierarchical items.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridCommands.RemoveFilter">
            <summary>
            A command for removing the filter from a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter">
            <summary>
            A control for presenting the column headers of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when the item container style changes.
            </summary>
            <param name="oldItemContainerStyle">The old item container style.</param>
            <param name="newItemContainerStyle">The new item container style.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation enters this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation is moving over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation leaves this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when a drag operation is dropped over this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.ColumnDropRequestPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.ColumnDropRequestPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.IsRequestingColumnDropPositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.IsRequestingColumnDropPosition"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.PaddingColumnHeaderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.PaddingColumnHeader"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Returns whether or not the given object can be used as its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True if the item can be used as its own container. False otherwise.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.GetContainerForItemOverride">
            <summary>
            Gets a container that can be displayed in this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            </summary>
            <returns>A new <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the given container to display the given item.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> to prepare.</param>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to be displayed by the given header.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Clears the given container.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> to clear.</param>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> being displayed by the given header.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.ColumnDropRequestPosition">
            <summary>
            Gets the position of the column drop request from the left edge of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.ColumnDropRequestPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.IsRequestingColumnDropPosition">
            <summary>
            Gets whether a column is requesting to be dropped onto this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.IsRequestingColumnDropPositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.PaddingColumnHeader">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumnHeader"/> used as padding at the end of all columns.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridHeaderRowPresenter.PaddingColumnHeaderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter">
            <summary>
            A control for displaying the contents of a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter.GetContainerForItemOverride">
            <summary>
            Gets a container for displaying an item in the <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
            <returns>A new <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the given container for displaying the given item.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> to prepare.</param>
            <param name="item">The item to be displayed by the given row.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Returns whether or not the given item can be used as its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True if the given item can be used as its own container. False otherwise.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource">
            <summary>
            A collection that provides sorting and paging support for items in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource"/> class.
            </summary>
            <param name="source">The original items source.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.Sort(System.Reflection.PropertyInfo,Mindscape.WpfElements.WpfDataGrid.SortDirection)">
            <summary>
            Sorts the items by the given property in the given sort direction.
            </summary>
            <param name="sortProperty">The property to sort the items by.</param>
            <param name="sortDirection">The direction to sort the items.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.Sort(System.Collections.Generic.IComparer{System.Object},Mindscape.WpfElements.WpfDataGrid.SortDirection)">
            <summary>
            Sorts the items using the given comparer in the given sort direction.
            </summary>
            <param name="comparer">The comparer to sort the items by.</param>
            <param name="sortDirection">The direction to sort the items.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for enumerating this collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for enumerating this collection.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.IndexOf(System.Object)">
            <summary>
            Gets the index of the given item.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The index of the given item.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.CountOnCurrentPage">
            <summary>
            Gets the number of items on the current page after filtering has been applied. This count will include group headers.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.PageSize">
            <summary>
            Gets or sets the number of items on each page.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.PageIndex">
            <summary>
            Gets or sets the index of the currently displayed page of data.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.PageCount">
            <summary>
            Gets the total number of data pages.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.CollectionUpdated">
            <summary>
            Raised when the collection is updated.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridItemsSource.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager">
            <summary>
            A control for allowing the user to navigate through pages of data in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridPager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.DataGridItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.DataGridItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.PageIndexProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.PageIndex"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.MaxPagerButtonCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.MaxPagerButtonCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.EllipsisModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.EllipsisMode"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.DataGridItemsSource">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.DataGridItemsSource"/> of the <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.DataGridItemsSourceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.PageIndex">
            <summary>
            Gets or sets the index of the currently displayed page.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.PageIndexProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.MaxPagerButtonCount">
            <summary>
            Gets or sets the maximum number of pager buttons to display.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.MaxPagerButtonCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.EllipsisMode">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.EllipsisMode"/> of the pager buttons.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridPager.EllipsisModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridPager.PagerButtons">
            <summary>
            Gets the collection of pager buttons.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow">
            <summary>
            A control representing a row in a <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.ContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Content"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsEditing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IndexProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Index"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.LevelProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Level"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRow.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the given container for displaying the given item.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> to prepare.</param>
            <param name="item">The item to be displayed by the given cell container.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRow.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Clears the given item container.
            </summary>
            <param name="element">The item container to clear.</param>
            <param name="item">The item being displayed by the given item container.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Returns whether or not the given item can be used as its own item container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True if the given item can be used as its own item container. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Content">
            <summary>
            Gets or sets the content of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.ContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsSelected">
            <summary>
            Gets whether this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> is selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsSelectedChanged">
            <summary>
            Raised when the IsSelected property changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsEditing">
            <summary>
            Gets whether or not one of the cells in this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> is in edit mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsEditingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Index">
            <summary>
            Gets the display index of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> on the current page.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IndexProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.Level">
            <summary>
            Gets the level of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridRow"/> within the grouping tree.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfDataGrid.DataGridRow.LevelProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.HasChildren">
            <summary>
            Gets whether or not this row has hierarchical children.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.HierarchyLevel">
            <summary>
            Gets the level of this row within the hierarchy tree.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridRow.IsExpanded">
            <summary>
            Gets or sets whether or not this row is expanded to show it's children.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataGridRow.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridSelectionType">
            <summary>
            Specifies what users can select in a <see cref="T:Mindscape.WpfElements.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridSelectionType.Row">
            <summary>
            Users can select rows.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridSelectionType.Cell">
            <summary>
            Users can select individual cells.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.DataGridSelectionType.RowAndCell">
            <summary>
            Users can select rows by clicking on the row headers, and also click on individual cells to select the cells.
            In single selection mode, only 1 row or 1 cell can be selected at any time.
            Multiple and Extended selection modes allow any number of rows and cells to be selected.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs">
            <summary>
            Contains event information for when a cell is requesting to validate its value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs.Cell">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridCellContainer"/> being validated.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs.ValidationMessage">
            <summary>
            Gets or sets a validation message.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs.IsValid">
            <summary>
            Gets or sets if the cell value is valid.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataGridValidateCellEventArgs.Handled">
            <summary>
            Gets or sets whether the event was handled.  The <see cref="T:Mindscape.WpfElements.DataGrid"/> sets this
            by default.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper">
            <summary>
            A wrapper for setting the items source of a <see cref="T:Mindscape.WpfElements.DataGrid"/> to be a <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.DataTable"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper"/> class.
            </summary>
            <param name="dataTable">The <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.DataTable"/> to wrap.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.GetEnumerator">
            <summary>
            Gets the enumerator that enumerates the rows of this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper"/>.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.DataTable">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.DataTable"/> that this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper"/> uses.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper.CollectionChanged">
            <summary>
            Raised when this <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataTableWrapper"/> collection changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.EllipsisMode">
            <summary>
            Specifies ellipsis mode of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.EllipsisMode.None">
            <summary>
            The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> does not display an ellipsis.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.EllipsisMode.Before">
            <summary>
            The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> displays an ellipsis on the first pager button if necessary.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.EllipsisMode.After">
            <summary>
            The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> displays an ellipsis on the last pager button if necessary.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.EllipsisMode.Both">
            <summary>
            The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/> displays an ellipsis on the first and the last pager buttons where necessary.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.AndFilter">
            <summary>
            A filter that will match only if all of the sub filters match.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IFilter">
            <summary>
            Provides filtering logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object matches the filtering logic.
            </summary>
            <param name="o">The object to check.</param>
            <returns>Whether or not the given object passes the filtering logic.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AndFilter.Add(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Adds the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to this <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to add.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AndFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object matches all of the sub filters.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object matches all of the sub filters. False otherwise.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IBooleanFilterBuilder">
            <summary>
            Provides a way to build boolean IFilter objects.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IFilterBuilder">
            <summary>
            Provides a way to build IFilter objects.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.IFilterBuilder.Name">
            <summary>
            Gets the display name of the filter.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IBooleanFilterBuilder.Build(Mindscape.WpfElements.WpfDataGrid.IFilter,Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="firstFilter">The first part of the boolean filter.</param>
            <param name="secondFilter">The second part of the boolean filter.</param>
            <returns>A boolean <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.AndFilterBuilder">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.AndFilterBuilder.Build(Mindscape.WpfElements.WpfDataGrid.IFilter,Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.
            </summary>
            <param name="firstFilter">The first part of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.</param>
            <param name="secondFilter">The second part of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/> containing the given filters.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.AndFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.AndFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.OrFilterBuilder">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.OrFilterBuilder.Build(Mindscape.WpfElements.WpfDataGrid.IFilter,Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.
            </summary>
            <param name="firstFilter">The first part of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.</param>
            <param name="secondFilter">The second part of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/> containing the given filters.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.OrFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription">
            <summary>
            Describes how to build a boolean filter.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription">
            <summary>
            Provides information about how to build a filter for a data type.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IFilterDescription.SetAs(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Sets the filter description to best match the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to mimic.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.IFilterDescription.Filter">
            <summary>
            Gets the current filter created by this filter description.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.IFilterDescription.FilterChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.WpfDataGrid.IFilterDescription.Filter"/> changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.#ctor(Mindscape.WpfElements.WpfDataGrid.IFilterDescription,Mindscape.WpfElements.WpfDataGrid.IFilterDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription"/> class.
            </summary>
            <param name="firstFilter">The first part of the boolean filter.</param>
            <param name="secondFilter">The second part of the boolean filter.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.SetAs(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Sets the filter description to best match the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to mimic.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.Builder">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IBooleanFilterBuilder"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.FirstFilter">
            <summary>
            Gets an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription"/> describing the first part of the boolean filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.SecondFilter">
            <summary>
            Gets an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription"/> describing the second part of the boolean filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.Filter">
            <summary>
            Gets the current filter created by this filter description.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.FilterChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.WpfDataGrid.BooleanFilterDescription.Filter"/> changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ColumnFilter">
            <summary>
            Links a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ColumnFilter.#ctor(Mindscape.WpfElements.WpfDataGrid.DataGridColumn,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ColumnFilter"/> class.
            </summary>
            <param name="column">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to link with.</param>
            <param name="useBooleanFilter">Whether or not to use a boolean filter.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ColumnFilter.Description">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription"/> used to create the filter for the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ColumnFilter.Column">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> that is linked to the filter.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ColumnToColumnFilterConverter">
            <summary>
            Links a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilterDescription"/> via a <see cref="T:Mindscape.WpfElements.WpfDataGrid.ColumnFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ColumnToColumnFilterConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> to a <see cref="T:Mindscape.WpfElements.WpfDataGrid.ColumnFilter"/>.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.ColumnFilter"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ColumnToColumnFilterConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ColumnToColumnFilterConverter.UseBooleanFilter">
            <summary>
            Gets or sets whether or not a boolean filter is used.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IComparableFilterBuilder">
            <summary>
            Provides a way to build IFilter objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IComparableFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="value1">The first value of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.</param>
            <param name="value2">The second value of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.</param>
            <returns>An IFilter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.NoFilterBuilder">
            <summary>
            Does not build a filter. Useful for select no filter from a drop down.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NoFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Always returns null.
            </summary>
            <param name="value1">Unused.</param>
            <param name="value2">Unused.</param>
            <returns>null.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.NoFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.NoFilterBuilder"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.LessThanFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilterBuilder">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EqualsFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.EqualsFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NotEqualFilterBuilder.Build(System.IComparable,System.IComparable)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter"/> based of the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.NotEqualFilterBuilder.Name">
            <summary>
            Gets the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription">
            <summary>
            Describes how to build a filter for comparable types.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription"/> class.
            </summary>
            <param name="comparableType">The comparable type.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.SetAs(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Sets the filter description to best match the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to mimic.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.FirstValue">
            <summary>
            Gets or sets the first <see cref="T:System.IComparable"/> value of the filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.SecondValue">
            <summary>
            Gets or sets the second <see cref="T:System.IComparable"/> value of the filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.Builder">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IComparableFilterBuilder"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.Filter">
            <summary>
            Gets the current filter created by this filter description.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.ComparableType">
            <summary>
            Gets the type of comparable object to build a filter for.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.FilterChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription.Filter"/> changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ComparableTypeTemplate">
            <summary>
            Maps the comparable type of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.ComparableFilterDescription"/> to a <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IDataTemplateMatcher">
            <summary>
            Maps a selection criterion to a <see cref="T:System.Windows.DataTemplate"/> in a <see cref="T:Mindscape.WpfElements.MatchingTemplateSelector"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IDataTemplateMatcher.Matches(System.Object)">
            <summary>
            Tests whether an object matches the criterion for the <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
            <param name="item">The object to be tested.</param>
            <returns>true if the object matches the criterion; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.IDataTemplateMatcher.Template">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> to be used for objects that meet this criterion.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ComparableTypeTemplate.Matches(System.Object)">
            <summary>
            Tests whether an object matches the criterion for this <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
            <param name="item">The object to be tested.</param>
            <returns>True if the object matches the criterion; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableTypeTemplate.ComparableType">
            <summary>
            Gets or sets the comparable type.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ComparableTypeTemplate.Template">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription">
            <summary>
            Describes how to build a filter from the valid values of an object.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.#ctor(Mindscape.WpfElements.PropertyEditing.IPropertyInfo,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription"/> class.
            </summary>
            <param name="propertyInfo">Used to provide a type converter if any.</param>
            <param name="values">The valid selectable values.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.SetAs(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Sets the filter description to best match the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to mimic.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.IsAllSelected">
            <summary>
            Gets or sets whether or not all the values are selected.
            This property is null if at least one, but not all items are selected.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.Values">
            <summary>
            Gets a list of selectable values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.Filter">
            <summary>
            Gets the current filter created by this filter description.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.FilterChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.WpfDataGrid.ObjectFilterDescription.Filter"/> changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.SelectableObject">
            <summary>
            An object that knows its selection state.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.SelectableObject.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.SelectableObject"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="displayValue">The display value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.SelectableObject.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.SelectableObject.IsSelected">
            <summary>
            Gets or sets the selection state of the object.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.OrFilter">
            <summary>
            A filter that will match if one of the sub filters matches.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.OrFilter.Add(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Adds the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to this <see cref="T:Mindscape.WpfElements.WpfDataGrid.OrFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to add.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.OrFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object matches at least one of the sub filters.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object matches at least one of the sub filters. False otherwise.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter">
            <summary>
            Provides filtering logic for contained strings.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ContainsFilter.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/>.
            </summary>
            <param name="value">The comparison string.</param>
            <param name="matchCase">The case sensitivity.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ContainsFilter.IsMatch(System.Object)">
            <summary>
            Returns true if the given string contains the Value string.
            </summary>
            <param name="o">The object to check</param>
            <returns>True if the given string contains the Value string. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ContainsFilter.Value">
            <summary>
            Gets or sets the comparison string.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ContainsFilter.MatchCase">
            <summary>
            Gets whether or not this filter matches casing.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter">
            <summary>
            Provides filtering logic for the end of a string value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/>.
            </summary>
            <param name="value">The comparison string.</param>
            <param name="matchCase">The case sensitivity.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter.IsMatch(System.Object)">
            <summary>
            Returns true if the given string ends with the Value string.
            </summary>
            <param name="o">The object to check</param>
            <returns>True if the given string ends with the Value string. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter.Value">
            <summary>
            Gets or sets the comparison string.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter.MatchCase">
            <summary>
            Gets whether or not this filter matches casing.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter">
            <summary>
            Provides filter logic for the equality of 2 objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EqualsFilter.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.EqualsFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EqualsFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object equals the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object matches the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.EqualsFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector">
            <summary>
            A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> for selecting filter templates.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects a filter template for the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.</param>
            <param name="container">The template container.</param>
            <returns>The filter template to be used by the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector.StringFilterTemplate">
            <summary>
            Gets or sets the filter template used for string columns.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector.NumericFilterTemplate">
            <summary>
            Gets or sets the filter template used for numeric columns.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector.EnumFilterTemplate">
            <summary>
            Gets or sets the filter template used for enum and boolean columns.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FilterTemplateSelector.NoFilterTemplate">
            <summary>
            Gets or sets the filter template used for columns that can't be filtered.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter">
            <summary>
            Provides 'greater than' filter logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter.#ctor(System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object is greater than the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object is greater than the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GreaterThanFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter">
            <summary>
            Provides 'greater than or equal to' filter logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter.#ctor(System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object is greater than or equal to the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object is greater than or equal to the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GreaterThanOrEqualToFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter">
            <summary>
            Provides 'less than' filter logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanFilter.#ctor(System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object is less than the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object is less than the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.LessThanFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter">
            <summary>
            Provides 'less than or equal to' filter logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter.#ctor(System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object is less than or equal to the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object is less than or equal to the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.LessThanOrEqualToFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter">
            <summary>
            Provides 'not equal' filter logic.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter"/>.
            </summary>
            <param name="value">The comparison value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given value is not equal to the comparison value.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object does not equal the comparison value. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.NotEqualFilter.Value">
            <summary>
            Gets the comparison value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.NumericFilterToStringConverter">
            <summary>
            Converts a numeric <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> into a string expression and vice versa.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NumericFilterToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a numeric <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to a string expression.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string expression of the filter.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.NumericFilterToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string to an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="value">The string value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> based on the string expression.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ObjectFilterToObjectConverter">
            <summary>
            Converts an enum/boolean <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> into an object and vice versa.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectFilterToObjectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to an object.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The comparison object of the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectFilterToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an object to an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="value">The object value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> based on the object.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.PropertyFilter">
            <summary>
            Applies an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to a property rather than the object itself.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.PropertyFilter.#ctor(System.Reflection.PropertyInfo,Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.PropertyFilter"/> class.
            </summary>
            <param name="propertyInfo">Specifies the property to apply the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to.</param>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to apply to the property.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.PropertyFilter.IsMatch(System.Object)">
            <summary>
            Returns true if the property value is a match for the filter.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the specified property on the given object is a match for the filter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.PropertyFilter.PropertyInfo">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.WpfDataGrid.PropertyFilter.PropertyInfo"/> that specifies which property to apply the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.PropertyFilter.Filter">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to apply to the property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.RangeFilter">
            <summary>
            Provides inclusive range filtering logic for comparable types.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.RangeFilter.#ctor(System.IComparable,System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.RangeFilter"/> class.
            </summary>
            <param name="start">The inclusive start value of the comparison range.</param>
            <param name="end">The inclusive end value of the comparison range.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.RangeFilter.IsMatch(System.Object)">
            <summary>
            Returns whether or not the given object is within the inclusive comparison range.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the given object is within the inclusive comparison range. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.RangeFilter.Start">
            <summary>
            Gets the inclusive start value of the comparison range.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.RangeFilter.End">
            <summary>
            Gets the inclusive end value of the comparison range.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter">
            <summary>
            Provides filtering logic for the start of a string value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/>.
            </summary>
            <param name="value">The comparison string.</param>
            <param name="matchCase">The case sensitivity.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter.IsMatch(System.Object)">
            <summary>
            Returns true if the given string starts with the Value string.
            </summary>
            <param name="o">The object to check</param>
            <returns>True if the given string starts with the Value string. False otherwise.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter.Value">
            <summary>
            Gets the comparison string.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter.MatchCase">
            <summary>
            Gets whether or not this filter matches casing.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IStringFilterBuilder">
            <summary>
            Provides a way to build IFilter objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IStringFilterBuilder.Build(System.String,System.String,System.Boolean)">
            <summary>
            Builds an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="value1">The first value for the IFilter.</param>
            <param name="value2">The second value for the IFilter.</param>
            <param name="matchCase">The case sensitivity of the IFilter.</param>
            <returns>An IFilter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StartsWithFilterBuilder.Build(System.String,System.String,System.Boolean)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <param name="matchCase">The case sensitivity of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/>.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/> based on the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StartsWithFilterBuilder.Name">
            <summary>
            Returns the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.StartsWithFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.EndsWithFilterBuilder.Build(System.String,System.String,System.Boolean)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <param name="matchCase">The case sensitivity of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/>.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/> based on the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.EndsWithFilterBuilder.Name">
            <summary>
            Returns the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.EndsWithFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilterBuilder">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ContainsFilterBuilder.Build(System.String,System.String,System.Boolean)">
            <summary>
            Builds a <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/>.
            </summary>
            <param name="value1">The comparison value.</param>
            <param name="value2">Unused.</param>
            <param name="matchCase">The case sensitivity of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/>.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/> based on the given options.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.ContainsFilterBuilder.Name">
            <summary>
            Returns the display name of the <see cref="T:Mindscape.WpfElements.WpfDataGrid.ContainsFilter"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription">
            <summary>
            Describes how to build a string filter.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.SetAs(Mindscape.WpfElements.WpfDataGrid.IFilter)">
            <summary>
            Sets the filter description to best match the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="filter">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to mimic.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.FirstValue">
            <summary>
            Gets or sets the first string value of the filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.SecondValue">
            <summary>
            Gets or sets the second string value of the filter if any.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.MatchCase">
            <summary>
            Gets or sets the case sensitivity of the resulting filter.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.Builder">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IStringFilterBuilder"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.Filter">
            <summary>
            Gets the current filter created by this filter description.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.FilterChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.WpfDataGrid.StringFilterDescription.Filter"/> changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.ObjectToTypeConverter">
            <summary>
            Converts an object to its <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectToTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an object to its <see cref="T:System.Type"/>.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The <see cref="T:System.Type"/> of the object.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.ObjectToTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Type"/> to an object instance.
            </summary>
            <param name="value">The <see cref="T:System.Type"/> value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An object instance from the <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.StringFilterToStringConverter">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to a string and vice versa.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StringFilterToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> to a string expression.
            </summary>
            <param name="value">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A string expression of the filter.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.StringFilterToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string to an <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/>.
            </summary>
            <param name="value">The string value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.WpfDataGrid.IFilter"/> based on the string expression.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.TypeToFilterBuilderNameConverter">
            <summary>
            Converts a <see cref="T:System.Type"/> into the name of a filter builder.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.TypeToFilterBuilderNameConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Type"/> to the name of a filter builder.
            </summary>
            <param name="value">The type value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The name of a filter builder.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.TypeToFilterBuilderNameConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.FilterPopup">
            <summary>
            A popup for data grid filtering.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.FilterPopup.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is pressed over the <see cref="T:Mindscape.WpfElements.WpfDataGrid.FilterPopup"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector">
            <summary>
            Selects a template for the footer of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects a <see cref="T:System.Windows.DataTemplate"/> for the footer of the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.</param>
            <param name="container">The template container.</param>
            <returns>A <see cref="T:System.Windows.DataTemplate"/> for the footer of the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.NoAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying a column footer with no aggregate.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.SumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.SumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.CountAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.CountAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.AverageAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.AverageAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.MinimumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.MinimumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.MaximumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.MaximumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.FooterTemplateSelector.ModeAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.ModeAggregate"/> results.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell">
            <summary>
            Represents a cell on a <see cref="T:Mindscape.WpfElements.DataGrid"/> group header lined up with a particular column.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell.Group">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridGroup"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell.Column">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell.Aggregate">
            <summary>
            gets the <see cref="T:Mindscape.WpfElements.WpfDataGrid.IAggregate"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellCollectionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellCollectionConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellCollectionConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector">
            <summary>
            Selects a template for <see cref="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell"/> instances.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects a template for the given <see cref="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell"/>.
            </summary>
            <param name="item">The <see cref="T:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCell"/>.</param>
            <param name="container">The template container.</param>
            <returns>The selected <see cref="T:System.Windows.DataTemplate"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.NoAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying a group header cell with no aggregate.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.SumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.SumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.CountAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.CountAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.AverageAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.AverageAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.MinimumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.MinimumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.MaximumAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.MaximumAggregate"/> results.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.GroupHeaderCellTemplateSelector.ModeAggregateTemplate">
            <summary>
            Gets or sets the default template for displaying <see cref="T:Mindscape.WpfElements.WpfDataGrid.ModeAggregate"/> results.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.HighlightedCellChangingEventArgs">
            <summary>
            Holds information about the DataGrid HighlightedCellChanging event.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.HighlightedCellChangingEventArgs.Cancel">
            <summary>
            Gets or sets whethor or not to cancel the highlighted cell changing operation.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.HighlightedCellChangingEventArgs.IsCurrentCellValid">
            <summary>
            Gets whether or not the current highlighted cell holds valid data.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.IObjectBuilder">
            <summary>
            Provides a way to build a data object for a row in datagrid. This is useful for building objects that do not have public default constructors.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfDataGrid.IObjectBuilder.Build">
            <summary>
            Builds an object.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.PagerButtonModel">
            <summary>
            Holds information for a pager button displayed by a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridPager"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.PagerButtonModel.Content">
            <summary>
            Gets the content of the pager button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.PagerButtonModel.IsSelected">
            <summary>
            Gets or sets whether or not the pager button is selected.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.RowIsExpandedChangedEventArgs">
            <summary>
            Event arguments for when a row in a <see cref="T:Mindscape.WpfElements.DataGrid"/> is expanded or collapsed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.RowIsExpandedChangedEventArgs.Item">
            <summary>
            Gets the item that expanded or collapsed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfDataGrid.RowIsExpandedChangedEventArgs.IsExpanded">
            <summary>
            Gets whether or not the item is expanded.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfDataGrid.SortDirection">
            <summary>
            Specifies the sort direction of a <see cref="T:Mindscape.WpfElements.WpfDataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.SortDirection.Ascending">
            <summary>
            Items are sorted in an ascending order. (smallest to largest or alphabetical)
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.SortDirection.Descending">
            <summary>
            Items are sorted in a descending order. (largest to smallest or reverse alphabetical)
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfDataGrid.SortDirection.None">
            <summary>
            Items are not sorted.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimePicker">
            <summary>
            A control for entering dates and times.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DateTimePicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimePicker.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.CultureProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.Culture"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.FormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.Format"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.CustomFormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.CustomFormat"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePicker.DisplayElementsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DateTimePicker.DisplayElements"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.Value">
            <summary>
            Gets or sets the date/time value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>BindsTwoWayByDefault</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.Minimum">
            <summary>
            Gets or sets the minimum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.Maximum">
            <summary>
            Gets or sets the maximum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.Culture">
            <summary>
            Gets or sets the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.CultureProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.Format">
            <summary>
            Gets or sets the date/time format.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.FormatProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.  This is ignored unless <see cref="P:Mindscape.WpfElements.DateTimePicker.Format"/>
            is set to Custom.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.CustomFormatProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePicker.DisplayElements">
            <summary>
            Gets the elements used to display and edit the value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DateTimePicker.DisplayElementsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.CalendarCommands">
            <summary>
            Contains commands used with the <see cref="T:Mindscape.WpfElements.MonthCalendar"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.YearBack">
            <summary>
            A command for moving the selection to one year earlier.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.YearForward">
            <summary>
            A command for moving the selection to one year later.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.MonthBack">
            <summary>
            A command for moving the selection to one month earlier.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.MonthForward">
            <summary>
            A command for moving the selection to one month later.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.WeekBack">
            <summary>
            A command for moving the selection to one week earlier.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.WeekForward">
            <summary>
            A command for moving the selection to one week later.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.DayBack">
            <summary>
            A command for moving the selection to one day earlier.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.DayForward">
            <summary>
            A command for moving the selection to one day later.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CalendarCommands.SelectToday">
            <summary>
            A command for selecting the current date.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeDisplayElement">
            <summary>
            Represents an element within a <see cref="T:Mindscape.WpfElements.DateTimePicker"/> control that
            displays a single part of the formatted DateTime.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimeDisplayElement.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.DateTimeDisplayElement.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property which has changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeDisplayElement.ElementType">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.DateTimeDisplayElementType"/> of the element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeDisplayElement.EstimatedProportion">
            <summary>
            Gets an estimated size requirement relative to other elements in the same control.
            This can be used by panels to size the user interface elements.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeDisplayElement.Foreground">
            <summary>
            Gets or sets the foreground brush for this <see cref="T:Mindscape.WpfElements.DateTimeDisplayElement"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeDisplayElement.Culture">
            <summary>
            Gets the culture of the containing <see cref="T:Mindscape.WpfElements.DateTimePicker"/> control.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DateTimeDisplayElement.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeDisplayElementType">
            <summary>
            Identifies the type of display element in a <see cref="T:Mindscape.WpfElements.DateTimePicker"/>
            control.  This is typically used in a <see cref="T:System.Windows.Controls.DataTemplateSelector"/>
            to present appropriate user interfaces for different types of element.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimeDisplayElementType.Numeric">
            <summary>
            The element is presented as a numeric value.  For example, the year.
            Elements of this type are instances of <see cref="T:Mindscape.WpfElements.DateTimeNumericDisplayElement"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimeDisplayElementType.Select">
            <summary>
            The element is presented as text, and the user may select only from
            pre-defined values.  For example, the month when displayed in textual format
            (the "MMM" family of format strings).
            Elements of this type are instances of <see cref="T:Mindscape.WpfElements.DateTimeSelectDisplayElement"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimeDisplayElementType.ReadOnly">
            <summary>
            The element may not be edited by the user.  For example, the day of the
            week, a separator, or literal text.
            Elements of this type are instances of <see cref="T:Mindscape.WpfElements.DateTimeReadOnlyDisplayElement"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeNumericDisplayElement">
            <summary>
            Represents an element within a <see cref="T:Mindscape.WpfElements.DateTimePicker"/> control that
            displays a part of the formatted DateTime as an editable numeric value
            (e.g. the year).
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeNumericDisplayElement.ElementType">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.DateTimeDisplayElementType"/> of the element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeNumericDisplayElement.Value">
            <summary>
            Gets or sets the numeric value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeNumericDisplayElement.Minimum">
            <summary>
            Gets the minimum permitted value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeNumericDisplayElement.Maximum">
            <summary>
            Gets the maximum permitted value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeNumericDisplayElement.Precision">
            <summary>
            Gets the precision.  Values should, if necessary, be displayed padded with leading
            zeroes until there are at least as many digits as specified by the precision.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimePartTemplateSelector">
            <summary>
            Selects DataTemplates for <see cref="T:Mindscape.WpfElements.DateTimeDisplayElement"/> collections.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateTimePartTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:System.Windows.DataTemplate"/> corresponding to the supplied
            <see cref="T:Mindscape.WpfElements.DateTimeDisplayElement"/>.
            </summary>
            <param name="item">A DateTimeDisplayElement.</param>
            <param name="container">The data-bound object.</param>
            <returns>The template corresponding to the supplied DateTimeDisplayElement.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePartTemplateSelector.NumericElementTemplate">
            <summary>
            Gets or sets the DataTemplate for numeric elements.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePartTemplateSelector.SelectElementTemplate">
            <summary>
            Gets or sets the DataTemplate for selection elements.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimePartTemplateSelector.ReadOnlyElementTemplate">
            <summary>
            Gets or sets the DataTemplate for read-only elements.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimePickerFormat">
            <summary>
            The content and format of a <see cref="T:Mindscape.WpfElements.DateTimePicker"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePickerFormat.LongDate">
            <summary>
            The date, using the system long date format.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePickerFormat.ShortDate">
            <summary>
            The date, using the system short date format.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePickerFormat.LongTime">
            <summary>
            The time of day, using the system long time format.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePickerFormat.ShortTime">
            <summary>
            The time of day, using the system short time format.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateTimePickerFormat.Custom">
            <summary>
            The date and time, using a custom format.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeReadOnlyDisplayElement">
            <summary>
            Represents an element within a <see cref="T:Mindscape.WpfElements.DateTimePicker"/> control that
            may not be edited by the user, such as literal text.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeReadOnlyDisplayElement.ElementType">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.DateTimeDisplayElementType"/> of the element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeReadOnlyDisplayElement.Text">
            <summary>
            Gets the display text.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateTimeSelectDisplayElement">
            <summary>
            Represents an element within a <see cref="T:Mindscape.WpfElements.DateTimePicker"/> control that
            displays a part of the formatted DateTime as text and permits the user
            to select values from a predefined list.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeSelectDisplayElement.ElementType">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.DateTimeDisplayElementType"/> of the element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeSelectDisplayElement.Text">
            <summary>
            Gets or sets the display text.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateTimeSelectDisplayElement.PermittedValues">
            <summary>
            Gets the permitted values of the <see cref="P:Mindscape.WpfElements.DateTimeSelectDisplayElement.Text"/> property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DayTemplateSelector">
            <summary>
            Used by the <see cref="T:Mindscape.WpfElements.MonthCalendar"/> to manage cells for which there is no valid date.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects the appropriate data template depending on whether the item is
            a DateTime or not.
            </summary>
            <param name="item">The item for which to select a template.</param>
            <param name="container">The container element.</param>
            <returns>A <see cref="T:System.Windows.DataTemplate"/> suitable for displaying the item.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DayTemplateSelector.DayTemplate">
            <summary>
            The template for valid dates.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayTemplateSelector.NonDayTemplate">
            <summary>
            The template for cells beyond the range of the CLR DateTime type.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SameMonthConverter">
            <summary>
            Converts a pair of dates to a boolean value indicating whether they are in the same month.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SameMonthConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding source for use by a binding target.
            </summary>
            <param name="values">The dates to check.  This array must contain exactly two dates.  If
            the array contains fewer than two dates, an <see cref="T:System.IndexOutOfRangeException"/> occurs.
            If the array contains more than two dates, the extra dates are ignored.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>true if the dates are in the same month; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SameMonthConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownColorPicker">
            <summary>
            A color picker control consisting of a customizable summary and drop-down detail pane.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownColorPicker.OnSelectedColorChanged">
            <summary>
            Called when the selected color changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownColorPicker.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownColorPicker.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownColorPicker.DropDownTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownColorPicker.DropDownTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownColorPicker.StaysOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownColorPicker.StaysOpen"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownColorPicker.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownColorPicker.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownColorPicker.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> for the header part of the <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownColorPicker.HeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownColorPicker.DropDownTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> for the drop down panel.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownColorPicker.DropDownTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownColorPicker.StaysOpen">
            <summary>
            Gets or sets whether or not this <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/> stays open after a color has been selected.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownColorPicker.StaysOpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownColorPicker.IsDropDownOpen">
            <summary>
            Gets or sets whether or not the drop down panel is open..
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownColorPicker.IsDropDownOpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownDatePicker">
            <summary>
            A control for entering dates, with support for a drop-down calendar.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownDatePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DropDownDatePicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownDatePicker.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.CultureProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Culture"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.FormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Format"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.CustomFormatProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.CustomFormat"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.TodayButtonTimeActionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.TodayButtonTimeAction"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownDatePicker.CloseOnSelectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownDatePicker.CloseOnSelect"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.Value">
            <summary>
            Gets or sets the date value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>BindsTwoWayByDefault</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.Culture">
            <summary>
            Gets or sets the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.CultureProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.Format">
            <summary>
            Gets or sets the date format.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.FormatProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.CustomFormat">
            <summary>
            Gets or sets the custom date format string.  This is ignored unless <see cref="P:Mindscape.WpfElements.DropDownDatePicker.Format"/>
            is set to Custom.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.CustomFormatProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.TodayButtonTimeAction">
            <summary>
            Gets or sets how the time of day is set when the user selects the
            Today button.  The default is <see cref="F:TodayButtonTimeAction.Zero"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.TodayButtonTimeActionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.Minimum">
            <summary>
            Gets or sets the minimum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.Maximum">
            <summary>
            Gets or sets the maximum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownDatePicker.CloseOnSelect">
            <summary>
            Gets or sets whether the <see cref="T:Mindscape.WpfElements.DropDownDatePicker"/> automatically
            closes after the user makes a selection from the drop-down.  The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownDatePicker.CloseOnSelectProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownEditBox">
            <summary>
            A control for displaying a summary and a drop-down detail pane, similar to a combo box.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.ContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownEditBox.Content"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownEditBox.MaxDropDownHeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownEditBox.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownEditBox.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.DropDownTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownEditBox.DropDownTemplate"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownEditBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Provides control-specific handling for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownEditBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed on this <see cref="T:Mindscape.WpfElements.DropDownEditBox"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.DropDownCloseRequestedEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.DropDownEditBox.DropDownCloseRequested"/> routed event.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownEditBox.GetRequestCloseOnAction(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the RequestCloseOnAction attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the RequestCloseOnAction attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownEditBox.SetRequestCloseOnAction(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the RequestCloseOnAction attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownEditBox.RequestCloseOnActionProperty">
            <summary>
            Identifies the RequestCloseOnAction attached property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.Content">
            <summary>
            Gets or sets the content to be presented in the summary and drop-down areas.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownEditBox.ContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop-down pane.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownEditBox.MaxDropDownHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.IsDropDownOpen">
            <summary>
            Gets or sets whether the drop-down is currently open.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownEditBox.IsDropDownOpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.HeaderTemplate">
            <summary>
            Gets or sets the template for the summary part of the control (the
            part which is visible when the control is not dropped down).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownEditBox.HeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.DropDownTemplate">
            <summary>
            Gets or sets the template for the content of drop-down part of the control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownEditBox.DropDownTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DropDownEditBox.DropDownCloseRequested">
            <summary>
            Raised by contained controls when they wish to close the drop-down.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownEditBox.ToggleButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Style"/> for spin
            buttons.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownTreeView">
            <summary>
            A TreeView that can be dropped down like a combo box.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownTreeView.SelectedItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownTreeView.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownTreeView.ItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.SelectedItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownTreeView.SelectedItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.SelectLeafOnlyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DropDownTreeView.SelectLeafOnly"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownTreeView.GetNotifySelectionChange(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the NotifySelectionChange attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the NotifySelectionChange attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownTreeView.SetNotifySelectionChange(System.Windows.DependencyObject,Mindscape.WpfElements.DropDownTreeView)">
            <summary>
            Sets the value of the NotifySelectionChange attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DropDownTreeView.NotifySelectionChangeProperty">
            <summary>
            Identifies the NotifySelectionChange attached property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownTreeView.SelectedItem">
            <summary>
            Gets or sets the selected item.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownTreeView.SelectedItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownTreeView.ItemsSource">
            <summary>
            Gets or sets the items source.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownTreeView.ItemsSourceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownTreeView.ItemTemplate">
            <summary>
            Gets or sets the item template.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownTreeView.ItemTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownTreeView.SelectedItemTemplate">
            <summary>
            Gets or sets the item template for the selected item (when shown collapsed).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownTreeView.SelectedItemTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownTreeView.SelectLeafOnly">
            <summary>
            Gets or sets a value which indicates whether users may select only leaf nodes,
            or can select any nodes.  The default is false (select any nodes).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DropDownTreeView.SelectLeafOnlyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DualProgressBar">
            <summary>
            A progress bar that can display two indicators, one for the overall progress, and another for
            the progress of the current sub-operation.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DualProgressBar"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualProgressBar.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the Minimum property changes.
            </summary>
            <param name="oldMinimum">The old property value.</param>
            <param name="newMinimum">The new property value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DualProgressBar.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the Maximum property changes.
            </summary>
            <param name="oldMaximum">The old property value.</param>
            <param name="newMaximum">The new property value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DualProgressBar.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualProgressBar.CenterContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualProgressBar.CenterContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualProgressBar.StartContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualProgressBar.StartContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualProgressBar.EndContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualProgressBar.EndContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualProgressBar.NestedPercentageProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualProgressBar.NestedPercentage"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualProgressBar.CenterContent">
            <summary>
            Gets or sets the content to be displayed in the center of the <see cref="T:Mindscape.WpfElements.DualProgressBar"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualProgressBar.StartContent">
            <summary>
            Gets or sets the content to be displayed at the start of the <see cref="T:Mindscape.WpfElements.DualProgressBar"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualProgressBar.EndContent">
            <summary>
            Gets or sets the content to be displayed at the end of the <see cref="T:Mindscape.WpfElements.DualProgressBar"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualProgressBar.NestedPercentage">
            <summary>
            Gets or sets the percentage of the current progress bar to be displayed as complete.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DualSlider">
            <summary>
            A control that supports selecting two values, such as the start and end of a range, using 
            a slider with two thumbs.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SliderBase">
            <summary>
            The base class for slider controls.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.SmallChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.SmallChange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.LargeChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.LargeChange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.Maximum"/> property.  The default is 1.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnMaximumChanged">
            <summary>
            Called when the <see cref="P:Mindscape.WpfElements.SliderBase.Maximum"/> property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.Minimum"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnMinimumChanged">
            <summary>
            Called when the <see cref="P:Mindscape.WpfElements.SliderBase.Minimum"/> property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnOrientationChanged">
            <summary>
            Called when the <see cref="P:Mindscape.WpfElements.SliderBase.Orientation"/> of this slider has changed.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.IsInstantMoveEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.IsInstantMoveEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.TickSpacingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.TickSpacing"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnTickSpacingChanged">
            <summary>
            Called when the <see cref="P:Mindscape.WpfElements.SliderBase.TickSpacing"/> property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.ShowTopLeftTickMarksProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.ShowTopLeftTickMarks"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.ShowBottomRightTickMarksProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.ShowBottomRightTickMarks"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.ShowTopLeftLabelsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.ShowTopLeftLabels"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.ShowBottomRightLabelsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.ShowBottomRightLabels"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.SnapToTickMarksProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.SnapToTickMarks"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnSnapToTickMarksChanged">
            <summary>
            Called when the <see cref="P:Mindscape.WpfElements.SliderBase.SnapToTickMarks"/> property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.IsMouseWheelEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.IsReversedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.IsReversed"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.LabelStepProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.LabelStep"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.LabelTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SliderBase.TickPositionsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SliderBase.TickPositions"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.GetPreviousTickMark(System.Double)">
            <summary>
            Gets the closest tick mark at or below the given value.
            </summary>
            <param name="current">The value to snap.</param>
            <returns>The value of the previous tick mark relative to the given value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.GetNextTickMark(System.Double)">
            <summary>
            Gets the closest tick mark at or above the given value.
            </summary>
            <param name="current">The value to snap.</param>
            <returns>The value of the next tick mark relative to the given value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SliderBase.GetClosestTickMark(System.Double)">
            <summary>
            Gets the closest tick mark to the given value.
            </summary>
            <param name="current">The value to snap.</param>
            <returns>The value of the closest tick mark to the given value.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.SmallChange">
            <summary>
            Gets or sets the amount to be added to or subtracted from a slider value when
            a small change is made (e.g. mouse wheel or arrow key).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.LargeChange">
            <summary>
            Gets or sets the amount to be added to or subtracted from a slider value when
            a large change is made (e.g. the user clicks on the track and IsInstantMoveEnabled is false).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.Maximum">
            <summary>
            Gets or sets the maximum slider value.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.Minimum">
            <summary>
            Gets or sets the minimum slider value.  The default is 0.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.Orientation">
            <summary>
            Gets or sets the orientation of the slider track.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.IsInstantMoveEnabled">
            <summary>
            Gets or sets whether, when the user clicks on the track, the slider value should jump
            immediately to the clicked value.  The default is false, meaning the slider value should
            execute a <see cref="P:Mindscape.WpfElements.SliderBase.LargeChange"/> towards the clicked value.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.TickSpacing">
            <summary>
            Gets or sets the spacing between ticks.  The default is 10.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.ShowTopLeftTickMarks">
            <summary>
            Gets or sets whether tick marks should be displayed above the slider track
            (to the left in vertical orientation).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.ShowBottomRightTickMarks">
            <summary>
            Gets or sets whether tick marks should be displayed below the slider track
            (to the right in vertical orientation).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.ShowTopLeftLabels">
            <summary>
            Gets or sets whether labels should be displayed above the slider track.
            (to the left in vertical orientation).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.ShowTopLeftLabelsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.ShowBottomRightLabels">
            <summary>
            Gets or sets whether labels should be displayed below the slider track
            (to the right in vertical orientation).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.ShowBottomRightLabelsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.SnapToTickMarks">
            <summary>
            Gets or sets whether slider values should snap to tick marks.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.IsMouseWheelEnabled">
            <summary>
            Gets or sets whether the control should respond to the mouse wheel.  If the
            mouse wheel is enabled, its effect is to modify the slider value by <see cref="P:Mindscape.WpfElements.SliderBase.SmallChange"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.IsReversed">
            <summary>
            Gets or sets whether or not the slider direction is reversed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.IsReversedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.LabelStep">
            <summary>
            Gets or sets a value that determines if any labels should not be rendered.
            A value of 1 will allow all labels to be rendered. A value of 2 means only every second label will be rendered and so on.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.LabelStepProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.LabelTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to render labels.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.LabelTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.TickPositions">
            <summary>
            Gets a list of positions where tick marks should be displayed. Each value in the list is the distance between
            the start of the slider track and a particular tick mark.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SliderBase.TickPositionsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SliderBase.ExtraSpacing">
            <summary>
            When overridden in a derived class, gets the extra spacing allocated around the slider track.
            This is used in tick mark layout calculations.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DualSlider"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.RangeStartProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.RangeStart"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.RangeEndProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.RangeEnd"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.EndBufferProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.EndBuffer"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.AllowOverlapProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.AllowOverlap"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.MinimumRangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.MinimumRange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.MaximumRangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.MaximumRange"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.OnSnapToTickMarksChanged">
            <summary>
            Called when the SnapToTickMarks property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.OnTickSpacingChanged">
            <summary>
            Called when the TickSpacing property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.OnMinimumChanged">
            <summary>
            Called when the Minimum property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DualSlider.OnMaximumChanged">
            <summary>
            Called when the Maximum property changes.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DualSlider.RangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DualSlider.Range"/> property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DualSlider.FinishedRangeUpdate">
            <summary>
            Raised when the user releases the mouse to finish a range update.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.RangeStart">
            <summary>
            Gets or sets the start of the selected range (the value of the first slider thumb).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.RangeEnd">
            <summary>
            Gets or sets the end of the selected range (the value of the second slider thumb).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.EndBuffer">
            <summary>
            Gets or sets the distance that the slider track extends beyond the minimum and maximum
            values.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.AllowOverlap">
            <summary>
            Gets or sets whether the sliders are allowed to pass each other (i.e. the second slider
            value is allowed to be lower than the first slider value).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.MinimumRange">
            <summary>
            Gets or sets the minimum distance between the slider values.  The user cannot drag the sliders
            closer than this value.  The default is no minimum.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.MaximumRange">
            <summary>
            Gets or sets the maximum distance between the slider values.  The user cannot drag the sliders
            further apart than this value.  The default is no maximum.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.Range">
            <summary>
            Gets the magnitude of the range being displayed by the <see cref="T:Mindscape.WpfElements.DualSlider"/> (the difference
            between the first and second slider values).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DualSlider.RangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DualSlider.RangeChanged">
            <summary>
            Raised when the StartRange or/and EndRange of the <see cref="T:Mindscape.WpfElements.DualSlider"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DualSlider.ExtraSpacing">
            <summary>
            Gets the extra spacing allocated around the slider track.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RangeChangedEventArgs">
            <summary>
            Provides event data for range changed events.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RangeChangedEventArgs.OldRangeStart">
            <summary>
            Gets the old range start value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RangeChangedEventArgs.OldRangeEnd">
            <summary>
            Gets the old range end value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.EditableTextBlock">
            <summary>
            Represents a text area that is read-only normally, but can be clicked to
            enable editing.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.EditableTextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.EditableTextBlock"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.EditableTextBlock.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user releases the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.EditableTextBlock.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called by the framework when the user presses a key.
            </summary>
            <param name="e">The key event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.EditableTextBlock.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called by the framework when the control loses focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.EditableTextBlock.IsInEditModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.EditableTextBlock.IsInEditMode"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.EditableTextBlock.IsInEditMode">
            <summary>
            Gets or sets whether the <see cref="T:Mindscape.WpfElements.EditableTextBlock"/> is in edit mode.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.EditableTextBlock.IsInEditModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Elements">
            <summary>
            Provides assembly-level helper methods.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Elements.InstallLicense(System.String)">
            <summary>
            Performs manual licensing for specialized deployment scenarios.
            </summary>
            <param name="licenseKey">A runtime license key.</param>
            <remarks>In normal deployment scenarios, WPF Elements controls are
            automatically licensed.  Install a license key manually only under advisement
            from Mindscape support.</remarks>
        </member>
        <member name="T:Mindscape.WpfElements.GaugeLabel">
            <summary>
            Represents a label on a <see cref="T:Mindscape.WpfElements.RadialGauge"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.GaugeLabel.LabelProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.GaugeLabel.Label"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.GaugeLabel.Label">
            <summary>
            Gets the content of the <see cref="T:Mindscape.WpfElements.GaugeLabel"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.GaugeLabel.LabelProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.IntegerUpDown">
            <summary>
            A control for editing an integer value with additional "up" and "down" commands.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IntegerRangeBase">
            <summary>
            Represents an element that has an integer value within a specific range. 
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerRangeBase.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerRangeBase.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerRangeBase.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerRangeBase.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerRangeBase.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerRangeBase.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerRangeBase.SmallChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerRangeBase.SmallChange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerRangeBase.LargeChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerRangeBase.LargeChange"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerRangeBase.Minimum">
            <summary>
            Gets or sets the lowest possible value of the range control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerRangeBase.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerRangeBase.Maximum">
            <summary>
            Gets or sets the highest possible value of the range control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerRangeBase.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerRangeBase.Value">
            <summary>
            Gets or sets the current magnitude of the range control
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerRangeBase.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerRangeBase.SmallChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of an IntegerRangeBase control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerRangeBase.SmallChangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerRangeBase.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of an IntegerRangeBase control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerRangeBase.LargeChangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Infralution.Licensing.EncryptedLicense">
            <summary>
            Defines an encrypted license for an application or component generated using the Infralution
            Licensing System.
            </summary>
            <remarks>
            The Infralution Licensing System provides a secure way of licensing .NET controls,
            components and applications.   Licenses are protected using public key encryption to
            minimize possibility of cracking.
            </remarks>
            <seealso cref="T:Infralution.Licensing.EncryptedLicenseProvider"/>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicense.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Create a new Infralution Encrypted License
            </summary>
            <param name="key">The key for the license</param>
            <param name="serialNo">The serial number of the license</param>
            <param name="productInfo">The product data associated with the license</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicense.Dispose">
            <summary>
            Cleans up any resources held by the license
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicense.LicenseKey">
            <summary>
            The license key for the license
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicense.ProductInfo">
            <summary>
            The product data associated with the license
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicense.SerialNo">
            <summary>
            The unique serial no for the license
            </summary>
        </member>
        <member name="T:Infralution.Licensing.EncryptedLicenseParameters">
            <summary>
            The parameters used to generate and validate <see cref="T:Infralution.Licensing.EncryptedLicense">EncryptedLicenses</see>
            using an <see cref="T:Infralution.Licensing.EncryptedLicenseProvider"/>
            </summary>
            <seealso cref="T:Infralution.Licensing.EncryptedLicenseProvider"/>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseParameters.ReadFromString(System.String)">
            <summary>
            Read the parameters from an XML string
            </summary>
            <param name="xmlParameters"></param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseParameters.WriteToString(System.Boolean)">
            <summary>
            Write the parameters to an XML string
            </summary>
            <param name="includeGenerationParameters">Should parameters required for generating keys be included</param>
            <returns>The parameters in a formatted XML string</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseParameters.Read(System.Xml.XmlReader)">
            <summary>
            Read the parameters from an XML Reader
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseParameters.Write(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Write the parameters to an XML Writer
            </summary>
            <param name="writer">The XML Writer to write to</param>
            <param name="includeGenerationParameters">Should parameters required for generating keys be included</param>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.ProductName">
            <summary>
            The name of the product being licensed
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.ProductPassword">
            <summary>
            The password used to encrypt the license data
            </summary>
            <remarks>
            The <see cref="P:Infralution.Licensing.EncryptedLicenseParameters.KeyStrength"/> determines the number of characters of the ProductPassword that are
            actually used in generating keys.   If the ProductPassword is shorter than the <see cref="P:Infralution.Licensing.EncryptedLicenseParameters.KeyStrength"/> then 
            it is padded.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.KeyStrength">
            <summary>
            The strength of the key to generate.   
            </summary>
            <remarks>
            The KeyStrength determines the number of characters of the <see cref="P:Infralution.Licensing.EncryptedLicenseParameters.ProductPassword"/> that are
            actually used in generating keys.    The smaller the KeyStrength the shorter the generated keys.
            If the <see cref="P:Infralution.Licensing.EncryptedLicenseParameters.ProductPassword"/> is shorter than the KeyStrength then it is padded.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.TextEncoding">
            <summary>
            The encoding used to convert the binary key to text
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.ChecksumProductInfo">
            <summary>
            Should a checksum of the <see cref="P:Infralution.Licensing.EncryptedLicense.ProductInfo"/> be included in the key  
            </summary>
            <remarks>
            If true a checksum is included in generated keys to check that the contents of the 
            <see cref="P:Infralution.Licensing.EncryptedLicense.ProductInfo"/> are valid.  This is only necessary if the 
            ProductInfo is potentially more than 6 characters long.  For ProductInfo of less than 7 
            characters the block encryption algorithm used to encrypt the overall key guarantees the validity
            of the ProductInfo.  
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.ShortSerialNo">
            <summary>
            If true serial numbers must be less than <see cref="F:System.UInt16.MaxValue"/>.  
            </summary>
            <remarks>
            Setting this to true enables the generated key to be kept as short as possible.   The default
            value for backward compatibility with previous versions is true.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.MaxSerialNo">
            <summary>
            Return the maximum serial no.
            </summary>
            <remarks>
            This returns the maximum allowed serial no based on the value of the <see cref="P:Infralution.Licensing.EncryptedLicenseParameters.ShortSerialNo"/>
            property.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.RSAProvider">
            <summary>
            Return the RSA Provider used to validate RSA signatures
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.DesignSignature">
            <summary>
            The RSA signature for the product password at design time
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseParameters.RuntimeSignature">
            <summary>
            The RSA signature for the product password at runtime
            </summary>
        </member>
        <member name="T:Infralution.Licensing.EncryptedLicenseProvider">
            <summary>
            Defines a .NET LicenseProvider that generates and validates simple, secure 
            <see cref="T:Infralution.Licensing.EncryptedLicense">EncryptedLicenses</see>.
            </summary>
            <remarks>
            The EncryptedLicenseProvider generates simple license keys which are validated using
            a public key encryption algorithm to minimize the possibility of cracking.  See 
            <see href="XtraGettingStarted.html">Getting Started</see> for detailed information on using
            the EncryptedLicenseProvider to license applications and components.
            </remarks>
            <seealso cref="T:Infralution.Licensing.EncryptedLicense"/>
        </member>
        <member name="F:Infralution.Licensing.EncryptedLicenseProvider._parameters">
            <summary>
            The current parameters for validating licenses
            </summary>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)">
            <summary>
            Set the parameters used to validate licenses created by this provider.
            </summary>
            <remarks>
            This must be called by the client software prior to obtaining licenses using the EncryptedLicenseProvider.
            The XML parameter string is generated using the Infralution License Key Generator and pasted into the calling client code
            or by calling <see cref="M:Infralution.Licensing.EncryptedLicenseParameters.WriteToString(System.Boolean)"/>
            </remarks>
            <param name="xmlParameters">An XML string containing parameters used to validate licenses</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GenerateKey(Infralution.Licensing.EncryptedLicenseParameters,System.String,System.Int32)">
            <summary>
            Generate a new encrypted license using the given parameters
            </summary>
            <param name="parameters">The license parameters to use to generate the key</param>
            <param name="productInfo">User defined data to be included in license key</param>
            <param name="serialNo">The unique license serial number for the</param>
            <returns>An encrypted license key</returns>
            <remarks>
            If there is no installed license for the Infralution Licensing System then the only 
            allowed password is "TEST" and the only allowed serial numbers are 1 or 0.  
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GenerateRuntimeKey(System.String)">
            <summary>
            Generate a runtime license key from the given design time license key
            </summary>
            <param name="designTimeLicenseKey">The design time license key to use</param>
            <returns>A runtime license key (or null if the designTimeLicenseKey can't be validated)</returns>
            <remarks>
            The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> method MUST be called before using this method.  
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.Type,Infralution.Licensing.EncryptedLicense)">
            <summary>
            Install a license key for the given component or control type.
            </summary>
            <remarks>
            This method is used to install licenses for components and controls.  The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.String,Infralution.Licensing.EncryptedLicense)"/>
            method is typically better for installing application licenses because it provides more control over the 
            license key file name.  This license key file used by this method is the full type name followed by a ".lic" suffix. 
            </remarks>
            <param name="type">The type to install the license for</param>
            <param name="license">The license to install</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.Type,System.String)">
            <summary>
            Install a license key for the given component or control type.
            </summary>
            <remarks>
            Validates the given license key and then installs the license.
            This method is an alternative to calling <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String)"/> and then
            <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.Type,Infralution.Licensing.EncryptedLicense)"/>.
            </remarks>
            <param name="type">The type to install the license for</param>
            <param name="licenseKey">The license key to install</param>
            <returns>A license if succesful or null/nothing if not</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.String,Infralution.Licensing.EncryptedLicense)">
            <summary>
            Install a license key for an application in the given file.
            </summary>
            <remarks>
            This method is used to install licenses for applications.  Use the <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.Type,Infralution.Licensing.EncryptedLicense)"/>
            method to install licenses for components or controls.  If a full path is not specified for licenseFile then
            the file will be created relative to the entry executable directory.
            </remarks>
            <param name="licenseFile">The name of the file to install the license key in</param>
            <param name="license">The license to install</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.String,System.String)">
            <summary>
            Install a license key for an application in the given file.
            </summary>
            <remarks>
            Validates the given license key and then installs the license.
            This method is an alternative to calling <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String)"/> and then
            <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.InstallLicense(System.String,Infralution.Licensing.EncryptedLicense)"/>.
            </remarks>
            <param name="licenseFile">The name of the file to install the license key in</param>
            <param name="licenseKey">The license key to install</param>
            <returns>A license if succesful or null/nothing if not</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.UninstallLicense(System.Type)">
            <summary>
            Uninstall a license key for the given component or control type.
            </summary>
            <remarks>
            Deletes the license file for the given type
            </remarks>
            <param name="type">The type to uninstall the license for</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.UninstallLicense(System.String)">
            <summary>
            Uninstall the license key in the given file.
            </summary>
            <remarks>
            Deletes the license file
            </remarks>
            <param name="licenseFile">The name of the file the license key is in</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String,System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            Check  that the given license key is valid
            </summary>
            <param name="licenseKey">The license key to validate</param>
            <param name="context">The current licensing context</param>
            <param name="type">The type to be licensed</param>
            <returns>An <see cref="T:Infralution.Licensing.EncryptedLicense"/> or null if licenseKey is not valid</returns>
            <remarks>
            <para>
            This method is called to validate the license key for a type.  If the license context is a design
            time context then it generates a runtime license key and saves it in the context.
            </para>
            <para>
            The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> method MUST be called before using this method.  
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String)">
            <summary>
            Validate that the given license key is valid for the current licensing parameters
            </summary>
            <param name="licenseKey">The license key to validate</param>
            <returns>The encrypted license if the key is valid otherwise null</returns>
            <remarks>
            <para>
            This method provides a mechanism to validate that a given license key is valid
            prior to attempting to install it.   This can be useful if you want to check
            the <see cref="P:Infralution.Licensing.EncryptedLicense.ProductInfo"/> before installing the license.
            </para>
            <para>
            The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> method MUST be called before using this method.  
            </para>
            </remarks>
            <seealso cref="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String,System.String)"/> 
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String,System.String)">
            <summary>
            Validate that the given license key is valid for the given licensing parameters
            </summary>
            <param name="licenseParameters">An XML string containing parameters used to validate the license key</param>
            <param name="licenseKey">The license key to validate</param>
            <returns>The encrypted license if the key is valid otherwise null</returns>
            <remarks>
            <para>
            This method provides a mechanism to validate that a given license key is valid
            prior to attempting to install it.   This can be useful if you want to check
            the <see cref="P:Infralution.Licensing.EncryptedLicense.ProductInfo"/> before installing the license.  
            </para>
            <para>
            This method is an alternative to calling <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> followed by 
            <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.String)">
            <summary>
            Get a license (if installed) from the given license file.
            </summary>
            <param name="licenseFile">The name of the license file containing the license key</param>
            <returns>The installed license if any</returns>
            <remarks>
            <para>
            This method is used to read licenses for applications.  Components and controls should use the 
            <see cref="T:System.ComponentModel.LicenseManager"/> methods to load and validate licenses.  If a full path is not specified 
            for licenseFile then the file loaded will be relative to the directory containing the application 
            executable (for Window Forms applications) or aspx files (for ASP.NET applications).
            </para>
            <para>
            The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> method MUST be called before using this method.  
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.String,System.String)">
            <summary>
            Get a license (if installed) from the given license file.
            </summary>
            <param name="licenseParameters">An XML string containing parameters used to validate the license key</param>
            <param name="licenseFile">The name of the license file containing the license key</param>
            <returns>The installed license if any</returns>
            <remarks>
            <para>
            This method is used to read licenses for applications.  Components and controls should use the 
            <see cref="T:System.ComponentModel.LicenseManager"/> methods to read and validate licenses.  If a full path is not specified 
            for licenseFile then the file loaded will be relative to the directory containing the application 
            executable (for Window Forms applications) or aspx files (for ASP.NET applications).
            </para>
            <para>
            This method is an alternative to calling <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> followed by 
            <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.String)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Get a license (if installed) for the given component/control type 
            </summary>
            <param name="context">The context (design or runtime)</param>
            <param name="type">The type to get the license for</param>
            <param name="instance">The object the license is for</param>
            <param name="allowExceptions">If true a <see cref="T:System.ComponentModel.LicenseException"/> is thrown if a valid license cannot be loaded</param>
            <returns>An encrypted license</returns>
            <remarks>
            <para>
            This method is used to get licenses for components and controls.  Applications should generally
            use the <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.String,System.String)"/> method as it provides more control over the license file
            that keys are stored in.  This method is not typically called directly by application code.  
            Instead the component or control uses the <see cref="M:System.ComponentModel.LicenseManager.IsValid(System.Type)"/> or
            <see cref="M:System.ComponentModel.LicenseManager.Validate(System.Type)"/> methods which find the <see cref="T:System.ComponentModel.LicenseProvider"/> for the type
            and call this method.
            </para>
            <para>
            You must call <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> before calling this method either directly or
            indirectly by via a call to <see cref="M:System.ComponentModel.LicenseManager.IsValid(System.Type)"/>
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Reflection.Assembly,System.Type)">
            <summary>
            Return the license for the given type from a given DLL assembly resources
            </summary>
            <param name="context">The license context to validate the license in</param>
            <param name="assembly">The assembly containing the license</param>
            <param name="type">The type to get the license for</param>
            <returns>The license key if any</returns>
            <remarks>
            This method can be used to check the given DLL assembly for a license.  By default the .NET licensing
            framework only checks the entry assembly (ie typically executables) for licenses.  This means
            that if a licensed control is wrapped in another control, the customer of the wrapped control will
            still required a design time license key for the original control.  This is generally the behavior
            that control authors would like.  If however you want to provide a license that enables a customer
            to create new component/controls using your control/component then you can achieve this by using 
            this method to check for a license in the CallingAssembly that created the control/component.
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.EncodeToText(System.Byte[],Infralution.Licensing.TextEncoding)">
            <summary>
            Converts a byte array into a text representation.
            </summary>
            <param name="data">The byte data to convert</param>
            <param name="encoding">The encoding to use</param>
            <returns>Text representation of the data</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.DecodeFromText(System.String,Infralution.Licensing.TextEncoding)">
            <summary>
            Converts a string into a byte array.
            </summary>
            <param name="text">The text to convert</param>
            <param name="encoding">The encoding to use</param>
            <returns>The converted byte data</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetPasswordData(System.String,System.Int32)">
            <summary>
            Generate the password data used to verify and decrypt the license
            </summary>
            <param name="password">The password used to generate the key</param>
            <param name="keyStrength">The strength of the key to create</param>
            <returns>The password data used to verify and decrypt the license</returns> 
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.PadPassword(System.Byte[])">
            <summary>
            Pad the given password if required.
            </summary>
            <param name="passwordData">The password data to pad</param>
            <returns>The padded password data</returns> 
            <remarks>
            This function is required for backward compatibility with 7 byte passwords which were
            padded before being signed
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.CreateSignatures(Infralution.Licensing.EncryptedLicenseParameters)">
            <summary>
            Create the signatures based on the current parameters
            </summary>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GenerateKey(Infralution.Licensing.EncryptedLicenseParameters,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Generate a new encrypted license 
            </summary>
            <param name="parameters">The license parameters to use to generate the key</param>
            <param name="productPassword">The password used to encrypted the license data</param>
            <param name="productInfo">User defined data to be included in license key</param>
            <param name="serialNo">The unique license serial number</param>
            <returns>An encrypted license key</returns>
            <remarks>
            If there is no installed license for the Infralution Licensing System then the only 
            allowed password is "TEST" and the only allowed serial numbers are 1 or 0.  To use the
            licensed version of this method ensure that the file Infralution.Licensing.EncryptedLicenseProvider.lic
            exists in the same directory as the Infralution.Licensing.dll and contains a valid
            license key for the Licensing System.
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ValidateLicenseKey(System.String,System.ComponentModel.LicenseUsageMode,System.Boolean,System.String@)">
            <summary>
            Check that the given license key is valid and optionally generate a runtime license key
            </summary>
            <param name="licenseKey">The license key to validate</param>
            <param name="usageMode">The usage mode that we want to validate the license key for</param>
            <param name="generateRuntimeLicenseKey">Should a runtime license be generated from the license - usageMode must also be DesignTime</param>
            <param name="runtimeLicenseKey">The generated runtime license (if any)</param>
            <returns>An <see cref="T:Infralution.Licensing.EncryptedLicense"/> or null if licenseKey is not valid</returns>
            <remarks>
            <para>
            This method implements the core validation logic (other ValidateLicenseKey methods call it) and optionally
            generates a runtime license key.
            </para>
            <para>
            The <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.SetParameters(System.String)"/> method MUST be called before using this method.  
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ReadKeyFromFile(System.String)">
            <summary>
            Read a license key from the given file
            </summary>
            <param name="licenseFile">The path to the license file to read the key from</param>
            <returns>The license key if any</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.WriteKeyToFile(System.String,System.String)">
            <summary>
            Write a license key to the given file
            </summary>
            <param name="licenseFile">The path to the license file to write the key to</param>
            <param name="licenseKey">The license key to write</param>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicenseDirectory(System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            Return the directory used to store license files
            </summary>
            <param name="context">The license context</param>
            <param name="type">The type being licensed</param>
            <returns>The directory to look for license files</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicenseFilePath(System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            Called by <see cref="M:Infralution.Licensing.EncryptedLicenseProvider.GetLicense(System.String)"/> to get the file path to obtain the license from (if there is no runtime license saved in the context)
            </summary>
            <remarks>
            This can be overridden to change the file used to store the design time license for the provider.   By default the
            the license file is stored in the same directory as the component executable with the name based on the fully
            qualified type name eg MyNamespace.MyControl.lic
            </remarks>
            <param name="context">The license context</param>
            <param name="type">The type to get the license for</param>
            <returns>The path of the license file</returns>
        </member>
        <member name="M:Infralution.Licensing.EncryptedLicenseProvider.ShowError(System.String,System.String)">
            <summary>
            Display an error to a message box or the trace output
            </summary>
            <param name="title">The title for the error</param>
            <param name="message">The error message</param>
        </member>
        <member name="P:Infralution.Licensing.EncryptedLicenseProvider.Parameters">
            <summary>
            Set/Get Parameters for validating <see cref="T:Infralution.Licensing.EncryptedLicense">EncryptedLicenses</see>  
            </summary>
        </member>
        <member name="T:Infralution.Licensing.EvaluationMonitor">
            <summary>
            Provides a mechanism for managing time/usage limited evaluations of products.
            </summary>
            <remarks>
            <para>
            Instantiate an instance of this class to read/write the evaluation parameters for the   
            given product.  The <see cref="P:Infralution.Licensing.EvaluationMonitor.FirstUseDate"/> is set the first time that
            the class is instantiated.  The <see cref="P:Infralution.Licensing.EvaluationMonitor.LastUseDate"/> and <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> 
            properties are set each time the class is instantiated (or once per day if
            the <see cref="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay"/> property is set to true).
            </para>
            <para>
            Note that evaluation data must be stored somewhere on the users 
            hard disk.  It is therefore not too difficult for a sophisticated user to determine the 
            changes made either to registry keys or files (using file/registry monitoring software) 
            and restore the state of these to their pre-installation state (thus resetting the 
            evaluation period).  For this reason it is recommended that you don't rely on this 
            mechanism alone.  You should also consider limiting the functionality of your product 
            in some way or adding nag screens to discourage long term use of evaluation versions.
            </para>
            <para>
            If you have a data oriented application you can increase the security of evaluations by
            storing the current <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> somewhere in your database each time the 
            application runs and cross checking this with the number returned by the EvaluationMonitor.
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the evaluation monitor.
            </summary>
            <param name="countUsageOncePerDay">Should the usage count only be incremented once per day</param>
            <param name="password">A unique password for this product</param>
            <remarks>
            If countUsageOncePerDay is set to true then the <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> is only incremented once
            for each day that the product is actually used.   If countUsageOncePerDay is false then the <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/>
            is incremented each time a new evaluation monitor is instantiated for a product
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.#ctor(System.String)">
            <summary>
            Initialize a new instance of the evaluation monitor.
            </summary>
            <param name="password">A unique password for this product</param>
            <remarks>
            For backward compatibility this overloaded constructor sets the <see cref="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay"/>
            property to false.
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.Reset">
            <summary>
            Allows you to reset the evaluation period.
            </summary>
            <remarks>
            This may be useful if a customer needs an extension or if somehow they
            invalidate their evaluation data by attempting to fiddle
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.FindBaseKey(Microsoft.Win32.RegistryKey)">
            <summary>
            Find the base key for this product
            </summary>
            <param name="parent">The key to search under</param>
            <returns>The base registry key used to store the data</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.CreateBaseKey(Microsoft.Win32.RegistryKey)">
            <summary>
            Create the base key for this product
            </summary>
            <param name="parent">The key to place the information under</param>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.UpdateData">
            <summary>
            Update the registry data
            </summary>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.Encrypt(System.String)">
            <summary>
            Encrypt the given text
            </summary>
            <param name="text">The text to encrypt</param>
            <returns>Encrypted byte array</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.Decrypt(System.Byte[])">
            <summary>
            Decrypt the given byte data to text
            </summary>
            <param name="data">The byte data to decrypt</param>
            <returns>The decrypted text</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.EncryptDate(System.DateTime)">
            <summary>
            Encrypt a date
            </summary>
            <param name="date">The date to encrypt</param>
            <returns>The encrypted date data</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.DecryptDate(System.Byte[])">
            <summary>
            Decrypt a date
            </summary>
            <param name="data">The data to decrypt</param>
            <returns>The descryped date</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.Equals(System.Byte[],System.Byte[])">
            <summary>
            Are the contents of the two byte arrays equal
            </summary>
            <param name="a1">The first array</param>
            <param name="a2">The second array </param>
            <returns>True if the contents of the arrays is equal</returns>
        </member>
        <member name="M:Infralution.Licensing.EvaluationMonitor.Dispose">
            <summary>
            Free resources used by the EvaluationMonitor
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay">
            <summary>
            Set/Get whether the <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> should be incremented only once per day 
            </summary>
            <remarks>
            </remarks>
            <remarks>
            If CountUsageOncePerDay is set to true then the <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> is only incremented once
            for each day that the product is actually used.   If CountUsageOncePerDay is false then 
            the <see cref="P:Infralution.Licensing.EvaluationMonitor.UsageCount"/> is incremented each time a new evaluation monitor is instantiated for 
            a given product id. 
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.UsageCount">
            <summary>
            Return the number of times the product has been used 
            </summary>
            <remarks>
            If <see cref="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay"/> is set to true then the UsageCount is only incremented once
            for each day that the product is actually used.   If <see cref="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay"/> is false then 
            the UsageCount is incremented each time a new evaluation monitor is instantiated for 
            a given product id.  Typically you should instantiate an EvaluationMonitor object just once in your 
            software.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.FirstUseDate">
            <summary>
            Return the date/time the product was first used
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.LastUseDate">
            <summary>
            Return the date/time the product was last used
            </summary>
            <remarks>
            If <see cref="P:Infralution.Licensing.EvaluationMonitor.CountUsageOncePerDay"/> is set to true then this is the date
            at which the usage count was last updated - otherwise it is the date at 
            which the EvaluationMonitor was last created.
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.DaysInUse">
            <summary>
            Return the number of days since the product was first run.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.EvaluationMonitor.Invalid">
            <summary>
            Returns true if the evaluation monitor detects attempts to circumvent
            evaluation limits by tampering with the hidden evaluation data or winding
            the PC clock backwards 
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfElementsCore">
            <summary>
            The core licensing object of WPF Elements.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfElementsCore.#ctor">
            <summary>
            This class is not for intended use outside the WPF Elements framework.
            </summary>
        </member>
        <member name="T:Infralution.Licensing.LicenseResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.AuthenticatingTxt">
            <summary>
              Looks up a localized string similar to Authenticating.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.AuthenticationErrorMsg">
             <summary>
               Looks up a localized string similar to An unexpected error occurred while authenticating your license key.  Do you want to authenticate your license by sending  it to us via email or post instead?
            
            Click &quot;No&quot; and then &quot;Install&quot; to try again.
            
            Click &quot;Yes&quot; to save your license to a file.   Send this file to us and we will authenticate and return it, so that you can load it using the &quot;Load License&quot; button.
            
            Error: {0}.
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.AuthenticationErrorTitle">
            <summary>
              Looks up a localized string similar to Authentication Error.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.AuthenticationsExceededMsg">
            <summary>
              Looks up a localized string similar to The number of installations allowed for this license key has been exceeded.   .
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ConfirmUninstallMsg">
            <summary>
              Looks up a localized string similar to Are you sure you want to uninstall the current license?.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ConfirmUninstallTitle">
            <summary>
              Looks up a localized string similar to Confirm License Uninstall.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ConnectionErrorMsg">
             <summary>
               Looks up a localized string similar to Unable to connect to the License Authentication Server via the internet to authenticate your license on this computer. Do you want to authenticate your license by sending  it to us via email or post instead?
            
            Click &quot;No&quot; to fix your internet or firewall settings and then click the &quot;Install&quot; button to try again.
            
            Click &quot;Yes&quot; to save your license to a file.   Send this file to us and we will authenticate and return it, so that you can load it using the &quot;Load License&quot; button..
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.EvaluationExpiredMsg">
            <summary>
              Looks up a localized string similar to Your evaluation period has expired.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.EvaluationInvalidMsg">
            <summary>
              Looks up a localized string similar to Your evaluation is no longer valid.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidAuthenticationKeyMsg">
            <summary>
              Looks up a localized string similar to The key ({0}) is not a valid license key for this product..
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidAuthenticationKeyTitle">
            <summary>
              Looks up a localized string similar to Invalid License Key.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidComputerMsg">
             <summary>
               Looks up a localized string similar to The license is not valid for this computer.  This could be because you have changed the computer name since installing the license.
            
            Licensed Computer: {0}
            This Computer: {1}
            
            You may need to install a new license using the original License Key provided to you when you purchased the product.  .
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidILSFile">
            <summary>
              Looks up a localized string similar to Not a valid License Settings File.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidKeyMsg">
            <summary>
              Looks up a localized string similar to The key ({0}) is not a valid license key for this product..
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidKeyTitle">
            <summary>
              Looks up a localized string similar to Invalid License Key.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidLicenseTitle">
            <summary>
              Looks up a localized string similar to {0} - Invalid License.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidProductMsg">
            <summary>
              Looks up a localized string similar to The license is not a valid license for this product ({0}).  It is a license for another product ({1})..
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.InvalidSignatureMsg">
            <summary>
              Looks up a localized string similar to The license file contents have been modified and the license is no longer valid.  You may need to reinstall the license using the original License Key provided to you when you purchased the product..
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.LicenseFile">
            <summary>
              Looks up a localized string similar to License.lic.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.LicenseFileFilter">
            <summary>
              Looks up a localized string similar to License Files|*.lic.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.LicenseInstalledTxt">
            <summary>
              Looks up a localized string similar to License Installed.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.LoadLicenseTitle">
            <summary>
              Looks up a localized string similar to Load License from File.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.NoLicenseInstalledTxt">
            <summary>
              Looks up a localized string similar to No License Installed.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ReadErrorMsg">
             <summary>
               Looks up a localized string similar to An error ({0}) occurred while reading the license from file ({1}).  
            
            Ensure you have sufficient privileges to read from the license file..
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ReadErrorTitle">
            <summary>
              Looks up a localized string similar to Error Reading License.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.ReadXmlErrorMsg">
            <summary>
              Looks up a localized string similar to An unexpected error ({0}) occurred while reading the license. .
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.SaveLicenseTitle">
            <summary>
              Looks up a localized string similar to Save License to File.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.UnauthenticatedLicenseMsg">
            <summary>
              Looks up a localized string similar to The license has not been authenticated..
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.UninstallErrorMsg">
             <summary>
               Looks up a localized string similar to An error ({0}) occurred while deleting the license file ({1}).  
            
            Ensure you have sufficient privileges to delete the license file..
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.UninstallErrorTitle">
            <summary>
              Looks up a localized string similar to Error Uninstalling License.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.UnknownProductTxt">
            <summary>
              Looks up a localized string similar to Unknown Product.
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.WaitTxt">
            <summary>
              Looks up a localized string similar to Please Wait....
            </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.WriteErrorMsg">
             <summary>
               Looks up a localized string similar to An error ({0}) occurred while writing the license to file ({1}).  
            
            Ensure you have sufficient privileges to write to the license file..
             </summary>
        </member>
        <member name="P:Infralution.Licensing.LicenseResources.WriteErrorTitle">
            <summary>
              Looks up a localized string similar to Error Writing License.
            </summary>
        </member>
        <member name="T:Infralution.Licensing.TextEncoding">
            <summary>
            Defines the types of encoding possible for license keys
            </summary>
        </member>
        <member name="F:Infralution.Licensing.TextEncoding.Hex">
            <summary>
            Keys are encoded using hexadecimal notation (characters 0-9 and A-F)
            </summary>
        </member>
        <member name="F:Infralution.Licensing.TextEncoding.Base32">
            <summary>
            Keys are encoding using base 32 with the following character set (23456789ABCDEFGHJKLMNPQRSTUVWXYZ)
            </summary>
        </member>
        <member name="T:Infralution.Licensing.LicenseUtilities">
            <summary>
            Provides common utility methods for the Infralution Licensing classes
            </summary>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.FormatVBParameters(System.String)">
            <summary>
            Format license parameters nicely for inclusion in VB code
            </summary>
            <param name="licenseParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.FormatCSParameters(System.String)">
            <summary>
            Format license parameters nicely for inclusion in C# code
            </summary>
            <param name="licenseParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.Checksum(System.String)">
            <summary>
            Returns a three character checksum based on the given input string
            </summary>
            <param name="input">The input string to return a checksum for</param>
            <returns>An checksum that can be used to validate the given input string</returns>
            <remarks>
            <para>
            This function can be used to generate a short checksum that can be embedded in a
            license key as <see cref="P:Infralution.Licensing.EncryptedLicense.ProductInfo"/>.  This allows you to tie 
            the license key to information supplied by the user (for instance the name of the 
            purchaser) without having to include the full information in the license key.  
            This enables license keys to be kept reasonably short.
            </para>
            <para>
            When the license is checked by the application it performs a checksum on the information
            supplied by the user and checks that it matches the information in the ProductInfo that
            was generated when the license was issued.   The License Tracker application provides
            support for "CustomGenerators" which allow you provide the code to generate the ProductInfo
            from customer and other information.
            </para>
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.Strip(System.String,System.String)">
            <summary>
            Return the given input string stripped of the given characters
            </summary>
            <param name="value">The string to strip</param>
            <param name="characters">The characters to strip from the string</param>
            <returns>The input string with the given characters removed</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ReadElementBase64(System.Xml.XmlReader)">
            <summary>
            Read a Base64 string from an XmlReader into a byte array
            </summary>
            <param name="reader">The XmlReader to read from</param>
            <returns>The byte data for the given element</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ReadElementBase64(System.Xml.XmlReader,System.String)">
            <summary>
            Read a Base64 string from an XmlReader into a byte array
            </summary>
            <param name="reader">The XmlReader to read from</param>
            <param name="name">The name of the element</param>
            <returns>The byte data for the given element</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.WriteElementBase64(System.Xml.XmlWriter,System.String,System.Byte[])">
            <summary>
            Write a byte array into Base64 string of an XmlWriter
            </summary>
            <param name="writer">The XmlWriter to write to</param>
            <param name="name">The name of the element</param>
            <param name="value">The data to write</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.WriteRSAParameters(System.Security.Cryptography.RSACryptoServiceProvider,System.Xml.XmlWriter,System.String,System.Boolean)">
            <summary>
            Read RSA Parameters for an RSA Provider to an XmlWriter
            </summary>
            <param name="provider">The provider to writer the parameters for</param>
            <param name="writer">The XmlWriter to write to</param>
            <param name="localName">The name of the element</param>
            <param name="includePrivateParameters">Should the private RSA parameters be included</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ReadRSAParameters(System.Security.Cryptography.RSACryptoServiceProvider,System.Xml.XmlReader,System.String)">
            <summary>
            Read RSA Parameters for an RSA Provider from an XmlReader
            </summary>
            <param name="provider">The provider to read the parameters for</param>
            <param name="reader">The XmlReader to read from</param>
            <param name="localName">The name of the element</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ToHex(System.Byte[])">
            <summary>
            Converts a byte array into a hexadecimal representation.
            </summary>
            <param name="data">The byte data to convert</param>
            <returns>Hexadecimal representation of the data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.FromHex(System.String)">
            <summary>
            Converts a hexadecimal string into a byte array.
            </summary>
            <param name="hex">The hexadecimal string to convert</param>
            <returns>The converted byte data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ToBase32(System.Byte[])">
            <summary>
            Converts a byte array into a base 32 representation.
            </summary>
            <param name="data">The byte data to convert</param>
            <returns>Base32 representation of the data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.FromBase32(System.String)">
            <summary>
            Converts a base32 string into a byte array.
            </summary>
            <param name="str">The base32 string to convert</param>
            <returns>The converted byte data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.EncodeToText(System.Byte[],Infralution.Licensing.TextEncoding)">
            <summary>
            Converts a byte array into a text representation.
            </summary>
            <param name="data">The byte data to convert</param>
            <param name="encoding">The encoding to use</param>
            <returns>Text representation of the data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.DecodeFromText(System.String,Infralution.Licensing.TextEncoding)">
            <summary>
            Converts a string into a byte array.
            </summary>
            <param name="text">The text to convert</param>
            <param name="encoding">The encoding to use</param>
            <returns>The converted byte data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.CreateRSACryptoServiceProvider">
            <summary>
            Create an instance of the RSACryptoServiceProvider.
            </summary>
            <returns>An instance of the RSACryptoServiceProvider</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.VerifyData(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[],System.Byte[])">
            <summary>
            Verify the signature for the given data using the given RSA parameters
            </summary>
            <param name="rsaProvider">The RSA Provider to use</param>
            <param name="data">The data to verify</param>
            <param name="signature">The signature for the data</param>
            <returns>True if the data matches the signature</returns>
            <remarks>
            Uses <see cref="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])"/> instead of
            <see cref="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])"/> to workaround bug in standard Microsoft
            <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider"/> that can cause a lengthy delay.  
            See http://support.microsoft.com/default.aspx?scid=kb;en-us;948080
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.EncryptKeys(System.Security.Cryptography.RSACryptoServiceProvider,System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            Encrypt the keys of the given symmetric algorithm using an RSA public key 
            </summary>
            <param name="rsaProvider">The RSA provider to use to encrypt the symmetric keys</param>
            <param name="algorithm">The symmetric algorithm</param>
            <returns>String containing the encrypted keys</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.DecryptKeys(System.Security.Cryptography.RSACryptoServiceProvider,System.Security.Cryptography.SymmetricAlgorithm,System.String)">
            <summary>
            Set the Key and IV for the given symmetric algorithm by decrypting the keys from a string 
            </summary>
            <param name="rsaProvider">The RSA provider to use to decrypt the keys</param>
            <param name="algorithm">The symmetric algorithm to set the keys for</param>
            <param name="encryptedKeys">String containing encrypted keys</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.EncryptValues(System.Security.Cryptography.SymmetricAlgorithm,System.Collections.Hashtable)">
            <summary>
            Encrypt a set of key/values using the given algorithm
            </summary>
            <param name="algorithm">The algorithm to use to encrypt the data</param>
            <param name="values">A hash table containing string key/value pairs</param>
            <returns>The encrypted key/values</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.DecryptValues(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[])">
            <summary>
            Decrypt a set of key/values using the given algorithm
            </summary>
            <param name="algorithm">The algorithm to use to decrypt the values</param>
            <param name="encryptedValues">The encrypted data</param>
            <returns>A hashtable containing the string key/values</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.EncryptText(System.Security.Cryptography.SymmetricAlgorithm,System.String)">
            <summary>
            Encrypt text using the given algorithm
            </summary>
            <param name="algorithm">The algorithm to use to encrypt the data</param>
            <param name="text">The text to encrypt</param>
            <returns>The encrypted data</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.DecryptText(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[])">
            <summary>
            Decrypt text using the given algorithm
            </summary>
            <param name="algorithm">The algorithm to use to decrypt the values</param>
            <param name="encryptedData">The encrypted text</param>
            <returns>The decryptedText</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.GetSavedLicenseKey(System.Reflection.Assembly,System.Type)">
            <summary>
            Retrieve the license key for the given type from the given DLL/EXE assembly resources
            </summary>
            <param name="assembly">The assembly containing the license resources</param>
            <param name="type">The type to get the license key for</param>
            <returns>The license key if any</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.UninstallLicenseFile(System.String)">
            <summary>
            Uninstall the given license file by deleting it
            </summary>
            <param name="path">The full file path</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ShowError(System.String,System.String)">
            <summary>
            Display an error to a message box or the trace output
            </summary>
            <param name="title">The title for the error</param>
            <param name="message">The error message</param>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.DefaultLicenseDirectory(System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            Return the default directory used to store license files
            </summary>
            <param name="context">The license context</param>
            <param name="type">The type being licensed</param>
            <returns>The directory to look for license files</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ArraySize(System.Int32)">
            <summary>
            Return the array size to use when declaring an array of the given length.
            </summary>
            <param name="length">The length of the array you are declaring</param>
            <returns>The size to declare the array</returns>
            <remarks>
            This is used to account for the difference between declaring VB and C# arrays and
            permit automatic conversion of the code to VB
            </remarks>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.ArrayEqual(System.Byte[],System.Byte[])">
            <summary>
            Are the contents of the two byte arrays equal
            </summary>
            <param name="a1">The first array</param>
            <param name="a2">The second array </param>
            <returns>True if the contents of the arrays is equal</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.Checksum(System.Byte[])">
            <summary>
            Create a checksum for the given block of data
            </summary>
            <param name="data">The block of data to create a checksum for</param>
            <returns>An integer checksum</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.HashString(System.String)">
            <summary>
            Implements a string hashing code algorithm equivalent to the .NET 2003 String.GetHashCode()
            </summary>
            <remarks>
            Microsoft have changed the underlying String.GetHashCode algorithm.  This method provides an
            equivalent compatible method that can be used on all platforms returning the same result.
            </remarks>
            <param name="szStr">The string to get the hash code for</param>
            <returns>The hash code</returns>
        </member>
        <member name="M:Infralution.Licensing.LicenseUtilities.GetXmlLines(System.String)">
            <summary>
            Break the given xml fragment into lines
            </summary>
            <param name="xml">The xml fragment</param>
            <returns></returns>
        </member>
        <member name="P:Infralution.Licensing.LicenseUtilities.HandleIOExceptions">
            <summary>
            Should the licensing classes handle exceptions when reading and writing license files
            </summary>
            <remarks>
            Set this to false if you wish to handle these exceptions yourself
            </remarks>
        </member>
        <member name="P:Infralution.Licensing.LicenseUtilities.UseMachineKeyStore">
            <summary>
            Determines whether RSA keys used to verify licenses are stored on a user or machine level
            </summary>
            <remarks>
            Setting this value to true may be useful when impersonating or running under an account 
            whose user profile is not loaded.  ILS will by default use the MachineKeyStore when there
            is no interactive user (ie services and ASP.NET) otherwise it will use the UserKeyStore.
            </remarks>
        </member>
        <member name="T:Infralution.Licensing.PublicEncryptedLicenseProvider">
            <summary>
            Forwards licensing requests to the internal provider.
            </summary>
        </member>
        <member name="M:Infralution.Licensing.PublicEncryptedLicenseProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infralution.Licensing.PublicEncryptedLicenseProvider"/> class.
            </summary>
        </member>
        <member name="M:Infralution.Licensing.PublicEncryptedLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Get a license (if installed) for the given component/control type 
            </summary>
            <param name="context">The context (design or runtime)</param>
            <param name="type">The type to get the license for</param>
            <param name="instance">The object the license is for</param>
            <param name="allowExceptions">If true a <see cref="T:System.ComponentModel.LicenseException"/> is thrown if a valid license cannot be loaded</param>
            <returns>An encrypted license</returns>
        </member>
        <member name="T:Mindscape.WpfElements.MaskedTextBox">
            <summary>
            A text box that uses a mask to prevent incorrect user input.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.MaskedTextBox"/> gets focus;
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextBox.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/> and returns the desired size.
            </summary>
            <param name="constraint">The available size for this <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.</param>
            <returns>The desired size of the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.MaskProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.Mask"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.InputStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.InputStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.LiteralStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.LiteralStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.PromptStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.PromptStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.PromptCharDisplaySelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.PromptCharDisplaySelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.LastOperationSucceededProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.LastOperationSucceeded"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.LastOperationResultProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.LastOperationResult"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.IsMaskCompletedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.IsMaskCompleted"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.IsMaskFullProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.IsMaskFull"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.AutoSkipLiteralsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.AutoSkipLiterals"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MaskedTextBox.IsTextWrappingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MaskedTextBox.IsTextWrappingEnabled"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Overrides default handling for the PreviewTextInput event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Overrides default handling for the PreviewKeyDown event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.Mask">
            <summary>
            Gets or sets the mask.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.MaskProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.InputStyle">
            <summary>
            Gets or sets the style used to display characters entered by the user.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.InputStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.LiteralStyle">
            <summary>
            Gets or sets the style used to display literal characters from the mask.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.LiteralStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.PromptStyle">
            <summary>
            Gets or sets the style used to display prompts (mask positions where input is
            permitted but the user has not yet entered a character).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.PromptStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.PromptCharDisplaySelector">
            <summary>
            Gets or sets the object used to customize the appearance of prompt elements.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.PromptCharDisplaySelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.LastOperationSucceeded">
            <summary>
            Gets the result of the last operation (user text entry) into the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.
            This can be used to control the visibility of user assistance or error indicators.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.LastOperationSucceededProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.LastOperationResult">
            <summary>
            Gets the result of the last operation (user text entry) into the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.
            This can be used to control the content of user assistance or error indicators.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.LastOperationResultProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.IsMaskCompleted">
            <summary>
            Gets whether the mask has been completed, i.e. all mandatory positions have
            been filled.  Input into a completed mask may still be possible if optional
            positions are unfilled.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.IsMaskCompletedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.IsMaskFull">
            <summary>
            Gets whether the mask is full, i.e. all available positions have been filled and no
            further input is possible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.IsMaskFullProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.AutoSkipLiterals">
            <summary>
            Gets or sets whether literals are automatically skipped during text entry.
            If true, user input (and deletion) is automatically sent to the next edit
            position, so the user can type past literals; if false, the user must type
            or cursor over literals.  The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.AutoSkipLiteralsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MaskedTextBox.IsTextWrappingEnabled">
            <summary>
            Gets or sets whether or not to wrap overflowing text. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MaskedTextBox.IsTextWrappingEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.IPromptCharDisplaySelector">
            <summary>
            Supports customization of the display of prompts in a <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IPromptCharDisplaySelector.OverridesRepresentation(Mindscape.WpfElements.IPrompt)">
            <summary>
            Gets whether the implementation provides a custom presentation for the specified
            prompt.  If this returns false, the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/> will use the default
            presentation (the prompt character).
            </summary>
            <param name="prompt">The prompt.</param>
            <returns>true if there is a custom presentation for this prompt, otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.IPromptCharDisplaySelector.CreateRepresentation(Mindscape.WpfElements.IPrompt)">
            <summary>
            Creates the custom presentation for the specified prompt.
            </summary>
            <param name="prompt">The prompt.</param>
            <returns>An <see cref="T:System.Windows.Documents.Inline"/> to represent the prompt in the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.
            This should contain exactly one character or <see cref="T:System.Windows.UIElement"/>.  The MaskedTextBox
            will throw an exception if an implementation returns an <see cref="T:System.Windows.Documents.Inline"/> containing
            a run of more than one character or element.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ExpectedInputType">
            <summary>
            Represents the type of input expected in the position represented by
            an <see cref="T:Mindscape.WpfElements.IPrompt"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ExpectedInputType.Digit">
            <summary>
            The position expects a digit.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ExpectedInputType.Letter">
            <summary>
            The position expects a letter.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ExpectedInputType.Alphanumeric">
            <summary>
            The position expects a digit or a letter.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ExpectedInputType.Any">
            <summary>
            The position expects any printable character.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IPrompt">
            <summary>
            Represents a position where the <see cref="T:Mindscape.WpfElements.MaskedTextBox"/> is prompting for input.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IPrompt.ExpectedInputType">
            <summary>
            Gets the type of input expected.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IPrompt.IsOptional">
            <summary>
            Gets whether input is optional at this position.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IPrompt.DisplayContext">
            <summary>
            Gets default display information.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IPromptDefaults">
            <summary>
            Provides information about display defaults for a prompt 
            position in a <see cref="T:Mindscape.WpfElements.MaskedTextBox"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IPromptDefaults.PromptChar">
            <summary>
            Gets the character displayed by default for prompts.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MaskedTextDisplayException">
            <summary>
            Indicates that masked text cannot be displayed because of invalid styling or
            prompt representation (see <see cref="T:Mindscape.WpfElements.IDisplayElementStyleProvider"/> and
            <see cref="T:Mindscape.WpfElements.IPromptCharDisplaySelector"/>).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextDisplayException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MaskedTextDisplayException"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextDisplayException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MaskedTextDisplayException"/> class.
            </summary>
            <param name="message">The message associated with the exception.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextDisplayException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MaskedTextDisplayException"/> class.
            </summary>
            <param name="message">The message associated with the exception.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MaskedTextDisplayException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MaskedTextDisplayException"/> class.
            </summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">Contextual information about the source or destination.</param>
        </member>
        <member name="T:Mindscape.WpfElements.AutoCompleteBox">
            <summary>
            Represents a control that provides a text box for user input and 
            a drop-down that contains possible matches based on the input in the text box.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AutoCompleteBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AutoCompleteBox.ShowAllSuggestions">
            <summary>
            Displays all the suggestions in the drop down up to the number defined by the MaxSuggestionCount property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.AutoCompleteBox.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the mouse is double clicked over the <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.AutoCompleteBox.OnApplyTemplate">
            <summary>
            Called by the framework when ApplyTemplate is called.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.MultiInputDelimitersProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.MultiInputDelimiters"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.SuggestionsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.SuggestionsSource"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.MatchingSuggestionsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.MatchingSuggestions"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.MinimumPrefixLengthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.MinimumPrefixLength"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.MaxSuggestionCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.MaxSuggestionCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.AutoCompleteBox.IsSuggestionListExclusiveProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.AutoCompleteBox.IsSuggestionListExclusive"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.MultiInputDelimiters">
            <summary>
            Gets or sets the delimiters used to allow multiple individual entries to be added to the <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/>.
            If this property is set to null, multiple entry input will be disabled. The default is null.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.MultiInputDelimitersProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.SuggestionsSource">
            <summary>
            Gets or sets a source for autocompletion suggestions.  This may be a collection
            of strings or an <see cref="T:Mindscape.WpfElements.IAutoCompleteSuggestionProvider"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.SuggestionsSourceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.MatchingSuggestions">
            <summary>
            Gets the list of suggestions which match the current user input
            and should be displayed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.MatchingSuggestionsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.IsDropDownOpen">
            <summary>
            Gets or sets whether the suggestion drop-down is open.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.IsDropDownOpenProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum number of characters required to be entered 
            in the text box before the AutoCompleteBox displays possible matches.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.MinimumPrefixLengthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.MaxSuggestionCount">
            <summary>
            Gets or sets the maximum number of autocomplete suggestions that will
            be displayed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.MaxSuggestionCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.AutoCompleteBox.IsSuggestionListExclusive">
            <summary>
            Gets or sets whether or not the user input must be one of the suggested items.
            If true, the value of the <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/> will be set to the closest matching suggestion when it loses focus.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.AutoCompleteBox.IsSuggestionListExclusiveProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.IAutoCompleteSuggestionProvider">
            <summary>
            Provides completion suggestions for an <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IAutoCompleteSuggestionProvider.GetSuggestions(System.String,System.Int32)">
            <summary>
            Gets the suggestions to be displayed for the specified input.
            </summary>
            <param name="input">The current user input in the <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/>.</param>
            <param name="maxCount">The maximum number of results that the AutoCompleteBox will display.
            This parameter is advisory.  Specifically, implementations do not need to track how many items
            they have returned: the AutoCompleteBox will not ask for more than this number of items.  The
            maximum count is provided so that implementations can filter or prioritise.</param>
            <returns>A sequence of suggested matches for the user input.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.CharArrayTypeConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter"/> for converting a string into a char array.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CharArrayTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the sourceType is a string.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if the sourceType is a string.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CharArrayTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given string value into a char array.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>A char array.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.InputSuggestion">
            <summary>
            Contains information about an input-suggestion match in an
            <see cref="T:Mindscape.WpfElements.AutoCompleteBox"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestion.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:Mindscape.WpfElements.InputSuggestion"/>.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>true if equal; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestion.GetHashCode">
            <summary>
            Returns a hash code for the <see cref="T:Mindscape.WpfElements.InputSuggestion"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestion.op_Equality(Mindscape.WpfElements.InputSuggestion,Mindscape.WpfElements.InputSuggestion)">
            <summary>
            Compares two <see cref="T:Mindscape.WpfElements.InputSuggestion"/> objects.
            </summary>
            <param name="left">An InputSuggestion to compare.</param>
            <param name="right">An InputSuggestion to compare.</param>
            <returns>true if equal; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestion.op_Inequality(Mindscape.WpfElements.InputSuggestion,Mindscape.WpfElements.InputSuggestion)">
            <summary>
            Compares two <see cref="T:Mindscape.WpfElements.InputSuggestion"/> objects.
            </summary>
            <param name="left">An InputSuggestion to compare.</param>
            <param name="right">An InputSuggestion to compare.</param>
            <returns>false if equal; otherwise true.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.InputSuggestion.ToString">
            <summary>
            Represents the input-suggestion match using the suggestion text.
            </summary>
            <returns>The suggestion text.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.InputSuggestion.Input">
            <summary>
            The user input.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.InputSuggestion.Suggestion">
            <summary>
            The matching suggestion.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PercentageTextBox">
            <summary>
            A text box for editing percentage values.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PercentageTextBox.DecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PercentageTextBox.DecimalPlaces"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PercentageTextBox.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display.  Set to -1
            to display the default number of decimal places for the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PercentageTextBox.DecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.PromptDecorator">
            <summary>
            Adds a prompt to another control, typically a TextBox.  The prompt is displayed when 
            the contained control is empty, and disappears when the user clicks into the
            contained control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PromptDecorator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.PromptDecorator"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PromptDecorator.IsPromptVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PromptDecorator.IsPromptVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PromptDecorator.PromptProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PromptDecorator.Prompt"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PromptDecorator.PromptTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PromptDecorator.PromptTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PromptDecorator.ShowIfFocusedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PromptDecorator.ShowIfFocused"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PromptDecorator.ChildContentPropertyNameProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PromptDecorator.ChildContentPropertyName"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PromptDecorator.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called by the framework when the Content property changes.
            </summary>
            <param name="oldContent">The old content.</param>
            <param name="newContent">The new content.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PromptDecorator.IsPromptVisible">
            <summary>
            Gets whether the prompt is currently displayed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PromptDecorator.IsPromptVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PromptDecorator.Prompt">
            <summary>
            Gets or sets the prompt to be displayed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PromptDecorator.PromptProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PromptDecorator.PromptTemplate">
            <summary>
            Gets or sets a DataTemplate to format the prompt or display additional
            prompt content such as a graphic.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PromptDecorator.PromptTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PromptDecorator.ShowIfFocused">
            <summary>
            Gets or sets whether the prompt remain shown when the contained element
            has focus.  By default, the prompt is hidden when the user gives focus to
            the contained element.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PromptDecorator.ShowIfFocusedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PromptDecorator.ChildContentPropertyName">
            <summary>
            Gets or sets the property of the contained element which is used to determine
            if the contained element is empty (for purposes of displaying the prompt).
            If this is not specified, and the contained element has a Text property, then
            the Text property is used.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PromptDecorator.ChildContentPropertyNameProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.MonthCalendar">
            <summary>
            A control for displaying a monthly calendar.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.DaysListPartName">
            <summary>
            Identifies the template part responsible for displaying the days of the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.DaysOfWeekListPartName">
            <summary>
            Identifies the template part responsible for displaying the days of the week.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.SelectedDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.SelectedDate"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.VisibleMonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.VisibleMonth"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.WeeksToDisplayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.WeeksToDisplay"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.CultureProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.Culture"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.MonthTextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.MonthText"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.TodayButtonTimeActionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.TodayButtonTimeAction"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthCalendar.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.MonthCalendar"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthCalendar.OnApplyTemplate">
            <summary>
            Called when a template is applied to the <see cref="T:Mindscape.WpfElements.MonthCalendar"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MonthCalendar.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MonthCalendar.Maximum"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.SelectedDate">
            <summary>
            Gets or sets the selected date.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.SelectedDateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td><see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault"/></td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.VisibleMonth">
            <summary>
            Gets or sets the month which is currently shown on the control.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.VisibleMonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.WeeksToDisplay">
            <summary>
            Gets or sets the number of weeks to display.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.WeeksToDisplayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.Culture">
            <summary>
            Gets or sets the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.CultureProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.MonthText">
            <summary>
            Gets or sets the text to display the month name.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.MonthTextProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.TodayButtonTimeAction">
            <summary>
            Gets or sets how the time of day is set when the user selects the
            Today button.  The default is <see cref="F:TodayButtonTimeAction.Zero"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.TodayButtonTimeActionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.Minimum">
            <summary>
            Gets or sets the minimum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.Maximum">
            <summary>
            Gets or sets the maximum date that can be selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MonthCalendar.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.SelectButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Style"/> for calendar
            buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthCalendar.TodayButtonContentKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the content of the "Today" button.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TodayButtonTimeAction">
            <summary>
            Specifies the time of day associated with the Today button on
            a calendar control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TodayButtonTimeAction.Zero">
            <summary>
            When the user selects the Today button, only the current date is used, and
            the time of day is zeroed.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TodayButtonTimeAction.Preserve">
            <summary>
            When the user selects the Today button, the current date is used, and the
            previously selected time of day is retained.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TodayButtonTimeAction.Now">
            <summary>
            When the user selects the Today button, the current time of day is used.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MulticolumnTreeView">
            <summary>
            A control with the expand/collapse functionality of a TreeView, but supporting
            multiple columns like a ListView.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeView.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.Columns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContainerStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContextMenuProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContextMenu"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.ExpandingDecoratorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.ExpandingDecorator"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.WrappedColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.WrappedColumns"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeView.AllowsColumnReorderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeView.AllowsColumnReorder"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeView.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.Columns">
            <summary>
            Gets or sets the columns in the <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>NotDataBindable</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContainerStyle">
            <summary>
            Gets or sets the column header container style.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContainerStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplate">
            <summary>
            Gets or sets the column header template.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateSelector">
            <summary>
            Gets or sets the column header template selector.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContextMenu">
            <summary>
            Gets or sets the a context menu for the grid column headers.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ColumnHeaderContextMenuProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ExpandingDecorator">
            <summary>
            Gets or sets the decorator applied to cells used for expanding the tree.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.ExpandingDecoratorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>NotDataBindable</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.WrappedColumns">
            <summary>
            Gets the grid columns, wrapped to provide a tree expansion UI.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.WrappedColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.AllowsColumnReorder">
            <summary>
            Gets or sets a value that indicates whether columns can change
            positions.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeView.AllowsColumnReorderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ExpandCollapseToggleStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the default <see cref="T:System.Windows.Style"/> of an
            expand/collapse toggle button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ScrollViewerStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the default <see cref="T:System.Windows.Style"/> of the ScrollViewer
            used to scroll the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeView.ExpandingCellTemplateKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the default <see cref="T:System.Windows.DataTemplate"/> of an
            cell in a column containing expand/collapse toggle buttons.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ChildPathExtension">
            <summary>
            Provides a shortcut XAML syntax for specifying the child items of an
            item in a <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ChildPathExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ChildPathExtension"/> class.
            </summary>
            <remarks>Use this constructor if you intend to set the <see cref="P:Mindscape.WpfElements.ChildPathExtension.Binding"/>
            property explicitly.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.ChildPathExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ChildPathExtension"/> class.
            </summary>
            <param name="path">The child collection property path.</param>
            <remarks>Use this constructor if you do not intend to set the <see cref="P:Mindscape.WpfElements.ChildPathExtension.Binding"/>
            property explicitly.  If you set the Binding property, it will override the path
            set in the constructor.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.ChildPathExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>The object value to set on the property where the extension is applied.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.ChildPathExtension.Binding">
            <summary>
            Gets or sets the data binding for the child collection.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MulticolumnTreeViewColumn">
            <summary>
            Represents a column in a <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            </summary>
            <remarks>You do not need to create instances of this type directly.
            You should use the normal <see cref="T:System.Windows.Controls.GridViewColumn"/>; the MulticolumnTreeView
            internally creates wrapper objects as required.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateSelector"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplate">
            <summary>
            Gets or sets the cell template to be used for this column within
            any decorator applied by the <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateSelector">
            <summary>
            Gets or sets the cell template selector to be used for this column
            within any decorator applied by the <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.MulticolumnTreeViewColumn.OriginalCellTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.MulticolumnTreeViewIndentConverter">
            <summary>
            Determines the indent for a level in a <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeViewIndentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a level in the <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/> hierarchy to
            an indent.
            </summary>
            <param name="value">The level.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A <see cref="T:System.Windows.Thickness"/> representing the indent.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeViewIndentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a binding target for writing to a binding source.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeViewIndentConverter.Indent">
            <summary>
            Gets or sets the indent to apply at each level.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MulticolumnTreeViewItem">
            <summary>
            Implements a selectable item in a <see cref="T:Mindscape.WpfElements.MulticolumnTreeView"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeViewItem.GetContainerForItemOverride">
            <summary>
            Creates a new <see cref="T:Mindscape.WpfElements.MulticolumnTreeViewItem"/> to display a child item.
            </summary>
            <returns>A new TreeListViewItem.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MulticolumnTreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a <see cref="T:Mindscape.WpfElements.MulticolumnTreeViewItem"/>.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>true if item is a MulticolumnTreeViewItem; otherwise, false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MulticolumnTreeViewItem.Level">
            <summary>
            Gets the level of the <see cref="T:Mindscape.WpfElements.MulticolumnTreeViewItem"/> in the hierarchy.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NumericTextBox">
            <summary>
            A control for entering numeric values.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NumericTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.NumericTextBox"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBox.DecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBox.DecimalPlaces"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBox.EnforceDecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBox.EnforceDecimalPlaces"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBox.FocusChangedBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.NumericTextBox.FocusChangedBehavior"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBox.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display.  Set to -1
            to display the default number of decimal places for the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBox.DecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBox.EnforceDecimalPlaces">
            <summary>
            Gets or sets whether the user is prevented from typing beyond the permitted
            number of decimal places.  Ignored if DecimalPlaces is -1.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBox.EnforceDecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.NumericTextBox.FocusChangedBehavior">
            <summary>
            Gets or sets the beahvior of the <see cref="T:Mindscape.WpfElements.NumericTextBox"/> when the focus changes.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.NumericTextBox.FocusChangedBehaviorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DoubleTextBox">
            <summary>
            A control for entering numeric values of type double.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DoubleTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DoubleTextBox"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DoubleTextBox.DecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DoubleTextBox.DecimalPlaces"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DoubleTextBox.EnforceDecimalPlacesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DoubleTextBox.EnforceDecimalPlaces"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DoubleTextBox.FocusChangedBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DoubleTextBox.FocusChangedBehavior"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DoubleTextBox.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display.  Set to -1
            to display the default number of decimal places for the culture.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DoubleTextBox.DecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DoubleTextBox.EnforceDecimalPlaces">
            <summary>
            Gets or sets whether the user is prevented from typing beyond the permitted
            number of decimal places.  Ignored if DecimalPlaces is -1.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DoubleTextBox.EnforceDecimalPlacesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DoubleTextBox.FocusChangedBehavior">
            <summary>
            Gets or sets the beahvior of the <see cref="T:Mindscape.WpfElements.DoubleTextBox"/> when the focus changes.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DoubleTextBox.FocusChangedBehaviorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.IntegerTextBox">
            <summary>
            A control for entering integer values.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerTextBox.PrecisionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerTextBox.Precision"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.IntegerTextBox.EnforcePrecisionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.IntegerTextBox.EnforcePrecision"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerTextBox.Precision">
            <summary>
            Gets or sets the precision (the minimum number of digits that should be
            displayed).  The control will pad the text with leading zeroes if required.
            This is a dependency property.
            </summary>
            <remarks>
            <para>If Precision is specified (non-zero), then ShowSeparators is ignored.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerTextBox.PrecisionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.IntegerTextBox.EnforcePrecision">
            <summary>
            Gets or sets whether the user is prevented from typing beyond the permitted
            number of digits (precision).  Ignored if Precision is 0.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.IntegerTextBox.EnforcePrecisionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.NumericTextBoxFocusChangedBehavior">
            <summary>
            Specifies the behavior of a <see cref="T:Mindscape.WpfElements.NumericTextBox"/> when it loses or gains focus.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxFocusChangedBehavior.None">
            <summary>
            The displayed text value does not change.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.NumericTextBoxFocusChangedBehavior.Round">
            <summary>
            When the <see cref="T:Mindscape.WpfElements.NumericTextBox"/> loses focus, the displayed text value will be rounded based on the DecimalPlaces property.
            When the <see cref="T:Mindscape.WpfElements.NumericTextBox"/> gets focus, any previous user input will be restored, allowing them to continue editing the value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NumericUpDown">
            <summary>
            A control for editing a decimal value with additional "up" and "down" commands.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.OutlookBar">
            <summary>
            A control which allows a user to select between multiple content panes using a set
            of buttons, which can be collapsed to small icons depending on the amount of space
            available for the button stack.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.OutlookBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.OutlookBar"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.OutlookBar.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.OutlookBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the contents of the Items collection has changed.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> containing the event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBar.SelectedIndexProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBar.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBar.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBar.SelectedItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBar.ExpandedItemCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBar.ExpandedItemCount"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBar.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBar.SelectedIndexProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBar.SelectedItem">
            <summary>
            Gets the selected <see cref="T:Mindscape.WpfElements.OutlookBarItem"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBar.SelectedItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.OutlookBar.SelectedItemChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.OutlookBar.SelectedItem"/> property changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to render the header of collapsed items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to render the header of collapsed items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBar.CollapsedItemTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBar.ExpandedItemCount">
            <summary>
            Gets or sets the number of items to display as buttons.  The remaining items are displayed
            as small icons.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.CountLimitedPanel">
            <summary>
            Represents a panel which lays out its children in a stack, but truncates the layout
            after a specified number of children.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.CountLimitedPanel.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.CountLimitedPanel.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CountLimitedPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of the control.
            </summary>
            <param name="availableSize">An upper limit size that should not be exceeded.</param>
            <returns>The desired size of the element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CountLimitedPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the element.
            </summary>
            <param name="finalSize">The size that this element should use to arrange its
            child elements.</param>
            <returns>The arranged size of this element and its children.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.CountLimitedPanel.VisibleItemCount">
            <summary>
            Gets or sets the number of children that will be displayed in this panel. All other children
            still belong to this panel, but are not displayed.
            </summary>
            <remarks>Children that are not displayed are still measured and arranged, but with
            zero size.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.CountLimitedPanel.Orientation">
            <summary>
            Gets or sets the Orientation of this <see cref="T:Mindscape.WpfElements.CountLimitedPanel"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.OutlookBarItem">
            <summary>
            Represents a pane or tab in an <see cref="T:Mindscape.WpfElements.OutlookBar"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.Header"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeader"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.ContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.Content"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.OutlookBarItem.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.OutlookBarItem.Visibility"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.OutlookBarItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.OutlookBarItem.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.Header">
            <summary>
            Gets or sets the content displayed on the selection button for this pane.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to render the header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to render the header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBarItem.HeaderTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeader">
            <summary>
            Gets or sets the content displayed on the selection bar when the item is displayed as a small icon.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to render the collapsed header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> used to render the collapsed header.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBarItem.CollapsedHeaderTemplateSelectorProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.IsSelected">
            <summary>
            Gets or sets whether or not this <see cref="T:Mindscape.WpfElements.OutlookBarItem"/> is selected.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.OutlookBarItem.IsSelectedChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.OutlookBarItem.IsSelected"/> property changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.Content">
            <summary>
            Gets or sets the content of this <see cref="T:Mindscape.WpfElements.OutlookBarItem"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.OutlookBarItem.Visibility">
            <summary>
            Gets or sets the Visibility.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.OutlookBarItem.VisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.OutlookBarItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SizeLimitedPanel">
            <summary>
            Represents a panel which lays out its children in a stack, but truncates the layout
            to the available size instead of growing to meet the demands of the children.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SizeLimitedPanel.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SizeLimitedPanel.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SizeLimitedPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of the control.
            </summary>
            <param name="availableSize">An upper limit size that should not be exceeded.</param>
            <returns>The desired size of the element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SizeLimitedPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the element.
            </summary>
            <param name="finalSize">The size that this element should use to arrange its
            child elements.</param>
            <returns>The arranged size of this element and its children.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.SizeLimitedPanel.StartIndex">
            <summary>
            Gets or sets the index of the first child to display in this panel. Any children
            before this index are not displayed.  The default is 0 (display all children up to
            the available size).
            </summary>
            <remarks>Children that are not displayed are still measured and arranged, but with
            zero size.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SizeLimitedPanel.Orientation">
            <summary>
            Gets or sets the Orientation of this <see cref="T:Mindscape.WpfElements.SizeLimitedPanel"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ExpectedNonNegativeArgument">
            <summary>
              Looks up a localized string similar to [{0}] cannot be negative.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ExpectedNonZeroArgument">
            <summary>
              Looks up a localized string similar to [{0}] cannot be zero.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ExpectedPositiveArgument">
            <summary>
              Looks up a localized string similar to [{0}] must be positive.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ExpiredOn">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements trial license expired on {0:d}.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ExpiringSoon">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements trial license expires on {0:d}.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.InvalidEnumValue">
            <summary>
              Looks up a localized string similar to The value of the argument [{0}] provided for the enumeration [{1}] is invalid.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.InvariantFail">
            <summary>
              Looks up a localized string similar to Invariant Failure.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.PromptsMustBeExactlyOneCharacter">
            <summary>
              Looks up a localized string similar to Prompt representations must be exactly one character in length.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.ProvidedTypeMustInherit">
            <summary>
              Looks up a localized string similar to The provided type [{0}] must inherit from [{1}].
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.SpanPromptsMustContainExactlyOneInline">
            <summary>
              Looks up a localized string similar to Prompt representations may contain only a single child Inline element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.StringCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The provided string argument [{0}] cannot be empty.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.TrialLicenseMessageCaption">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements Trial License.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.TrialLicenseTraceMessage">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements trial license: {0} days remaining.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.TrialLicenseTraceMessage_Expired">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements trial license expired.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.TrialLicenseTraceMessage_GracePeriod">
            <summary>
              Looks up a localized string similar to Mindscape WPF Elements trial license expiring soon: {0} days remaining.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.UnknownElementType">
            <summary>
              Looks up a localized string similar to Unknown element type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Properties.Resources.UnsupportedPromptRepresentationType">
            <summary>
              Looks up a localized string similar to Prompt representation must be a Run, an InlineUIContainer or a Span containing exactly one of the previous items.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyGrid">
            <summary>
            A control for browsing and editing the properties of an object.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.InstallLicense(System.String)">
            <summary>
            Performs manual licensing for specialized deployment scenarios.
            </summary>
            <param name="licenseKey">A runtime license key.</param>
            <remarks>In normal deployment scenarios, the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> control is
            automatically licensed.  Install a license key manually only under advisement
            from Mindscape support.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.CollectionAddCommand">
            <summary>
            A command for adding an item to a collection.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.CollectionRemoveCommand">
            <summary>
            A command for removing an item from a collection.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.CollectionAddRequestedEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.PropertyGrid.CollectionAddRequested"/> routed event.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.AllowModifyCollectionsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.AllowModifyCollections"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.CursorKeyModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.CursorKeyMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.OnApplyTemplate">
            <summary>
            Called by the framework when a template is applied to the control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SelectedGridItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedGridItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SelectedGridItemChangedEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.PropertyGrid.SelectedGridItemChanged"/> event.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.IsToolBarVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.IsToolBarVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.DefaultMarginProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.DefaultMargin"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.CanDisplayReadOnlyPropertiesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.CanDisplayReadOnlyProperties"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.BuiltInEditorStylesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.BuiltInEditorStyles"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SelectedObjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObject"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SelectedObjectsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObjects"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.Refresh">
            <summary>
            Forces the grid to reload the selected object.  This method should not be
            called in normal use.  It should be called only if you have dynamically added
            or removed a property (for example via a type converter or an
            ICustomTypeDescriptor implementation) since the object was loaded.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.IsExpandedStatePersistentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.IsExpandedStatePersistent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.NodesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.Nodes"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.ItemsSource"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddNode(System.String,System.Object)">
            <summary>
            Adds a top-level node to the grid.  The node data is managed by the grid.
            </summary>
            <param name="caption">The caption or name of the node.</param>
            <param name="value">The initial value of the node.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
            <remarks>The user will be able to edit the node value using the default editor
            for the type of value.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddNode(System.String,System.Object,Mindscape.WpfElements.PropertyEditing.NodeEditor)">
            <summary>
            Adds a top-level node to the grid.  The node data is managed by the grid.
            </summary>
            <param name="caption">The caption or name of the node.</param>
            <param name="value">The initial value of the node.</param>
            <param name="inPlaceEditor">The editor to be used for editing the value.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
            <remarks>The user will be able to edit the node value using the editor specified by
            the inPlaceEditor parameter.  This overrides any type editors specified in <see cref="P:Mindscape.WpfElements.PropertyGrid.Editors"/>
            collection.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddNode(System.String,System.Object,System.Windows.DataTemplate)">
            <summary>
            Adds a top-level node to the grid.  The node data is managed by the grid.
            </summary>
            <param name="caption">The caption or name of the node.</param>
            <param name="value">The initial value of the node.</param>
            <param name="inPlaceEditorTemplate">A <see cref="T:System.Windows.DataTemplate"/> specifying the template
            to be used for presenting and editing the node value.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
            <remarks>The node value will be presented to the user using the data template specified.
            To support editing, the data template must accept user input and support two-way
            binding.  The property to which the data template should bind is called Value.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddNode(System.String,System.Object,System.Object)">
            <summary>
            Adds a top-level node to the grid.  The node data is managed by the grid.
            </summary>
            <param name="caption">The caption or name of the node.</param>
            <param name="value">The initial value of the node.</param>
            <param name="inPlaceEditorKey">A resource key for the <see cref="T:System.Windows.DataTemplate"/>
            to be used for presenting and editing the node value.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
            <remarks>The node value will be presented to the user using the data template specified.
            To support editing, the data template must accept user input and support two-way
            binding.  The property to which the data template should bind is called Value.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddPropertyNode(System.Object,System.String)">
            <summary>
            Adds a top-level node to the grid.  The node represents a property of an object
            that is not managed by the grid.
            </summary>
            <param name="source">The object whose property is to be added to the grid.</param>
            <param name="propertyName">The name of the property to be added to the grid.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.AddPropertyNode(System.Object,System.String,System.String)">
            <summary>
            Adds a top-level node to the grid.  The node represents a property of an object
            that is not managed by the grid.
            </summary>
            <param name="source">The object whose property is to be added to the grid.</param>
            <param name="propertyName">The name of the property to be added to the grid.</param>
            <param name="caption">The display name for the property.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> object added to the grid.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.RemoveNode(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Removes a top-level node from the grid.
            </summary>
            <param name="node">The node to remove from the grid.</param>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.BindingViewProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.BindingView"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.GroupingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.Grouping"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SortingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.Sorting"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.SortSubpropertiesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.SortSubproperties"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.PropertyNameTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.PropertyNameTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.PropertyNameToolTipTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.PropertyNameToolTipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.ExpanderModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.ExpanderMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyGrid.GroupExpanderModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyGrid.GroupExpanderMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.CollapseGroups">
            <summary>
            Collapses all the category groups in the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyGrid.ExpandGroups">
            <summary>
            Expand all the category groups in the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyGrid.CollectionAddRequested">
            <summary>
            Occurs when the user selects an "add new item to collection" button in the
            property grid user interface.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.AllowModifyCollections">
            <summary>
            Gets or sets whether the grid should display a user interface to allow the user to
            add or remove items from collections.
            This is a dependency property.
            </summary>
            <remarks>
            <para>Setting this property to false does <strong>not</strong> prevent users from
            editing the values in collections: it only prevents adding and removing items.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.AllowModifyCollectionsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.CursorKeyMode">
            <summary>
            Gets or sets how the grid handles cursor keys when typed into editors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.CursorKeyModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SelectedGridItem">
            <summary>
            Gets or sets the selected grid item.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.SelectedGridItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyGrid.SelectedGridItemChanged">
            <summary>
            Occurs when the user selects a new item in the property grid.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.IsToolBarVisible">
            <summary>
            Gets or sets whether the built-in toolbar should be displayed above the grid.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.IsToolBarVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.DefaultMargin">
            <summary>
            Gets or sets the default margin placed around editors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.DefaultMarginProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.DefaultMarginCompensationRequired">
            <summary>
            Gets whether or not default margin compensation is required.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.CanDisplayReadOnlyProperties">
            <summary>
            Gets or sets whether or not read only properties are displayed.
            The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.CanDisplayReadOnlyPropertiesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.EditorSelector">
            <summary>
            Gets the template selector used to create value editors.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.Editors">
            <summary>
            Gets the collection of custom editors for this PropertyGrid instance.
            </summary>
            <remarks>Add editors to this collection to define how to edit custom types or
            to customise the display of specific properties.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.EditorDecorations">
            <summary>
            Gets the collection of custom editor decorations for this PropertyGrid instance.
            </summary>
            <remarks>Add editor decorations to this collection to define decorations to be applied
            to editors.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.BuiltInEditorStyles">
            <summary>
            Gets or sets the styles applied to built-in editors.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.BuiltInEditorStylesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SelectedObject">
            <summary>
            Gets or sets the object for which the grid displays properties.  This is a dependency
            property.
            </summary>
            <remarks>
            <para>Setting this property clears any existing <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObjects"/> array.
            After setting this property, <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObjects"/> returns a one-element array
            containing the selected object.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.SelectedObjectProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SelectedObjects">
            <summary>
            Gets or sets the objects for which the grid displays properties.
            This is a dependency property.
            </summary>
            <remarks>
            <para>Setting this property clears any existing <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObject"/>.
            After setting this property, <see cref="P:Mindscape.WpfElements.PropertyGrid.SelectedObject"/> returns a <see cref="T:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper"/>.</para>
            <para>Modifications to the SelectedObjects list after it is assigned will be reflected
            in the grid only if the list implements INotifyCollectionChanged.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.SelectedObjectsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.NodeClearanceMode">
            <summary>
            Specifies how the grid handles internal node data.
            This is an advanced setting.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.IsExpandedStatePersistent">
            <summary>
            Gets or sets whether or not the expanded state of property nodes are persistent.
            When set to true, property nodes will maintain their expanded state when the SelectedObject property changes.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.IsExpandedStatePersistentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.Nodes">
            <summary>
            Gets or sets the set of top-level nodes in the grid.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.NodesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.ItemsSourceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.BindingView">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> representing the view state
            of the grid.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.BindingViewProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.Grouping">
            <summary>
            Gets or sets property grouping settings.
            This is a dependency property.
            </summary>
            <remarks>
            <para>This property supports only single-level grouping, as this is all that is usually required
            for the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.  If multi-level grouping is required, bypass this property and
            use the BindingView.DefaultView.GroupDescriptions collection instead.</para>
            <para>If both the BindingView.DefaultView.GroupDescriptions collection and the PropertyGrid.Grouping property
            are set, the last one to be set takes precedence.  If BindingView.DefaultView.GroupDescriptions is
            modified after PropertyGrid.Grouping has been set, PropertyGrid.Grouping continues to reflect its previous
            value (even though this value is ignored in favour of the collection).</para>
            <para>The <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGrouping"/> class provides implementations of common grouping strategies.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.GroupingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.Sorting">
            <summary>
            Gets or sets property sorting order.
            This is a dependency property.
            </summary>
            <remarks>
            <para>If both the BindingView.DefaultView.CustomSort property and the PropertyGrid.Sorting property
            are set, the last one to be set takes precedence.  If BindingView.DefaultView.CustomSort is
            modified after PropertyGrid.Sorting has been set, PropertyGrid.Sorting continues to reflect its previous
            value (even though this value is ignored).  Additionally, setting PropertyGrid.Sorting clears any
            previously set BindingView.DefaultView.SortDescriptions value.</para>
            <para>Changing this setting while the grid is displayed collapses any expanded properties.</para>
            <para>The <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertySorting"/> class provides implementations of common sorting strategies.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.SortingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SortSubproperties">
            <summary>
            Gets or sets whether the <see cref="P:Mindscape.WpfElements.PropertyGrid.Sorting"/> setting should be applied to subproperties.
            This is a dependency property.
            </summary>
            <remarks>
            <para>The default value is true.</para>
            <para>Changing this setting while the grid is displayed collapses any expanded properties.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.SortSubpropertiesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.PropertyNameTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display property names.
            This is a dependency property.
            </summary>
            <remarks>
            <para>The template is responsible for including suitable expand/collapse UI if
            required; this is necessary to support full replacement of the expand/collapse UI.
            The data template receives a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.PropertyNameTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.PropertyNameToolTipTemplate">
            <summary>
            Gets or sets the data template for tooltips shown when the user hovers over a
            property name.
            This is a dependency property.
            </summary>
            <remarks>
            <para>Tooltips are shown only if ToolTipService.IsEnabled is set on the grid.
            The data template receives a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.PropertyNameToolTipTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ExpanderMode">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.PropertyGrid.ExpanderMode"/> that specifies the inital expand/collapsed state of items in the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            The default is collapsed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.ExpanderModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.GroupExpanderMode">
            <summary>
            Gets or sets the initial expand/collapse state of the category groups. The default is expanded.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyGrid.GroupExpanderModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.BuiltInEditorStyleCollectionKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection"/> containing
            default styles for all built in controls.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.PropertyNameTemplateKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            presents property names.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SelectionTrackingStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Style"/> that
            tracks the current selection in templates based on a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListView"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ReadOnlyDisplayKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            presents non-editable values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.CollectionDisplayKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            presents collections.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.CollectionElementEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            presents collection elements.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SimpleTextEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits values as plain text.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.NonAutoUpdatingTextEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits values as plain text and updates the value only when it loses focus.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ListSelectEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits values by selecting them from a drop-down list or typing a value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ListSelectNoTextEntryEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits values by selecting them from a drop-down list and does not permit typing
            of arbitrary values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.RadioSelectEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits values by selecting them from a group of radio buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.CheckBoxEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits boolean values using a check box.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.SliderEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits numeric values using a slider.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.NumericUpDownEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits numeric values using a text box and a pair of up-down buttons.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.DateEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits dates using a calendar display.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.TimeSpanEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits duration values using a time span picker.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ColorEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits colors using a color picker.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.ManyEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits inconsistent values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.IntegerEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits integer values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyGrid.DoubleEditorKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.DataTemplate"/> that
            edits double values.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditor">
            <summary>
            Provides value editing services built into the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> control.
            </summary>
            <remarks>This class supports the implementation of the PropertyGrid control; it is not
            intended for use from user code.</remarks>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor">
            <summary>
            Provides value editing services for values accessed as properties on another object.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.Editor">
            <summary>
            Provides value editing services to a <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Editor.CanEdit(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            When overridden in a derived class, indicates whether the editor can edit the
            value of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>true if the editor can edit the value of this node; otherwise false.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.Editor.AllowExpandProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.AllowExpand"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.Editor.HostStyleProperty">
            <summary>
            Identifies the HostStyle attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Editor.SetHostStyle(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Sets the value of the HostStyle attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the attached property.</param>
            <param name="value">The property value to set.</param>
            <remarks>The HostStyle property is used by internal elements of the editor template.  User code
            should not set the HostStyle property directly.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Editor.GetHostStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the HostStyle attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the HostStyle attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Editor.BuildTemplate(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            When overridden in a derived class, constructs a <see cref="T:System.Windows.DataTemplate"/> which can
            be bound to the specified node in order to edit its value.
            </summary>
            <param name="node">The node to be edited.</param>
            <returns>A data template suitable for editing this node.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> which the editor uses to present or edit
            node values.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Editor.AllowExpand">
            <summary>
            Gets or sets whether the user should be allowed to expand a node edited by this.
            editor.  This is a dependency property.
            </summary>
            <remarks>
            <para>If false, the user cannot expand a node that is handled by this editor: all
            editing is done via the editor.  If true, the user can expand the node if it has
            subproperties: this allows the user to edit a record "one bit at a time" via the
            expansion or to edit it "as a whole" via this editor.  This is also useful for displaying
            a read-only summary even if all modifications must be done via subproperties.
            The default is false.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.Editor.AllowExpandProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.EditContextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.EditContext"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.BuildTemplate(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Constructs a <see cref="T:System.Windows.DataTemplate"/> which can be bound to the specified node
            to edit its value.
            </summary>
            <param name="node">The node for which an editor is required.</param>
            <returns>A data template for editing the node value.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.SetContentTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            When overridden in a derived class, sets the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"/>
            property of the specified <see cref="T:System.Windows.FrameworkElementFactory"/> to the required data template.
            </summary>
            <param name="factory">The FrameworkElementFactory on which the ContentTemplateProperty
            must be set.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.OnCustomizeTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Allows derived classes to customize the visual tree of the template constructed in 
            <see cref="M:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.BuildTemplate(Mindscape.WpfElements.PropertyEditing.Node)"/>, for example by setting up additional properties.
            </summary>
            <param name="factory">The FrameworkElementFactory that defines the template visual tree.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.EditContext">
            <summary>
            Gets or sets an object which is made available to the editor template
            through the EditContext binding.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.ObjectWrappingEditor.EditContextProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditor.#ctor(Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditor"/> class.
            </summary>
            <param name="builtInEditorStyles">The styles to be applied to built-in editors.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditor.CanEdit(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Indicates whether the editor can edit the value of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>true if the editor can edit the value of this node; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditor.GetEditSettings(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Gets the built-in editing behavior for the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.PropertyEditing.InPlaceEditing"/> describing the edit capabilities.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditor.SetContentTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Attaches the editor data template to the appropriate predefined template resource.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditor.OnCustomizeTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Propagates host style overrides to the data template visual tree.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyle">
            <summary>
            Supports styling of built-in editors.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyle.EditorKey">
            <summary>
            Gets or sets the key of the built-in editor to the style will be applied.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyle.Style">
            <summary>
            Gets or sets the style to be applied to the built-in editor.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection">
            <summary>
            Represents a collection of <see cref="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyle"/> objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection.FindStyle(System.Object)">
            <summary>
            Finds the <see cref="T:System.Windows.Style"/> associated with the specified editor.
            </summary>
            <param name="editorKey">The key identifying the editor to search for.</param>
            <returns>The Style associated with the editor key in this collection if there is one;
            otherwise null.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection.Include">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.PropertyEditing.BuiltInEditorStyleCollection"/> containing additional styles for this collection to use.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.CollectionAddRequestedEventArgs">
            <summary>
            Provides information about the <see cref="E:Mindscape.WpfElements.PropertyGrid.CollectionAddRequested"/> event of a
            <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.CollectionAddRequestedEventArgs.CollectionElementType">
            <summary>
            Gets the element type of the collection.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.CollectionAddRequestedEventArgs.Value">
            <summary>
            Gets or sets the value to be added to the collection.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.CollectionElement">
            <summary>
            A property grid entry representing an indexed property -- specifically an item in a list or
            dictionary.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.Node">
            <summary>
            Represents an entry in a <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Node.#ctor(System.Object,System.Reflection.PropertyInfo,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> class.
            </summary>
            <param name="source">The object whose property is being represented.</param>
            <param name="property">The property being represented.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Node.#ctor(System.Object,System.Reflection.PropertyInfo,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node},Mindscape.WpfElements.PropertyEditing.NodeEditor)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> class.
            </summary>
            <param name="source">The object whose property is being represented.</param>
            <param name="property">The property being represented.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
            <param name="inPlaceEditor">The editor to be used for this node.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.ChildFilter">
            <summary>
            Gets a callback for determining whether to show descendant nodes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Source">
            <summary>
            Gets the object whose property is represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Name">
            <summary>
            Gets the name of the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Property">
            <summary>
            Gets the metadata for the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.PropertyInfo">
            <summary>
            Gets the metadata for the property represented by this node.
            </summary>
            <remarks>It is recommended that you use <see cref="P:Mindscape.WpfElements.PropertyEditing.Node.Property"/> rather than PropertyInfo,
            as PropertyInfo is not supported in partial trust situations.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.DeclaringType">
            <summary>
            Gets the type which declares the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.HasOwnInPlaceEditor">
            <summary>
            Gets whether the node has an editor associated directly with it.
            </summary>
            <remarks>Most nodes use the editing services provided by the property grid, and are
            allocated an editor based on type and/or property name.  However, if an application
            explicitly adds a node to the grid, it can specify an editor for that node.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.InPlaceEditor">
            <summary>
            Gets the editor associated directly with this node, if there is one.
            </summary>
            <remarks>Most nodes use the editing services provided by the property grid, and are
            allocated an editor based on type and/or property name.  However, if an application
            explicitly adds a node to the grid, it can specify an editor for that node.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Parent">
            <summary>
            Gets the parent node of this node, if any.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Children">
            <summary>
            Gets the displayable children of this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.IndexedPropertyArguments">
            <summary>
            When overridden in a derived class, gets the index(es) of the instance of the property
            represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.CanWrite">
            <summary>
            When overridden in a derived class, gets whether the node value can be modified.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.HumanName">
            <summary>
            When overridden in a derived class, gets a display name for the node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Node.Value">
            <summary>
            When overridden in a derived class, gets the value of the property represented by
            this node.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.Node.PropertyChanged">
            <summary>
            Raised when a property changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.FromDictionary(System.Collections.IDictionary,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Creates <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> objects for each item in a dictionary.
            </summary>
            <param name="source">The dictionary.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> for each item in the dictionary.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.FromList(System.Collections.IList,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Creates <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> objects for each item in a list.
            </summary>
            <param name="source">The list.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> for each item in the list.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.GetCollectionElements(System.Object,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Creates <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> objects for each item in a collection.
            </summary>
            <param name="source">The source collection - a list or dictionary.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> for each item in the list.  If the source is not
            a list or dictionary, no CollectionElements are returned.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.#ctor(System.Object,Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations,System.Object,System.Boolean,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionElement"/> class.
            </summary>
            <param name="source">The object whose collection property is being represented.</param>
            <param name="typeOperations">The collection methods and properties for operating on this node.</param>
            <param name="index">The index or key in the collection of this element.</param>
            <param name="useIndexAsFullDisplayName">If true, the index alone is used as the display name;
            if false, the property name and index are combined to create a display name.  (The former is
            typically the best option for dictionary-type collections, where the keys may be meaningful
            in themselves; the latter is typically better for list-type collections, where the keys
            are plain integers.)</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.RemoveFromParentCollection">
            <summary>
            Removes the element represented by this node from the collection of
            which it is a part.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionElement.CanRemoveFromParentCollection">
            <summary>
            Determines whether the element represented by this node can be removed
            from the collection of which it is a part.
            </summary>
            <returns>true if the element can be removed from its parent collection;
            otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionElement.CanWrite">
            <summary>
            Gets whether the collection element can be modified.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionElement.Value">
            <summary>
            Gets the value of the collection element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionElement.PropertyType">
            <summary>
            Gets the type of the collection element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionElement.IndexedPropertyArguments">
            <summary>
            Gets the index(es) of the collection element.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionElement.HumanName">
            <summary>
            Gets a display name for the collection element.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations">
            <summary>
            Represents standard operations on a collection type.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations"/> class.
            </summary>
            <param name="type">The collection type.</param>
            <param name="itemProperty">The name of the property used to access items by index.</param>
            <param name="removalMethod">The name of the method used to remove items by index.</param>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations.Dictionary">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations"/> for the <see cref="T:System.Collections.IDictionary"/> type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations.List">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations"/> for the <see cref="T:System.Collections.IList"/> type.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations.ItemProperty">
            <summary>
            Gets the property for accessing items using their indexes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.CollectionTypeOperations.RemovalMethod">
            <summary>
            Gets the method for removing items using their indexes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EditorDecorator">
            <summary>
            A control which acts a placeholder for wrapping a decorating DataTemplate
            (represented by the ContentTemplate) around a "base" template known only at run time.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedNodeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedNode"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedTemplate">
            <summary>
            Gets or sets the template around which the decoration will be placed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedNode">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.PropertyEditing.Node"/> that represents the data item being edited.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.EditorDecorator.DecoratedNodeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor">
            <summary>
            A control for editing multiple instances of a property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ResetCommand">
            <summary>
            A command for initialising an inconsistent set of values.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ManyHolderProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ManyHolder"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>
            Receives events from the centralized event manager.
            </summary>
            <param name="managerType">The type of the WeakEventManager calling this method.</param>
            <param name="sender">Object that originated the event.</param>
            <param name="e">Event data.</param>
            <returns>true if the event was handled; otherwise false.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.IsConsistentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.IsConsistent"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ManyHolder">
            <summary>
            Gets or sets the value displayed in the editor.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ManyHolderProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.IsConsistent">
            <summary>
            Gets whether the held Many has a consistent value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.IsConsistentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ResetButtonContentKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the content of the "Reset" button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.ResetToolTipContentKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the tooltip of the "Reset" button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ManyEditor.InconsistentValuesTemplateKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the "multiple values" data template.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.TextBox">
            <summary>
            Represents a text box which automatically selects its content when the user clicks
            into the text box.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Adds class handling for the <see cref="E:System.Windows.UIElement.GotKeyboardFocus"/> event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Adds class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown"/> event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListView">
            <summary>
            A control with the expand/collapse functionality of a TreeView, but supporting
            multiple columns like a ListView.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetIsFillColumn(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsFillColumn attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the IsFillColumn attached property.</returns>
            <remarks>If you set the IsFillColumn attached property on a GridViewColumn,
            this column will resize itself to use up all space not allocated to other columns.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetIsFillColumn(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsFillColumn attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the attached property.</param>
            <param name="value">The property value to set.</param>
            <remarks>If you set the IsFillColumn attached property on a GridViewColumn,
            this column will resize itself to use up all space not allocated to other columns.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.IsFillColumnProperty">
            <summary>
            Identifies the IsFillColumn attached property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ResizeColumnMinWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ResizeColumnMinWidth"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetIsResizeColumn(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsResizeColumn attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the IsResizeColumn attached property.</returns>
            <remarks>If you set the IsResizeColumn attached property on a GridViewColumn,
            you can resize the column by dragging its right-hand border.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetIsResizeColumn(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsResizeColumn attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the attached property.</param>
            <param name="value">The property value to set.</param>
            <remarks>If you set the IsResizeColumn attached property on a GridViewColumn,
            you can resize the column by dragging its right-hand border.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.IsResizeColumnProperty">
            <summary>
            Identifies the IsResizeColumn attached property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.Columns"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetAllowColumnResizing(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the AllowColumnResizing attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the AllowColumnResizing attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetAllowColumnResizing(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the AllowColumnResizing attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.AllowColumnResizingProperty">
            <summary>
            Identifies the AllowColumnResizing attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetResizeColumnWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ResizeColumnWidth attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the ResizeColumnWidth attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetResizeColumnWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the value of the ResizeColumnWidth attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ResizeColumnWidthProperty">
            <summary>
            Identifies the ResizeColumnWidth attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetShowSubitemExpanders(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ShowSubitemExpanders attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the ShowSubitemExpanders attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetShowSubitemExpanders(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the ShowSubitemExpanders attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ShowSubitemExpandersProperty">
            <summary>
            Identifies the ShowSubitemExpanders attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetShowGroupExpanders(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ShowGroupExpanders attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the ShowGroupExpanders attached property.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.SetShowGroupExpanders(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the ShowGroupExpanders attached property for a given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The value to which to set the property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ShowGroupExpandersProperty">
            <summary>
            Identifies the ShowGroupExpanders attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListView"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the ItemsSource property changes.
            </summary>
            <param name="oldValue">The old items source.</param>
            <param name="newValue">The new items source.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.OnApplyTemplate">
            <summary>
            Called by the Windows Presentation Foundation infrastructure when
            a template is applied to the control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container.
            </summary>
            <param name="element">The container to prepare.</param>
            <param name="item">The item that will be hosted by the container.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ResizeColumnMinWidth">
            <summary>
            Gets or sets the minimum width of the resize column (the column
            whose IsResizeColumn property is set to true).
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ResizeColumnMinWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.Columns">
            <summary>
            Gets or sets the columns in the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListView"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ColumnsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListView.ExpandCollapseToggleStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the default <see cref="T:System.Windows.Style"/> of an
            expand/collapse toggle button.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem">
            <summary>
            Implements a selectable item in a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListView"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.GetContainerForItemOverride">
            <summary>
            Creates a new <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> to display a child item.
            </summary>
            <returns>A new TreeListViewItem.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/>.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>true if item is a TreeListViewItem; otherwise, false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container.
            </summary>
            <param name="element">The container to prepare.</param>
            <param name="item">The item that will be hosted by the container.</param>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.ExpandingEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.Expanding"/> routed event.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.CollapsingEvent">
            <summary>
            Identifies the <see cref="E:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.Collapsing"/> routed event.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> is expanded.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> is collapsed.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.Level">
            <summary>
            Gets the level of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> in the hierarchy.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.Expanding">
            <summary>
            Occurs when the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> is expanded after it is loaded.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem.Collapsing">
            <summary>
            Occurs when the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.TreeListViewItem"/> is collapsed after it is loaded.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar">
            <summary>
            A control which encapsulates common <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> view manipulation code.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.OnApplyTemplate">
            <summary>
            Called by the framework when a template is applied to the control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.ClearFilter">
            <summary>
            A command for clearing the filter in a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar"/>.
            </summary>
            <remarks>The default toolbar does not provide a UI for this command.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.ShowUnsorted">
            <summary>
            A command for removing all sorting from a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.ShowAlphaSorted">
            <summary>
            A command for sorting a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> alphabetically by property name.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.ShowCategorized">
            <summary>
            A command for sorting a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> by category.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.TargetProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.Target"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar"/> class.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.Target">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> whose view is controlled by the toolbar.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.TargetProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ViewCommandsToolBar.SearchLabelContentKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the content of the "Search" label.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.CursorKeyMode">
            <summary>
            Determines how the grid handles cursor keys when typed into editors.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.CursorKeyMode.Navigate">
            <summary>
            Cursor keys are intercepted by the grid and used to change the selection.
            This is the default.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.CursorKeyMode.PassToEditor">
            <summary>
            Cursor keys are passed to the editor.  The user may still use the cursor
            keys to change the selection, but only when the focus is on a property
            name rather than an editor.  Choose this option if you use editors that
            have special handling for cursor keys such as <see cref="T:Mindscape.WpfElements.SpinDecorator"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EditorCollection">
            <summary>
            A collection of <see cref="T:Mindscape.WpfElements.PropertyEditing.Editor"/> objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.EditorCollection"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorCollection.InsertItem(System.Int32,Mindscape.WpfElements.PropertyEditing.Editor)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EditorDecoration">
            <summary>
            Represents a decoration that can be applied to an editor to provide additional
            services independent of the value being edited.  For example, collection element
            editors are decorated with a button to delete the item from the collection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorDecoration.AppliesTo(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            When overridden in a derived class, gets whether the decorator should be applied
            to a node.
            </summary>
            <param name="node">The node for which to check whether the decorator applies.</param>
            <returns>true if the decorator should be applied to the node editor; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorDecoration.ApplyDecoratorTemplate(System.Windows.FrameworkElementFactory)">
            <summary>
            When overridden in a derived class, populates the decorator with a DataTemplate.
            </summary>
            <param name="decorator">The decorator whose template is to be set.</param>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.TemplateEditorDecoration">
            <summary>
            Represents an <see cref="T:Mindscape.WpfElements.PropertyEditing.EditorDecoration"/> where the decoration is specified
            as a DataTemplate
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.TemplateEditorDecoration.ApplyDecoratorTemplate(System.Windows.FrameworkElementFactory)">
            <summary>
            Populates the decorator with the <see cref="P:Mindscape.WpfElements.PropertyEditing.TemplateEditorDecoration.DecoratorTemplate"/>.
            </summary>
            <param name="decorator">The decorator whose template is to be set.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.TemplateEditorDecoration.DecoratorTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> of the decoration.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EditorDecorationCollection">
            <summary>
            A collection of <see cref="T:Mindscape.WpfElements.PropertyEditing.EditorDecoration"/> objects.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.IPropertyDescriptorWrapper">
            <summary>
            Represents an object that encapsulates a <see cref="P:Mindscape.WpfElements.PropertyEditing.IPropertyDescriptorWrapper.PropertyDescriptor"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.IPropertyDescriptorWrapper.PropertyDescriptor">
            <summary>
            Gets the encapsulated <see cref="P:Mindscape.WpfElements.PropertyEditing.IPropertyDescriptorWrapper.PropertyDescriptor"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayContext">
            <summary>
            Provides display context information for options in list-selection editors.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayContext.GetPropertyInfo(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the PropertyInfo attached property of the specified element.
            </summary>
            <param name="obj">The element from which to read the value.</param>
            <returns>The PropertyInfo associated with the specified element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayContext.SetPropertyInfo(System.Windows.DependencyObject,Mindscape.WpfElements.PropertyEditing.IPropertyInfo)">
            <summary>
            Sets the value of the PropertyInfo attached property of the specified element.
            </summary>
            <param name="obj">The element on which to set the value.</param>
            <param name="value">The PropertyInfo to be associated with the specified element.</param>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.ListSelectDisplayContext.PropertyInfoProperty">
            <summary>
            Identifies the PropertyInfo attached property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.Many">
            <summary>
            Represents a property that may have different values across the selected objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Many.Reset">
            <summary>
            Resets the property to a default value across all objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Many.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.PropertyEditing.Many.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property which is changing.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Many.OnPropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.PropertyEditing.Many.PropertyChanging"/> event.
            </summary>
            <param name="propertyName">The property which is changing.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.PropertyTypeName">
            <summary>
            Gets the (short) name of the data type of the property.
            </summary>
            <remarks>This property is equivalent to <see cref="P:Mindscape.WpfElements.PropertyEditing.Many.PropertyType"/>.Name and is provided
            as a helper for partial trust scenarios.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.PropertyType">
            <summary>
            Gets the data type of the property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.Values">
            <summary>
            Gets the values across the selected objects.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.PropertyName">
            <summary>
            Gets the name of the property that the values came from.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.RawValue">
            <summary>
            Gets the value (if available).  This value is meaningful only if
            <see cref="P:Mindscape.WpfElements.PropertyEditing.Many.IsConsistent"/> is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.IsConsistent">
            <summary>
            Gets a value indicating whether the <see cref="T:Mindscape.WpfElements.PropertyEditing.Many"/> contains
            consistent values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many.IsReadOnly">
            <summary>
            Gets whether the property value is read-only.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.Many.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.Many.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.Many`1">
            <summary>
            Represents a property that may have different values across the selected objects.
            </summary>
            <typeparam name="T">The static type of the property.</typeparam>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.Many`1.Reset">
            <summary>
            Resets the property to a default value across all objects.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many`1.RawValue">
            <summary>
            Gets the value (if available).  This value is meaningful only if
            <see cref="P:Mindscape.WpfElements.PropertyEditing.Many`1.IsConsistent"/> is true.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many`1.IsConsistent">
            <summary>
            Gets a value indicating whether the <see cref="T:Mindscape.WpfElements.PropertyEditing.Many"/> contains
            consistent values.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many`1.Value">
            <summary>
            Gets or sets the value of the property.  Getting the value is meaningful
            only when <see cref="P:Mindscape.WpfElements.PropertyEditing.Many`1.IsConsistent"/> is true.  Setting the value sets the
            property value on all objects in the <see cref="T:Mindscape.WpfElements.PropertyEditing.Many"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.Many`1.PropertyType">
            <summary>
            Gets the data type of the property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper">
            <summary>
            Represents multiple objects which are to be displayed in a combined view.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper"/> class.
            </summary>
            <param name="wrapped">The objects to be wrapped.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper"/> class.
            </summary>
            <param name="wrapped">The objects to be wrapped.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.Dispose">
            <summary>
            Releases all resources used by the object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.Objects">
            <summary>
            Gets the wrapped objects.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.MultipleObjectWrapper.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ExpanderMode">
            <summary>
            Specifies the initial state of expanders in a tree structure.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ExpanderMode.Expanded">
            <summary>
            All items are initially expanded.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.ExpanderMode.Collapsed">
            <summary>
            All items are initially collapsed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.NodeClearanceMode">
            <summary>
            Specifies how the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> control handles internal node data.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.NodeClearanceMode.Default">
            <summary>
            Nodes remain valid when no longer in use, but retain their
            internal data as long as the node is referenced.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WpfPropertyGrid.NodeClearanceMode.Aggressive">
            <summary>
            Nodes clear their internal data when no longer used.  Nodes
            may become invalid as soon as they are removed from the grid.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.NodeEditor">
            <summary>
            Provides value editing services for a single node instance.
            </summary>
            <remarks>Node editors are usually constructed for you by the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>;
            you should not need to use this class in your code.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.NodeEditor.CanEdit(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Indicates whether the editor can edit the value of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>true if the editor can edit the value of this node; otherwise false.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.StaticNodeEditor">
            <summary>
            Provides value editing services for a single node instance, using a static 
            <see cref="T:System.Windows.DataTemplate"/> defined in the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/> property.
            </summary>
            <remarks>Node editors are usually constructed for you by the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>;
            you should not need to use this class in your code.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.StaticNodeEditor.SetContentTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Attaches the editor data template to the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/>.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor">
            <summary>
            Provides value editing services for a single node instance, using an external
            <see cref="T:System.Windows.DataTemplate"/> referenced via a resource key.
            </summary>
            <remarks>Node editors are usually constructed for you by the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>;
            you should not need to use this class in your code.</remarks>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor.EditorTemplateKeyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor.EditorTemplateKey"/> dependency property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor.SetContentTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Attaches the editor data template to the data template identified by the <see cref="P:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor.EditorTemplateKey"/>.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.DynamicNodeEditor.EditorTemplateKey">
            <summary>
            Gets or sets the resource key of the data template.  This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapperFactory">
            <summary>
            Creates strongly-typed <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/> objects.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapperFactory.CreateWrapper(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean)">
            <summary>
            Creates a strongly-typed <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/>.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
            <returns>A wrapper which can be used to get or set the property value in a
            property-agnostic way.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapperFactory.CreateWrapper(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean,System.Object)">
            <summary>
            Creates a strongly-typed <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/>.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
            <param name="editContext">Additional user-specified information to be made available to 
            consumers of the ObjectWrapper.</param>
            <returns>A wrapper which can be used to get or set the property value in a
            property-agnostic way.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper">
            <summary>
            A wrapper class which allows the data binding infrastructure to get or set property values
            without knowing the name of the property being accessed.
            </summary>
            <remarks>This class supports the WPF data binding infrastructure and is not intended for
            use from user code.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.#ctor(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean,System.Object)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/> class.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
            <param name="editContext">Additional user-specified information to be made available to
            consumers of the ObjectWrapper.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.#ctor(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper"/> class.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.Editable">
            <summary>
            Gets whether the property can be modified.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.EditContext">
            <summary>
            Gets optional additional user-specified information specified in an editor declaration.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.UnderlyingObject">
            <summary>
            Gets the wrapped object.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.PropertyName">
            <summary>
            Gets the wrapped property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.Property">
            <summary>
            Gets the wrapped property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper.DataType">
            <summary>
            Gets the declared type of the value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1">
            <summary>
            A wrapper class which allows the data binding infrastructure to get or set property values
            without knowing the name of the property being accessed.
            </summary>
            <remarks>This class supports the WPF data binding infrastructure and is not intended for
            use from user code.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1.#ctor(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1"/> class.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1.#ctor(Mindscape.WpfElements.PropertyEditing.Node,System.Boolean,System.Object)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1"/> class.
            </summary>
            <param name="property">The property whose value is to be accessed through the wrapper.</param>
            <param name="editable">Whether the value can be modified.</param>
            <param name="editContext">Additional user-specified information to be made available to
            consumers of the ObjectWrapper.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1.Value">
            <summary>
            Gets or sets the value of the wrapped property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.ObjectWrapper`1.DataType">
            <summary>
            Gets the declared type of the value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2">
            <summary>
            Represents a dictionary that provides notifications when items get added, removed,
            or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.CollectionChanged"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>true if the collection contains an element with the key; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>true if the element was removed from the collection; otherwise false.  The
            method returns false if the item was not present in the collection.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When the method returns, contains the value associated with the
            specified key, if the key is found; otherwise, the default value for the type of the
            value parameter.</param>
            <returns>true if the dictionary contains an element with the specified key;
            otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the specified value to the collection with the specified key.
            </summary>
            <param name="item">A structure representing the key and value to add
            to the collection.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Clear">
            <summary>
            Removes all keys and values from the dictionary.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the collection contains a specific key and value.
            </summary>
            <param name="item">The key-value pair to locate in the collection.</param>
            <returns>true if the key-value pair is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array.
            </summary>
            <param name="array">The array to which to copy the elements of the collection.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> where copying starts.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes a key and value from the dictionary.
            </summary>
            <param name="item">The key and value to remove.</param>
            <returns>true if the element was removed from the collection; otherwise false.  The
            method returns false if the item was not present in the collection.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the dictionary.
            </summary>
            <returns>An enumerator for the dictionary.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the dictionary.
            </summary>
            <returns>An enumerator for the dictionary.</returns>
        </member>
        <member name="E:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, or changed, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Keys">
            <summary>
            Gets a collection containing the keys of the dictionary.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Values">
            <summary>
            Gets a collection containing the values in the dictionary.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Item(`0)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.Count">
            <summary>
            Gets the number of key-value pairs in the collection.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.IsFixedSize">
            <summary>
            Gets whether the dictionary is fixed size.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.IsSynchronized">
            <summary>
            Gets whether the dictionary is synchronized.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.ObservableDictionary`2.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the dictionary.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.PropertyNode">
            <summary>
            A property grid entry representing a non-indexed property on an object.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyNode.#ctor(System.Object,System.Reflection.PropertyInfo,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.PropertyNode"/> class.
            </summary>
            <param name="source">The object whose property is being represented.</param>
            <param name="property">The property being represented.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyNode.#ctor(System.Object,System.String,System.Reflection.PropertyInfo,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.PropertyNode"/> class.
            </summary>
            <param name="source">The object whose property is being represented.</param>
            <param name="caption">A human-readable display name for this property.</param>
            <param name="property">The property being represented.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyNode.#ctor(System.Object,System.String,System.Reflection.PropertyInfo,System.Predicate{Mindscape.WpfElements.PropertyEditing.Node},Mindscape.WpfElements.PropertyEditing.NodeEditor)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.PropertyNode"/> class.
            </summary>
            <param name="source">The object whose property is being represented.</param>
            <param name="caption">A human-readable display name for this property.</param>
            <param name="property">The property being represented.</param>
            <param name="inPlaceEditor">The editor to be used for this node.</param>
            <param name="childFilter">A callback for determining whether to show descendant nodes.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyNode.Value">
            <summary>
            Gets the value of the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyNode.CanWrite">
            <summary>
            Gets whether the property value can be modified.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyNode.PropertyType">
            <summary>
            Gets the type of the property represented by this node.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyNode.IndexedPropertyArguments">
            <summary>
            Gets the indexed property arguments.  For a <see cref="T:Mindscape.WpfElements.PropertyEditing.PropertyNode"/>, the property
            is always non-indexed and this always returns null.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyNode.HumanName">
            <summary>
            Gets a display name for the node.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.PropertyEditor">
            <summary>
            Provides value editing services for a named property of a specified type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.PropertyEditor.DeclaringTypeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.DeclaringType"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.PropertyEditor.PropertyNameProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.PropertyName"/> dependency property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyEditor.CanEdit(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Indicates whether the editor can edit the value of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>true if the editor can edit the value of this node; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyEditor.SetContentTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Attaches the editor data template to the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/>.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.PropertyEditor.OnCustomizeTemplate(System.Windows.FrameworkElementFactory,Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Propagates the <see cref="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.Style"/> of the <see cref="T:Mindscape.WpfElements.PropertyEditing.PropertyEditor"/> object to the
            data template visual tree.
            </summary>
            <param name="factory">The FrameworkElementFactory representing the data template under construction.</param>
            <param name="node">The node which the template will edit.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.DeclaringType">
            <summary>
            Gets or sets the type on which the property is declared.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.PropertyEditor.DeclaringTypeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.PropertyName">
            <summary>
            Gets or sets the property handled by this editor.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.PropertyEditor.PropertyNameProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.PropertyEditor.Style">
            <summary>
            Gets or sets the editor style.  This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:System.Windows.FrameworkElement.StyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView">
            <summary>
            Manages view state for the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView.#ctor(System.Collections.ObjectModel.ObservableCollection{Mindscape.WpfElements.PropertyEditing.Node})">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> class.
            </summary>
            <param name="properties">The set of nodes of the <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView.DefaultView">
            <summary>
            Gets the default view of this collection.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow">
            <summary>
            Contains view state for a single row of a <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow.#ctor(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/> class.
            </summary>
            <param name="node">The node displayed on this row.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow.Node">
            <summary>
            Gets the node displayed on this row.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow.IsLeaf">
            <summary>
            Gets whether this row is a leaf node (i.e. has no children).
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow.Children">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridBindingView"/> of the children of the node
            displayed on this row.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow.PropertyChanged">
            <summary>
            Raised when a property changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGrouping">
            <summary>
            Contains standard property grouping strategies.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertyGrouping.ByCategory">
            <summary>
            Gets a GroupDescription which groups properties by their Category attribute.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.PropertySorting">
            <summary>
            Contains standard property sorting strategies.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.PropertySorting.ByHumanName">
            <summary>
            Gets an IComparer which sorts properties by their display names.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectedGridItemChanged event of a
            <see cref="T:Mindscape.WpfElements.PropertyGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventArgs">
            <summary>
            Provides data for the SelectedGridItemChanged event of the <see cref="T:Mindscape.WpfElements.PropertyGrid"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventArgs.#ctor(Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow,Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventArgs"/> type.
            </summary>
            <param name="oldSelection">The previously selected <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.</param>
            <param name="newSelection">The newly selected <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventArgs.NewSelection">
            <summary>
            Gets the newly selected <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.SelectedGridItemChangedEventArgs.OldSelection">
            <summary>
            Gets the previously selected <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.PropertyGridRow"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.TypeEditor">
            <summary>
            Provides a value editing service for all values of a given type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.TypeEditor.EditedTypeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.TypeEditor.EditedType"/> dependency property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.TypeEditor.TemplateBindingModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PropertyEditing.TypeEditor.TemplateBindingMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.TypeEditor.CanEdit(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Indicates whether the editor can edit the value of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>true if the editor can edit the value of this node; otherwise false.</returns>
            <remarks>A <see cref="T:Mindscape.WpfElements.PropertyEditing.TypeEditor"/> will attempt to edit any node whose declared 
            <see cref="P:Mindscape.WpfElements.PropertyEditing.Node.PropertyType"/> is compatible with its <see cref="P:Mindscape.WpfElements.PropertyEditing.TypeEditor.EditedType"/>.  To prevent
            a TypeEditor from claiming derived types, specify a more specific TypeEditor earlier in the
            <see cref="P:Mindscape.WpfElements.PropertyGrid.Editors"/> collection.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.TypeEditor.BuildTemplate(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Constructs a <see cref="T:System.Windows.DataTemplate"/> which can be bound to the specified node
            to edit its value.
            </summary>
            <param name="node">The node for which an editor is required.</param>
            <returns>A data template for editing the node value.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.TypeEditor.EditedType">
            <summary>
            The type of value that this editor can edit.  This is a dependency property.
            </summary>
            <remarks>
            <para>The object to which the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/> will be bound is of
            this type; therefore the template can reference member properties of this type without
            qualification.</para>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.TypeEditor.EditedTypeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.TypeEditor.TemplateBindingMode">
            <summary>
            Gets or sets the way in which the <see cref="P:Mindscape.WpfElements.PropertyEditing.Editor.EditorTemplate"/> is bound to the
            property value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PropertyEditing.TypeEditor.TemplateBindingModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.TypeEditorTemplateBindingMode">
            <summary>
            Specifies whether a <see cref="T:Mindscape.WpfElements.PropertyEditing.TypeEditor"/> acts on a property reference (appropriate
            for reference types) or on a value (appropriate for value types).  This is normally
            inferred by the editor according to the edited type, but may be overridden if required.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.TypeEditorTemplateBindingMode.Default">
            <summary>
            The TypeEditor infers how to act on the property depending on whether it is a
            reference or a value type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.TypeEditorTemplateBindingMode.Reference">
            <summary>
            The TypeEditor considers properties of the edited type to be references.  The
            template binds directly to properties of the edited property value.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PropertyEditing.TypeEditorTemplateBindingMode.WrappedValue">
            <summary>
            The TypeEditor considers properties of the edited type to be values.  The
            template binds to a pseudo-property named Value.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.EditorSelector">
            <summary>
            Selects an editor for a value.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorSelector.#ctor(Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.EditorSelector"/> class.
            </summary>
            <param name="extensions">The <see cref="T:Mindscape.WpfElements.PropertyEditing.IExtendInPlaceEditors"/> which supplies additional
            editors for specific values or types.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns a <see cref="T:System.Windows.DataTemplate"/> suitable for editing the specified item.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>The <see cref="T:System.Windows.DataTemplate"/> to be used to present and edit the item, if one
            was found; otherwise null.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorSelector.GetEditSettings(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Gets the editing capabilities available to the <see cref="T:Mindscape.WpfElements.PropertyEditing.EditorSelector"/> for the 
            specified node.
            </summary>
            <param name="node">The node for which editing information is being requested.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.PropertyEditing.InPlaceEditing"/> describing the edit capabilities.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.EditorSelector.GetEditor(Mindscape.WpfElements.PropertyEditing.Node)">
            <summary>
            Gets an <see cref="T:Mindscape.WpfElements.PropertyEditing.Editor"/> for the specified node.  This is used to determine 
            a <see cref="T:System.Windows.DataTemplate"/> for presentation and editing of the node value.
            </summary>
            <param name="node">The node for which an editor is being requested.</param>
            <returns>An editor capable of providing a data template for the node value.</returns>
            <remarks>If no in-place editor is available, this method returns an "editor" which will 
            render the value using a read-only text block.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.EditorSelector.ExtendingEditors">
            <summary>
            Iterates the list of additional editors.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PropertyEditing.InPlaceEditing">
            <summary>
            Describes the in-place editing capability available in a <see cref="T:Mindscape.WpfElements.PropertyGrid"/> for a node.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PropertyEditing.InPlaceEditing.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.PropertyEditing.InPlaceEditing"/> class.
            </summary>
            <param name="canEditInPlace">Indicates whether an in-place editor is available.</param>
            <param name="allowExpand">Indicates whether the grid should show the node as expandable.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.InPlaceEditing.CanEditInPlace">
            <summary>
            Gets whether an in-place editor is available.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PropertyEditing.InPlaceEditing.AllowExpand">
            <summary>
            Gets whether the grid should show the node as expandable.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ProportionalStackPanel">
            <summary>
            Arranges child elements into a single line and sizes them according to requested
            proportions.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ProportionalStackPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of the control.
            </summary>
            <param name="constraint">An upper limit size that should not be exceeded.</param>
            <returns>The desired size of the element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ProportionalStackPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the element.
            </summary>
            <param name="arrangeSize">The size that this element should use to arrange its
            child elements.</param>
            <returns>The arranged size of this element and its children.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ProportionalStackPanel.GetProportion(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Proportion attached property for a specified element.
            </summary>
            <param name="obj">The element from which the property value is read.</param>
            <returns>The property value for the element.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ProportionalStackPanel.SetProportion(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the value of the Proportion attached property for a specified element.
            </summary>
            <param name="obj">The element on which the property value is set.</param>
            <param name="value">The value to which the property is set.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ProportionalStackPanel.ProportionProperty">
            <summary>
            Gets or sets a value that indicates the proportional size of a child element
            within a <see cref="T:Mindscape.WpfElements.ProportionalStackPanel"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RadialGauge">
            <summary>
            A radial guage which uses a needle to point to the current value
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RadialGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RadialGauge"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RadialGauge.OnDisplayedValueChanged">
            <summary>
            Called when the displayed value changes during animation.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RadialGauge.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RadialGauge.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the minimum value changes.
            </summary>
            <param name="oldMinimum">The old minimum.</param>
            <param name="newMinimum">The new minimum.</param>
        </member>
        <member name="M:Mindscape.WpfElements.RadialGauge.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the maximum value changes.
            </summary>
            <param name="oldMaximum">The old maximum.</param>
            <param name="newMaximum">The new maximum.</param>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.MajorTickMarkStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.MajorTickMarkStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.MajorTickSpacingProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.MajorTickSpacing"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.ArcVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.ArcVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.MajorTickMarkVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.MajorTickMarkVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.SizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.Size"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.StartAngleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.StartAngle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RadialGauge.SweepAngleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RadialGauge.SweepAngle"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.MajorTickMarkStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> for displaying major tick marks. This is mainly used to set the size and color of the tick marks.
            Tick marks are <see cref="T:System.Windows.Controls.Border"/> objects.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.MajorTickMarkStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.MajorTickSpacing">
            <summary>
            Gets or sets the logical spacing between major tick marks and labels. When this property is set to 0, the logical spacing will be
            calculated automatically. The default is 0.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.MajorTickSpacingProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.ArcVisibility">
            <summary>
            Gets or sets the visibility of the arc. The default is visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.ArcVisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.MajorTickMarkVisibility">
            <summary>
            Gets or sets the visibility of the major tick marks. The default is collapsed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.MajorTickMarkVisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.Size">
            <summary>
            Gets the size of the <see cref="T:Mindscape.WpfElements.RadialGauge"/>. This can be used for both the width and the height.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.SizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.StartAngle">
            <summary>
            Gets or sets the angle where the first label is placed. A value of 0 will put the first label at the top of the gauge.
            Larger values move around the gauge in a clockwise direction. The angle is in degrees.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.StartAngleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RadialGauge.SweepAngle">
            <summary>
            Gets or sets the angle between the first and last labels. Labels are positioned in a clockwise direction starting from the StartAngle.
            The SweepAngle is in degrees.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RadialGauge.SweepAngleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.RangeConstraintMode">
            <summary>
            Specifies when a numeric text box enforces range (minimum
            and maximum) constraints.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RangeConstraintMode.Always">
            <summary>
            Range constraints are enforced at all times.  The user is not permitted
            to edit the value in a way that would take it out of range.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RangeConstraintMode.OnLostFocus">
            <summary>
            Range constraints are not enforced while the user is editing the text
            box.  When the text box loses focus, if the value is below
            the minimum, it is reset to the minimum, and if value is
            above the maximum, it is reset to the maximum.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RangeConstraintMode.OnLostFocusOrReturn">
            <summary>
            Range constraints are not enforced while the user is editing the text
            box, unless the user presses the Return key.  When the text box loses focus
            or the user presses the Return key, if the value is below
            the minimum, it is reset to the minimum, and if the value is
            above the maximum, it is reset to the maximum.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ClipToElement">
            <summary>
            An attached behavior for clipping a <see cref="T:System.Windows.FrameworkElement"/> by the relative bounds of another <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ClipToElement.GetClipToElement(System.Windows.DependencyObject)">
            <summary>
            Gets the ClipToElement property value for the given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> to get the property value from.</param>
            <returns>The <see cref="T:System.Windows.FrameworkElement"/> to use as the clipping source.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ClipToElement.SetClipToElement(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the ClipToElement property value for the given <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> to set the property value.</param>
            <param name="clipToBounds">The <see cref="T:System.Windows.FrameworkElement"/> to use as the clipping source.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ClipToElement.ClipToElementProperty">
            <summary>
            Identifies the ClipToElement attached property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Gallery">
            <summary>
            A control for displaying a categorized list of items that the user can select from.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Gallery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Gallery"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Gallery.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel moves over this control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Gallery.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the ItemsSource property changes.
            </summary>
            <param name="oldValue">The old items source.</param>
            <param name="newValue">The new items source.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Gallery.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Gallery.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.ActualItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.ActualItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.ActualItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.ActualItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.ItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.ItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.ItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.ItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.MinColumnCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.MinColumnCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.MaxColumnCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.MaxColumnCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.IsWithinPopupProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.IsWithinPopup"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.GalleryItemsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.GalleryItems"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Gallery.SelectedValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Gallery.SelectedValue"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.ActualItemWidth">
            <summary>
            Gets the actual width of items displayed in this <see cref="T:Mindscape.WpfElements.Gallery"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.ActualItemWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.ActualItemHeight">
            <summary>
            Gets the actual height of items displayed in this <see cref="T:Mindscape.WpfElements.Gallery"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.ActualItemHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.ItemWidth">
            <summary>
            Gets or sets the desired width of items displayed in this <see cref="T:Mindscape.WpfElements.Gallery"/>.
            A value of Double.NaN will cause the <see cref="T:Mindscape.WpfElements.Gallery"/> to calculate the best item width.
            The default is Double.NaN.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.ItemWidthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.ItemHeight">
            <summary>
            Gets or sets the desired height of items displayed in this <see cref="T:Mindscape.WpfElements.Gallery"/>.
            A value of Double.NaN will cause the <see cref="T:Mindscape.WpfElements.Gallery"/> to calculate the best item height.
            The default is Double.NaN.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.ItemHeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.MinColumnCount">
            <summary>
            Gets or sets the minimum number of columns this <see cref="T:Mindscape.WpfElements.Gallery"/> will use to arrange the items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.MinColumnCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.MaxColumnCount">
            <summary>
            Gets or sets the maximum number of columns this <see cref="T:Mindscape.WpfElements.Gallery"/> will use to arrange the items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.MaxColumnCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.IsWithinPopup">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.Gallery"/> is within a <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.IsWithinPopupProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.GalleryItems">
            <summary>
            Gets the gallery items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.GalleryItemsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Gallery.SelectedValue">
            <summary>
            Gets or sets the selected item value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Gallery.SelectedValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.GalleryGroup">
            <summary>
            Represents a group of items within a <see cref="P:Mindscape.WpfElements.GalleryGroup.Gallery"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryGroup.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryGroup.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryGroup.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="T:Mindscape.WpfElements.GalleryItem">
            <summary>
            Represents an item displayed by a <see cref="T:Mindscape.WpfElements.Gallery"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed over this control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse moves over this control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released over this control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when this control loses mouse capture.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.GalleryItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.GalleryItem.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.GalleryItem.IsPressedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.GalleryItem.IsPressed"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.GalleryItem.IsSelected">
            <summary>
            Gets or sets whether or not this <see cref="T:Mindscape.WpfElements.GalleryItem"/> is currently selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.GalleryItem.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.GalleryItem.IsPressed">
            <summary>
            Gets whether or not the left mouse button is pressed over this <see cref="T:Mindscape.WpfElements.GalleryItem"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.GalleryItem.IsPressedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.GalleryItemsPresenter">
            <summary>
            Displays items within a <see cref="T:Mindscape.WpfElements.Gallery"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItemsPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItemsPresenter.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryItemsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="T:Mindscape.WpfElements.PopupMenu">
            <summary>
            Hosts a menu system within a <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.PopupMenu"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenu.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse moves over this <see cref="T:Mindscape.WpfElements.PopupMenu"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenu.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Clears the given element.
            </summary>
            <param name="element">The element to clear.</param>
            <param name="item">The item that the given element currently displays.</param>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:Mindscape.WpfElements.PopupMenu.MenuItemStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Controls.MenuItem"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PopupResizer">
            <summary>
            A thumb used to resize popups.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PopupResizer.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizer.ResizeModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PopupResizer.ResizeMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizer.PositionProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.PopupResizer.Position"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.PopupResizer.ResizeMode">
            <summary>
            Gets or sets the resize mode of this <see cref="T:Mindscape.WpfElements.PopupResizer"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PopupResizer.ResizeModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.PopupResizer.Position">
            <summary>
            Gets the position of this <see cref="T:Mindscape.WpfElements.PopupResizer"/> within the popup.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.PopupResizer.PositionProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.Ribbon">
            <summary>
            A control for exposing application commands to the user in a way that is easy to discover and navigate.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when items are added or removed from this <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.GetLargeIcon(System.Windows.DependencyObject)">
            <summary>
            Gets the large icon of the given control.
            </summary>
            <param name="obj">The control to get the large icon from.</param>
            <returns>The large icon of the given control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.SetLargeIcon(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the large icon of the given control.
            </summary>
            <param name="obj">The control to set the large icon.</param>
            <param name="value">The large icon.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Ribbon.LargeIconProperty">
            <summary>
            Identifies the LargeIcon attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.GetSmallIcon(System.Windows.DependencyObject)">
            <summary>
            Gets the small icon of the given control.
            </summary>
            <param name="obj">The control to get the small icon from.</param>
            <returns>The small icon of the given control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.SetSmallIcon(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the small icon of the given control.
            </summary>
            <param name="obj">The control to set the small icon.</param>
            <param name="value">The small icon.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Ribbon.SmallIconProperty">
            <summary>
            IDentifies the SmallIcon attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.GetEditorSize(System.Windows.DependencyObject)">
            <summary>
            Gets the current <see cref="T:Mindscape.WpfElements.RibbonEditorSize"/> of the given control.
            </summary>
            <param name="obj">The control to get the <see cref="T:Mindscape.WpfElements.RibbonEditorSize"/> from.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.RibbonEditorSize"/> of the given control.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.Ribbon.EditorSizeProperty">
            <summary>
            Identifies the EditorSize attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.GetEditorHeader(System.Windows.DependencyObject)">
            <summary>
            Gets the header of the given control.
            </summary>
            <param name="obj">The control to get the header from.</param>
            <returns>The header of the given control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.SetEditorHeader(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the header of the given control.
            </summary>
            <param name="obj">The control to set the header.</param>
            <param name="value">The header.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Ribbon.EditorHeaderProperty">
            <summary>
            Identifies the EditorHeader attached property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.GetEditorWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the width of the given control.
            </summary>
            <param name="obj">The control to get the width from.</param>
            <returns>The width of the given control.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Ribbon.SetEditorWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the width of the given control.
            </summary>
            <param name="obj">The control to set the width.</param>
            <param name="value">The width.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Ribbon.EditorWidthProperty">
            <summary>
            Identifies the EditorWidth attached property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.ButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.Button"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.ToggleButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.SplitButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:Mindscape.WpfElements.SplitButton"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.NumericUpDownStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:Mindscape.WpfElements.NumericUpDown"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.IntegerUpDownStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:Mindscape.WpfElements.IntegerUpDown"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.ComboBoxStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.ComboBox"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.CheckBoxStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.CheckBox"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.DropDownColorPickerStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:Mindscape.WpfElements.DropDownColorPicker"/> controls within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.TextBlockStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.TextBlock"/> elements within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Ribbon.SeparatorStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the style applied to <see cref="T:System.Windows.Controls.Separator"/> elements within a <see cref="T:Mindscape.WpfElements.Ribbon"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RibbonGroup">
            <summary>
            A headered group of controls within a <see cref="T:Mindscape.WpfElements.RibbonTab"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonGroup.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonGroup.RibbonGroupCommandProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RibbonGroup.RibbonGroupCommand"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonGroup.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RibbonGroup.IsExpanded"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonGroup.CollapsedIconProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RibbonGroup.CollapsedIcon"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RibbonGroup.RibbonGroupCommand">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Input.ICommand"/> that will be executed by the ribbon group button.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RibbonGroup.RibbonGroupCommandProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RibbonGroup.IsExpanded">
            <summary>
            Gets whether or not this <see cref="T:Mindscape.WpfElements.RibbonGroup"/> is expanded.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RibbonGroup.IsExpandedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RibbonGroup.CollapsedIcon">
            <summary>
            Gets or sets the icon displayed when this <see cref="T:Mindscape.WpfElements.RibbonGroup"/> is collapsed.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RibbonGroup.CollapsedIconProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.RibbonTab">
            <summary>
            A tab displayed within a <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonTab.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RibbonTab.IsSelected"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonTab.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is pressed over this <see cref="T:Mindscape.WpfElements.RibbonTab"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.RibbonTab.IsSelected">
            <summary>
            Gets or sets whether or not this tab is selected.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RibbonTab.IsSelectedProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.DropDownContentConverter">
            <summary>
            A converter for splitting a string into 1 or 2 parts for display in a collapsed dropdown header within a <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownContentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string into either the top or bottom string to be displayed in a collapsed dropdown header.
            </summary>
            <param name="value">The string value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DropDownContentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This conversion direction is not implemented by this converter.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownContentConverter.IsTop">
            <summary>
            Gets or sets whether this converter instance returns the top content or not.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DropDownContentConverter.IncludeFinalSpace">
            <summary>
            Gets or sets whether a space is appended to the bottom content.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ObjectToIconConverter">
            <summary>
            Converts an object into an icon. If the object is a string, it is used as the source of an image.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToIconConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an object into an icon. If the object is a string, it is used as the source of an image.
            Otherwise the object is returned.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>The converted icon.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToIconConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This conversion direction is not implemented by this converter.
            </summary>
            <param name="value">The value produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>This conversion direction is not implemented by this converter.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.ObjectToIconTypeConverter">
            <summary>
            Converts an object into an icon. If the object is a string, it is used as the source of an image.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ObjectToIconTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts an object into an icon. If the object is a string, it is used as the source of an image.
            Otherwise the object is returned.
            </summary>
            <param name="context">The context of the conversion.</param>
            <param name="culture">The culture to use in the conversion.</param>
            <param name="value">The value to convert.</param>
            <returns>The converted icon.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.GalleryCommands">
            <summary>
            <see cref="T:Mindscape.WpfElements.Gallery"/> commands.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.GalleryCommands.NavigateUpCommand">
            <summary>
            Navigates up one row in a <see cref="T:Mindscape.WpfElements.Gallery"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.GalleryCommands.NavigateDownCommand">
            <summary>
            Navigates down one row in a <see cref="T:Mindscape.WpfElements.Gallery"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PopupResizeMode">
            <summary>
            Specifies the resize more of a <see cref="T:Mindscape.WpfElements.PopupResizer"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizeMode.Corner">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is placed in a corner
            and is used to resize both the width and height of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizeMode.Edge">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is placed on the top or bottom edge
            and is used to resize only the eight of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.PopupResizerPosition">
            <summary>
            Specifies the position of a <see cref="T:Mindscape.WpfElements.PopupResizer"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.TopLeft">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is in the top left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.TopRight">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is in the top right corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.BottomLeft">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is in the bottom left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.BottomRight">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is in the bottom right corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.Top">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is at the top edge of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.PopupResizerPosition.Bottom">
            <summary>
            The <see cref="T:Mindscape.WpfElements.PopupResizer"/> is at the bottom edge of the <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RibbonEditorSize">
            <summary>
            Specifies the size identifier of an editor within a <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonEditorSize.Small">
            <summary>
            The editor is small - it only displays what it needs to.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonEditorSize.Medium">
            <summary>
            The editor is medium - it still uses the small icon, but displays addtional elements such as the header.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RibbonEditorSize.Large">
            <summary>
            The editor is large - it uses the large icon and fills the height of the <see cref="T:Mindscape.WpfElements.Ribbon"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.GalleryPanel">
            <summary>
            A panel that provides layout logic for items within an in-Ribbon <see cref="T:Mindscape.WpfElements.Gallery"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.GalleryPanel"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the elements within this <see cref="T:Mindscape.WpfElements.GalleryPanel"/> and returns the desired size.
            </summary>
            <param name="availableSize">The available size of this <see cref="T:Mindscape.WpfElements.GalleryPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.GalleryPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GalleryPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the elements within this <see cref="T:Mindscape.WpfElements.GalleryPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.GalleryPanel"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.PopupMenuPanel">
            <summary>
            A panel that provides layout logic for items within a <see cref="T:Mindscape.WpfElements.PopupMenu"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenuPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the elements within this <see cref="T:Mindscape.WpfElements.PopupMenuPanel"/> and returns the desirted size.
            </summary>
            <param name="availableSize">The available size of this <see cref="T:Mindscape.WpfElements.PopupMenuPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.PopupMenuPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.PopupMenuPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the elements within this <see cref="T:Mindscape.WpfElements.PopupMenuPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.PopupMenuPanel"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.RibbonGroupPanel">
            <summary>
            A panel that provides layout logic for items within a <see cref="T:Mindscape.WpfElements.RibbonGroup"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonGroupPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the elements within this <see cref="T:Mindscape.WpfElements.RibbonGroupPanel"/> and returns the desired size.
            </summary>
            <param name="availableSize">The available size of this <see cref="T:Mindscape.WpfElements.RibbonGroupPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.RibbonGroupPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonGroupPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the elements within this <see cref="T:Mindscape.WpfElements.RibbonGroupPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.RibbonGroupPanel"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.RibbonTabPanel">
            <summary>
            A panel that provides layout logic for items within a <see cref="T:Mindscape.WpfElements.RibbonTab"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonTabPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the items within this <see cref="T:Mindscape.WpfElements.RibbonTabPanel"/> and returns the desired size.
            </summary>
            <param name="availableSize">The available size of this <see cref="T:Mindscape.WpfElements.RibbonTabPanel"/>.</param>
            <returns>The desired size of this <see cref="T:Mindscape.WpfElements.RibbonTabPanel"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RibbonTabPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the items within this <see cref="T:Mindscape.WpfElements.RibbonTabPanel"/> and returns the final size.
            </summary>
            <param name="finalSize">The available size for arranging the elements.</param>
            <returns>The final size of this <see cref="T:Mindscape.WpfElements.RibbonTabPanel"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.RichTextToolBar">
            <summary>
            Provides a user interface for a <see cref="P:Mindscape.WpfElements.RichTextToolBar.RichTextBox"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RichTextToolBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RichTextToolBar"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.RichTextBoxProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.RichTextBox"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentTextAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontSizeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontSize"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontFamily"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentForegroundProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentForeground"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentBackground"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontWeightProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontWeight"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.CurrentTextDecorationsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.CurrentTextDecorations"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextToolBar.FontSelectorDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RichTextToolBar.FontSelectorDisplayMode"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RichTextToolBar.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.RichTextToolBar.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.RichTextBox">
            <summary>
            Gets or sets the RichTextBox linked to this <see cref="T:Mindscape.WpfElements.RichTextToolBar"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.RichTextBoxProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentTextAlignment">
            <summary>
            Gets or sets the TextAlignment of the selected text. If the different parts of the selected text have
            different alignments, then the value of this property will be null.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentTextAlignmentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontSize">
            <summary>
            Gets or sets the font size of the selected text. Setting this property will apply a font size
            to the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontSizeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontFamily">
            <summary>
            Gets or sets the FontFamily of the selected text. Setting this property will apply a FontFamily
            to the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontFamilyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentForeground">
            <summary>
            Gets or sets the foreground brush of the selected text. Setting this property will apply a
            foreground brush to the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentForegroundProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentBackground">
            <summary>
            Gets or sets the background brush of the selected text. Setting this property will apply a
            background brush to the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentBackgroundProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontWeight">
            <summary>
            Gets or sets the font weight of the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontWeightProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentFontStyle">
            <summary>
            Gets or sets the font style of the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentFontStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.CurrentTextDecorations">
            <summary>
            Gets or sets the text decorartions of the selected text.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.CurrentTextDecorationsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.FontSelectorDisplayMode">
            <summary>
            Gets or sets how font names should be displayed in the font selector.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RichTextToolBar.FontSelectorDisplayModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.FontSizes">
            <summary>
            Gets or sets a list of font sizes available to the user.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.FontFamilies">
            <summary>
            Gets or sets a list of font families available to the user.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.ForegroundPalette">
            <summary>
            Gets or sets the foreground color palette.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RichTextToolBar.BackgroundPalette">
            <summary>
            Gets or sets the background color palette.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.RichTextToolBar.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.FontSelectorDisplayMode">
            <summary>
            Specifies how font names should be displayed in the font selector of
            a <see cref="T:Mindscape.WpfElements.RichTextToolBar"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.FontSelectorDisplayMode.Preview">
            <summary>
            Display each font name using that font itself.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.FontSelectorDisplayMode.Plain">
            <summary>
            Display the font name using the default font.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RichTextCommands">
            <summary>
            Contains commands used with the <see cref="T:Mindscape.WpfElements.RichTextToolBar"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ToggleFontWeight">
            <summary>
            A command for changing the font weight of the selected text.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ToggleFontStyle">
            <summary>
            A command for changing the font style of the selected text.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ToggleTextDecorations">
            <summary>
            A command for changing the text decorations of the selected text.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ChangeTextAlignment">
            <summary>
            A command for changing the text alignment of the selected text.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ApplyForegroundColor">
            <summary>
            A command for applying the current foreground color to the selected text.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RichTextCommands.ApplyBackgroundColor">
            <summary>
            A command for applying the current background color to the selected text.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Scheduler">
            <summary>
            A control which displays a schedule, for example of appointments or tasks,
            using a set of calendar views.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Scheduler"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.FirstDayOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.FirstDayOfWeek"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.WorkHoursProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.WorkHours"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.IsReadOnly"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.DayViewStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.DayViewStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.WeekViewStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.WeekViewStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.MonthViewStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.MonthViewStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.ScheduleItemDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.ScheduleItemDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.RecurrenceDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.RecurrenceDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.DeleteRecurrenceDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.DeleteRecurrenceDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.FormatterProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.Formatter"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.SwitchToDay(System.DateTime)">
            <summary>
            Switches the <see cref="T:Mindscape.WpfElements.Scheduler"/> into single-day view.
            </summary>
            <param name="date">The day to display.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.SwitchToWeek(System.DateTime)">
            <summary>
            Switches the <see cref="T:Mindscape.WpfElements.Scheduler"/> into weekly view.
            </summary>
            <param name="startDate">The start date of the week.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called by the framework when the user presses a key.
            </summary>
            <param name="e">The key event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.Scheduler.ToolBarContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Scheduler.ToolBarContent"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.Scheduler.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnItemActivated(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.Scheduler.ItemActivated"/> event.
            </summary>
            <param name="item">The item being activated.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Scheduler.OnItemAdded(Mindscape.WpfElements.ScheduleItem,System.Boolean@,System.Boolean@)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.Scheduler.ItemAdded"/> event.
            </summary>
            <param name="item">The item being added.</param>
            <param name="cancel">true to cancel the add (and remove the item again); false to permit the new item.</param>
            <param name="showDefaultEditor">true to show the default editor (<see cref="T:Mindscape.WpfElements.ScheduleItemDialog"/>); false
            to suppress the default editor.</param>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.FirstDayOfWeek">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> that is the first day of every week in the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This should typically be either Monday or Sunday.
            The default is Monday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.FirstDayOfWeekProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.Schedule">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.Scheduler.Schedule"/> associated with this <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.WorkHours">
            <summary>
            Gets or sets the work hours of the <see cref="T:Mindscape.WpfElements.Scheduler"/>. The default is 9:00am - 5:00pm.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.IsInDayView">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.Scheduler"/> is currently displaying a single day view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.IsInWeekView">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.Scheduler"/> is currently displaying a weekly view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.IsInMonthView">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.Scheduler"/> is currently displaying a month view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.IsReadOnly">
            <summary>
            Gets or sets whether or not the <see cref="T:Mindscape.WpfElements.Scheduler"/> is read only. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.IsReadOnlyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.DayViewStyle">
            <summary>
            Gets or sets the DayViewStyle.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.DayViewStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.WeekViewStyle">
            <summary>
            Gets or sets the WeekViewStyle.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.WeekViewStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.MonthViewStyle">
            <summary>
            Gets or sets the MonthViewStyle.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.MonthViewStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.ScheduleItemDialogStyle">
            <summary>
            Gets or sets a custom style for the schedule item dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.ScheduleItemDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.RecurrenceDialogStyle">
            <summary>
            Gets or set a custom style for the recurrence dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.RecurrenceDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.DeleteRecurrenceDialogStyle">
            <summary>
            Gets or sets a custom style for the recurrence deletion dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Scheduler.DeleteRecurrenceDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.Formatter">
            <summary>
            Gets or sets the <see cref="T:Mindscape.WpfElements.SchedulerFormatter"/> used to style various parts of the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.CurrentView">
            <summary>
            Gets the currently displayed view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.ToolBarContent">
            <summary>
            Gets or sets the ToolBarContent.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Scheduler.SelectedItem">
            <summary>
            Gets the currently selected <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.ItemActivated">
            <summary>
            Occurs when the user activates an item (for example by double-clicking).
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.ItemRemoved">
            <summary>
            Occurs when the user deletes a schedule item from the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.ItemAdded">
            <summary>
            Occurs when the user adds a schedule item to the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.ItemPropertyChanged">
            <summary>
            Occurs when a property changes on a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> such as its name or start time.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.RecurrencePatternSkipDatesChanged">
            <summary>
            Occurs when the SkipDates collection of a <see cref="T:Mindscape.WpfElements.RecurrencePattern"/> changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Scheduler.RecurrencePatternRemoved">
            <summary>
            Occurs when a recurrence pattern is removed from the schedule.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.AddScheduleItemEventArgs">
            <summary>
            Contains event data relating to adding a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> to a schedule.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemEventArgs">
            <summary>
            Provides data for an event pertaining to a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemEventArgs.Item">
            <summary>
            The <see cref="T:Mindscape.WpfElements.ScheduleItem"/> to which the event pertains.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.AddScheduleItemEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel adding the item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.AddScheduleItemEventArgs.ShowDefaultEditor">
            <summary>
            Gets or sets whether to show the default editor (the <see cref="T:Mindscape.WpfElements.ScheduleItemDialog"/>.
            The default is that the default editor will be shown if the event
            is unhandled, but will be suppressed if the event is handled.  Event handlers
            can set this property to true to override this behavior.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.CreateScheduleItemArgs">
            <summary>
            Provides information about creating and adding a schedule item to a <see cref="P:Mindscape.WpfElements.CreateScheduleItemArgs.Schedule"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemArgs.Schedule">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.CreateScheduleItemArgs.Schedule"/> for adding the new schedule item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemArgs.CreationType">
            <summary>
            Specifies what triggered the creation of a schedule item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemArgs.StartTime">
            <summary>
            The potential start time of the new schedule item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemArgs.EndTime">
            <summary>
            The potential end time of the new schedule item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemArgs.ScheduleItemName">
            <summary>
            The potential name of the new schedule item.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.CreateScheduleItemResult">
            <summary>
            Provides information about the result of creating and adding a schedule item to a <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CreateScheduleItemResult.#ctor(Mindscape.WpfElements.ScheduleItem,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.CreateScheduleItemResult"/> class.
            </summary>
            <param name="item">The new schedule item. This can be null if no schedule item was added to the schedule.</param>
            <param name="addDefaultItem">Whether or not to add a default schedule item to the schedule.</param>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemResult.Item">
            <summary>
            Gets the schedule item that was created and added to the schedule. This can be null if no schedule item was added.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.CreateScheduleItemResult.AddDefaultItem">
            <summary>
            Gets whether or not to add a default schedule item to the schedule.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateDisplayMode">
            <summary>
            Specifies whether dates should be formatted with the day of the month
            or as the month name only.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateDisplayMode.Day">
            <summary>
            Dates should be formatted with the day of the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DateDisplayMode.Month">
            <summary>
            Dates should be formatted using the month name only.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateRange">
            <summary>
            Represents a range of dates.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateRange.StartDate">
            <summary>
            Gets the start of the range.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateRange.EndDate">
            <summary>
            Gets the end of the range.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DateRangeDisplayInfo">
            <summary>
            Provides display information for a date range.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DateRangeDisplayInfo.#ctor(System.DateTime,System.DateTime,Mindscape.WpfElements.DateDisplayMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DateRangeDisplayInfo"/> struct.
            </summary>
            <param name="startDate">The start date of the range.</param>
            <param name="endDate">The end date of the range.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="P:Mindscape.WpfElements.DateRangeDisplayInfo.StartDate">
            <summary>
            Gets the start of the date range.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateRangeDisplayInfo.EndDate">
            <summary>
            Gets the end of the date range.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateRangeDisplayInfo.DisplayMode">
            <summary>
            Gets whether the date range should be formatted as days or as a month name.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DateRangeDisplayInfo.IsSingleDate">
            <summary>
            Gets whether the range represents a single date.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Internal.DateRangeViewModelBase">
            <summary>
            This class supports the <see cref="T:Mindscape.WpfElements.Scheduler"/> control and is not intended for use from your code.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Internal.DayModel">
            <summary>
            This class supports the <see cref="T:Mindscape.WpfElements.Scheduler"/> control and is not intended for use from your code.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DaySchedule">
            <summary>
            A control for displaying the schedule items of a single day.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DayScheduleBase">
            <summary>
             A base class for day schedule controls.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IScheduleProvider">
            <summary>
            Provides a <see cref="P:Mindscape.WpfElements.IScheduleProvider.Schedule"/> object
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.IScheduleProvider.Schedule">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.IScheduleProvider.Schedule"/> that this <see cref="T:Mindscape.WpfElements.IScheduleProvider"/> provides.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DaySchedule"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayScheduleBase.ScheduleItemDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DayScheduleBase.ScheduleItemDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayScheduleBase.RecurrenceDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DayScheduleBase.RecurrenceDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayScheduleBase.DeleteRecurrenceDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DayScheduleBase.DeleteRecurrenceDialogStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayScheduleBase.ScheduleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DayScheduleBase.Schedule"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayScheduleBase.DateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DayScheduleBase.Date"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.OnDateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the date changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.DeselectAll">
            <summary>
            Deselects all time slots and schedule items.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.OnDayItemsChanged">
            <summary>
            Called when schedule items are added or removed from the currently displayed day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed while this <see cref="T:Mindscape.WpfElements.DayScheduleBase"/> has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.ScheduleItemDialogStyle">
            <summary>
            Gets or sets a custom style for the schedule item dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DayScheduleBase.ScheduleItemDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.RecurrenceDialogStyle">
            <summary>
            Gets or set a custom style for the recurrence dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DayScheduleBase.RecurrenceDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.DeleteRecurrenceDialogStyle">
            <summary>
            Gets or sets a custom style for the recurrence deletion dialog.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DayScheduleBase.DeleteRecurrenceDialogStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.Schedule">
            <summary>
            Gets or sets the schedule displayed on this control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DayScheduleBase.ScheduleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.Date">
            <summary>
            Gets or sets the date for which to display schedule items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DayScheduleBase.DateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.DayScheduleBase.DateChanged">
            <summary>
            Raised when the date of this <see cref="T:Mindscape.WpfElements.DayScheduleBase"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.Day">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Internal.DayModel"/> displayed by this <see cref="T:Mindscape.WpfElements.DayScheduleBase"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayScheduleBase.SelectedDateRange">
            <summary>
            Gets the range currently selected in the control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DaySchedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DaySchedule"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DaySchedule.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DaySchedule.VerticalOffsetProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DaySchedule.VerticalOffset"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DaySchedule.OnDateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the date changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DaySchedule.OnDayItemsChanged">
            <summary>
            Called when a schedule item has been added or removed from the currently displayed day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DaySchedule.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.DaySchedule.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.DaySchedule.VerticalOffset">
            <summary>
            Gets or sets the VerticalOffset.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DaySchedule.VerticalOffsetProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DaySchedule.IsPreviousWingEnabled">
            <summary>
            Gets whether the "previous item" wing button is enabled.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DaySchedule.IsNextWingEnabled">
            <summary>
            Gets whether the "next item" wing button is enabled.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DaySchedule.ShowWings">
            <summary>
            Gets whether the view needs to display the "wing" buttons (previous and next schedule item).
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DaySchedule.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DayScheduleSummary">
            <summary>
            A control for displaying the long schedule items of a single day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayScheduleSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DayScheduleSummary"/> class.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DayView">
            <summary>
            Represents a single-day view in a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleView">
            <summary>
            The base class for specific views in the <see cref="T:Mindscape.WpfElements.Scheduler"/> (day,
            week and month views).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ScheduleView"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.IncrementView">
            <summary>
            Moves the view forward to the next block (e.g. next week).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.DecrementView">
            <summary>
            Moves the view backward to the previous block (e.g. previous week).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.GetStartDateContaining(System.DateTime)">
            <summary>
            When overridden in a derived class, gets a start date that is appropriate
            for that type of view to display the given date.
            </summary>
            <param name="date">The date to be displayed.</param>
            <returns>A date which is suitable as a start date for displaying the given date.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.OnScheduleChanged">
            <summary>
            Called when the schedule of this <see cref="T:Mindscape.WpfElements.ScheduleView"/> changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.CreateScheduleItemForAdd">
            <summary>
            When overridden in a derived class, creates a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>
            at the current selection.
            </summary>
            <returns>The new schedule item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.CancelAdd(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            When overridden in a derived class, cancels the addition of the specified
            <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
            <param name="item">The item to be cancelled.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.NotifyDateRangeChanged">
            <summary>
            Raises change notification events required when the view changes to
            displaying a different date range.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleView.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.ScheduleView.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.Times">
            <summary>
            Gets the hours of the day.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.Now">
            <summary>
            Gets the current date and time.
            </summary>
            <remarks>This is used for binding, to provide change notifications as time passes.
            It returns the same value as DateTime.Now.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.StartDate">
            <summary>
            Gets or sets the start date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.EndDate">
            <summary>
            Gets the end date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.DateRangeDisplayMode">
            <summary>
            Gets how the title should be formatted in the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.DateRangeDisplayInfo">
            <summary>
            Gets display information for the view title.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.Schedule">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.ScheduleView.Schedule"/> being displayed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.ShowWings">
            <summary>
            Gets whether the view needs to display the "wing" buttons (previous and next schedule item).
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.IsPreviousWingEnabled">
            <summary>
            Gets whether the "previous item" wing button is enabled.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.IsNextWingEnabled">
            <summary>
            Gets whether the "next item" wing button is enabled.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleView.SelectedDateRange">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.DateRange"/> containing the selected start and end dates.
            If a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is selected, then the start and end times of the item will be returned instead.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleView.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DayView"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.#ctor(Mindscape.WpfElements.Schedule,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DayView"/> class.
            </summary>
            <param name="schedule">The <see cref="T:Mindscape.WpfElements.Schedule"/> to be displayed.</param>
            <param name="startDate">The start date for the display.</param>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.IncrementView">
            <summary>
            Moves the view to the next day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.DecrementView">
            <summary>
            Moves the view to the previous day.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.GetStartDateContaining(System.DateTime)">
            <summary>
            Gets a suitable start date for the control to display the requested date.
            </summary>
            <param name="date">The date to be displayed.</param>
            <returns>A start date for the view that will cause this date to be displayed.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.OnScheduleChanged">
            <summary>
            Called when the schedule of this <see cref="T:Mindscape.WpfElements.DayView"/> changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.CreateScheduleItemForAdd">
            <summary>
            Adds a new schedule item at the current selection.
            </summary>
            <returns>The new item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DayView.CancelAdd(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Cancels tha addition of the specified item.
            </summary>
            <param name="item">The item to cancel.</param>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.Days">
            <summary>
            Gets a list containing the day being represented.
            </summary>
            <remarks>This member is used for binding.</remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.Day">
            <summary>
            Gets the day being displayed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.TimeSlots">
            <summary>
            Gets the collection of timeslots to be displayed in the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.EndDate">
            <summary>
            Gets the end date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.StartDate">
            <summary>
            Gets or sets the start date of the view.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DayView.StartDateChanged">
            <summary>
            Raised whenever the start date of this <see cref="T:Mindscape.WpfElements.DayView"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.SelectedDateRange">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.DateRange"/> containing the selected start and end dates of this <see cref="T:Mindscape.WpfElements.DayView"/>.
            If a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is selected, then the start and end times of the item will be returned instead.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DayView.DateRangeDisplayMode">
            <summary>
            Gets how to format dates in the view title.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DeleteRecurrenceDialog">
            <summary>
            A dialog box to ask the user if they want to delete an entire recurrence pattern or just one of its schedule items.
            </summary>
            <summary>
            DeleteRecurrenceDialog
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DeleteRecurrenceDialog.#ctor(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.DeleteRecurrenceDialog"/> class.
            </summary>
            <param name="item">The <see cref="P:Mindscape.WpfElements.DeleteRecurrenceDialog.ScheduleItem"/> to be deleted. This must be an instance of a recurring item.</param>
        </member>
        <member name="F:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteSeriesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteSeries"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteOccurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteOccurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DeleteRecurrenceDialog.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.DeleteRecurrenceDialog.Title"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DeleteRecurrenceDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DeleteRecurrenceDialog.ScheduleItem">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.DeleteRecurrenceDialog.ScheduleItem"/> to be deleted.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteSeries">
            <summary>
            Gets or sets whether or not to delete the entire recurrence pattern.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteOccurrence">
            <summary>
            Gets or sets the DeleteOccurrence.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DeleteRecurrenceDialog.DeleteOccurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DeleteRecurrenceDialog.Title">
            <summary>
            Gets or sets the Title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.DeleteRecurrenceDialog.TitleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.DeleteRecurrenceDialog.DialogResult">
            <summary>
            Gets the dialog result.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.DeleteRecurrenceDialog.Closed">
            <summary>
            Raised when this <see cref="T:Mindscape.WpfElements.DeleteRecurrenceDialog"/> is closed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ElementViewStatus">
            <summary>
            Provides status information for use in rendering a <see cref="T:Mindscape.WpfElements.MonthViewDayElement"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ElementViewStatus.Normal">
            <summary>
            The element is not in any of the other states.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ElementViewStatus.Selected">
            <summary>
            The element is selected.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ElementViewStatus.MouseOver">
            <summary>
            The mouse is over the element.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ElementViewStatus.Padding">
            <summary>
            The element represents a day which is not part of the month being displayed.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ElementViewStatus.MouseOverPadding">
            <summary>
            The mouse is over the element which also represents a day which is not part of the month being displayed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IScheduleItemBuilder">
            <summary>
            Implementations of <see cref="T:Mindscape.WpfElements.IScheduleItemBuilder"/> can add custom schedule items to a schedule.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IScheduleItemBuilder.CreateScheduleItem(Mindscape.WpfElements.CreateScheduleItemArgs)">
            <summary>
            Creates a custom schedule item and adds it to the schedule found in the given args.
            </summary>
            <param name="args"><see cref="T:Mindscape.WpfElements.CreateScheduleItemArgs"/> holding information about creating and adding an item to the schedule.</param>
            <returns><see cref="M:Mindscape.WpfElements.IScheduleItemBuilder.CreateScheduleItem(Mindscape.WpfElements.CreateScheduleItemArgs)"/> holding information about the result of creating and adding an item to the schedule.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.Internal.MonthModel">
            <summary>
            This class supports the <see cref="T:Mindscape.WpfElements.Scheduler"/> control and is not intended for use from your code.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MonthView">
            <summary>
            Represents a month view in a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MonthView"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.#ctor(Mindscape.WpfElements.Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MonthView"/> class.
            </summary>
            <param name="schedule">The <see cref="T:Mindscape.WpfElements.Schedule"/> to be displayed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.#ctor(Mindscape.WpfElements.Schedule,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MonthView"/> class.
            </summary>
            <param name="schedule">The <see cref="T:Mindscape.WpfElements.Schedule"/> to be displayed.</param>
            <param name="startDate">The start date for the display.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.IncrementView">
            <summary>
            Moves the view to the next month.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.DecrementView">
            <summary>
            Moves the view to the previous month.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.GetStartDateContaining(System.DateTime)">
            <summary>
            Gets a suitable start date for the control to display the requested date.
            </summary>
            <param name="date">The date to be displayed.</param>
            <returns>A start date for the view that will cause this date to be displayed.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.OnScheduleChanged">
            <summary>
            Called when the schedule of this <see cref="T:Mindscape.WpfElements.MonthView"/> changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.CreateScheduleItemForAdd">
            <summary>
            Adds a new schedule item at the current selection.
            </summary>
            <returns>The new item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MonthView.CancelAdd(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Cancels tha addition of the specified item.
            </summary>
            <param name="item">The item to cancel.</param>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.DayOfWeekNames">
            <summary>
            Gets an ordered list of "day of week" names starting from the specified first day of week.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.EndDate">
            <summary>
            Gets the end date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.Month">
            <summary>
            Gets the month being displayed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.StartDate">
            <summary>
            Gets or sets the start date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.SelectedDateRange">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.DateRange"/> containing the selected start and end dates of this <see cref="T:Mindscape.WpfElements.MonthView"/>.
            If a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is selected, then the start and end times of the item will be returned instead.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthView.DateRangeDisplayMode">
            <summary>
            Gets how to format dates in the view title.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MonthViewDayElement">
            <summary>
            Displays a single day in the month view of a <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called by the framework when the mouse leaves the control.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called by the framework when the mouse enters the control.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user presses the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user releases the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.MonthViewDayElement.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthViewDayElement.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the mouse is double click over this <see cref="T:Mindscape.WpfElements.MonthViewDayElement"/>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.MonthViewDayElement.Day">
            <summary>
            Gets the day represented by this <see cref="T:Mindscape.WpfElements.MonthViewDayElement"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthViewDayElement.HasOverflowItems">
            <summary>
            Gets whether the control contains more <see cref="T:Mindscape.WpfElements.ScheduleItem"/> objects than
            it can render.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthViewDayElement.BelongsToTargetMonth">
            <summary>
            Gets whether the represented day belongs to the month being displayed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthViewDayElement.ViewStatus">
            <summary>
            Gets display information for the <see cref="T:Mindscape.WpfElements.MonthViewDayElement"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.MonthViewDayElement.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RecurrenceDialog">
            <summary>
            Provides a user interface for editing the recurrence pattern of a recurring
            <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
            <summary>
            RecurrenceDialog
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceDialog.#ctor(Mindscape.WpfElements.ScheduleItem,Mindscape.WpfElements.RecurrenceInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RecurrenceDialog"/> class.
            </summary>
            <param name="item">The item to be edited.</param>
            <param name="currentInfo">The current recurrence settings for the item.</param>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceDialog.#ctor(Mindscape.WpfElements.ScheduleItem,Mindscape.WpfElements.RecurrenceInfo,System.DayOfWeek)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RecurrenceDialog"/> class.
            </summary>
            <param name="item">The item to be edited.</param>
            <param name="currentInfo">The current recurrence settings for the item.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.Title"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.StartTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.StartTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.EndTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.EndTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.DurationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.Duration"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.TimeListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.TimeList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.DurationListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.DurationList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.StartDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.StartDate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.EndDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.EndDate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MaxOccurrencesProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MaxOccurrences"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.OccurrenceListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.OccurrenceList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.DayOfRecurrenceListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.DayOfRecurrenceList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsInfiniteProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsInfinite"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByCountProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByCount"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByDate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsDailyPatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsDailyPattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsWeeklyPatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsWeeklyPattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyPatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyPattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsYearlyPatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsYearlyPattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsEveryNDaysProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsEveryNDays"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsEveryWeekdayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsEveryWeekday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.DailyIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.DailyInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.WeeklyIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.WeeklyInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnMondayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnMonday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnTuesdayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnTuesday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnWednesdayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnWednesday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnThursdayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnThursday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnFridayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnFriday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnSaturdayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnSaturday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsOnSundayProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsOnSunday"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsNthDayOfMonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsNthDayOfMonth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyRecurrencePatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyRecurrencePattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.DayOfTheMonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.DayOfTheMonth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyOcurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyOcurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyDayOfRecurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyDayOfRecurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyRecurrenceIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyRecurrenceInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsSpecificDateOfYearProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsSpecificDateOfYear"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.IsYearlyRecurrencePatternProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.IsYearlyRecurrencePattern"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.YearlyIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.YearlyInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.Month"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfTheMonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfTheMonth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.YearlyOccurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.YearlyOccurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfRecurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfRecurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceDialog.MonthOfRecurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.RecurrenceDialog.MonthOfRecurrence"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.Title">
            <summary>
            Gets or sets the Title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.TitleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.StartTime">
            <summary>
            Gets or sets the time of day that each schedule item starts at.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.StartTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.EndTime">
            <summary>
            Gets or sets the time of day that each schedule item ends at.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.EndTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.Duration">
            <summary>
            Gets or sets the duration of a single recurrence item.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.DurationProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.TimeList">
            <summary>
            Gets the list of times displayed by the time pickers.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.TimeListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.DurationList">
            <summary>
            Gets the list of durations displayed in the duration picker.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.DurationListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.StartDate">
            <summary>
            Gets or sets the StartDate.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.StartDateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.EndDate">
            <summary>
            Gets or sets the EndDate.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.EndDateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MaxOccurrences">
            <summary>
            Gets or sets the maximum number of occurrences when using a recurrence pattern that is limited by an occurrence count.
            The default is 10.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MaxOccurrencesProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.OccurrenceList">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.Occurrence"/> list.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.OccurrenceListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.DayOfRecurrenceList">
            <summary>
            Gets the <see cref="T:Mindscape.WpfElements.DayOfRecurrence"/> list.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.DayOfRecurrenceListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthList">
            <summary>
            Gets a list of integers from 0 to 11. This is for the month picker.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsInfinite">
            <summary>
            Gets or sets whether or not the recurrence pattern will recur forever.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsInfiniteProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByCount">
            <summary>
            Gets or sets whether or not the recurrence pattern will be limited by a maximum occurrence count.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByCountProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByDate">
            <summary>
            Gets or sets whether or not the recurrence pattern will end on a particular date.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsLimitedByDateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsDailyPattern">
            <summary>
            Gets or sets whether or not to create a daily pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsDailyPatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsWeeklyPattern">
            <summary>
            Gets or sets whether or not to create a weekly pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsWeeklyPatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyPattern">
            <summary>
            Gets or sets whether or not to create a monthly pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyPatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsYearlyPattern">
            <summary>
            Gets or sets whether or not to create a yearly pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsYearlyPatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsEveryNDays">
            <summary>
            Gets or sets whether or not to use the every-Nth-day pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsEveryNDaysProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsEveryWeekday">
            <summary>
            Gets or sets whether or not to use the every-weekday pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsEveryWeekdayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.DailyInterval">
            <summary>
            Gets or sets the daily interval.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.DailyIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.WeeklyInterval">
            <summary>
            Gets or sets the weekly interval.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.WeeklyIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnMonday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Monday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnMondayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnTuesday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Tuesday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnTuesdayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnWednesday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Wednesday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnWednesdayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnThursday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Thursday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnThursdayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnFriday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Friday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnFridayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnSaturday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Saturday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnSaturdayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsOnSunday">
            <summary>
            Gets or sets whether or not the weekly pattern occurs on Sunday.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsOnSundayProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsNthDayOfMonth">
            <summary>
            Gets or sets whether or not to use the Nth-day-of-month pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsNthDayOfMonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyRecurrencePattern">
            <summary>
            Gets or sets whether or not to use the monthly-pattern-recurrence-pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsMonthlyRecurrencePatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.DayOfTheMonth">
            <summary>
            Gets or sets the specific day of the month.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.DayOfTheMonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyOcurrence">
            <summary>
            Gets or sets the monthly <see cref="T:Mindscape.WpfElements.Occurrence"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyOcurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyDayOfRecurrence">
            <summary>
            Gets or sets the monthly <see cref="T:Mindscape.WpfElements.DayOfRecurrence"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyDayOfRecurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyInterval">
            <summary>
            Gets or sets the monthly interval.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthlyRecurrenceInterval">
            <summary>
            Gets or sets the MonthlyRecurrenceInterval.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthlyRecurrenceIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsSpecificDateOfYear">
            <summary>
            Gets or sets whether or not to use the specific-date-yearly-recurrence.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsSpecificDateOfYearProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.IsYearlyRecurrencePattern">
            <summary>
            Gets or sets whether or not to use the yearly-pattern-recurrence-pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.IsYearlyRecurrencePatternProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.YearlyInterval">
            <summary>
            Gets or sets the yearly interval.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.YearlyIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.Month">
            <summary>
            Gets or sets the month to be used by a specific-date-yearly-recurrence-pattern.
            The month is an integer from 0 to 11.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfTheMonth">
            <summary>
            Gets or sets the specific day of the month.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfTheMonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.YearlyOccurrence">
            <summary>
            Gets or sets the yearly <see cref="T:Mindscape.WpfElements.Occurrence"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.YearlyOccurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfRecurrence">
            <summary>
            Gets or sets the yearly <see cref="T:Mindscape.WpfElements.DayOfRecurrence"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.YearlyDayOfRecurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.MonthOfRecurrence">
            <summary>
            Gets or sets the month to be used by a yearly-pattern-recurrence-pattern.
            The month is an integer from 0 to 11.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.RecurrenceDialog.MonthOfRecurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.RecurrenceInfo">
            <summary>
            Gets or sets the recurrence information for the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceDialog.DialogResult">
            <summary>
            Gets the dialog result.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.RecurrenceDialog.Closed">
            <summary>
            Raised when this <see cref="T:Mindscape.WpfElements.RecurrenceDialog"/> is closed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DayOfRecurrence">
            <summary>
            The day on which a recurring schedule item recurs.  This may be a day of the
            week, or it may match multiple days of the week (as in "last day of the month"
            or "first weekday in January").  It is used in conjunction with the <see cref="T:Mindscape.WpfElements.Occurrence"/>
            type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Day">
            <summary>
            The Occurrence counts all days.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Weekday">
            <summary>
            The Occurrence counts all weekdays (Monday to Friday).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.WeekendDay">
            <summary>
            The Occurrence counts weekend days (Saturday and Sunday);
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Sunday">
            <summary>
            The Occurrence counts Sundays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Monday">
            <summary>
            The Occurrence counts Mondays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Tuesday">
            <summary>
            The Occurrence counts Tuesdays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Wednesday">
            <summary>
            The Occurrence counts Wednesdays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Thursday">
            <summary>
            The Occurrence counts Thursdays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Friday">
            <summary>
            The Occurrence counts Fridays.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.DayOfRecurrence.Saturday">
            <summary>
            The Occurrence counts Saturdays.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.EveryNDaysRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> at a regular
            daily interval.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RecurrencePattern">
            <summary>
            Represents the recurrence pattern of a recurring <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.IRecurrencePattern">
            <summary>
            Represents the recurrence pattern of a recurring <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IRecurrencePattern.Includes(System.DateTime,System.DateTime,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.IRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Int32,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.IRecurrencePattern.Includes(System.DateTime,System.DateTime,System.DateTime,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start and end date.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="endDate">The end date of recurrence.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.IRecurrencePattern.SkipDates">
            <summary>
            Gets a list of all the dates where schedule items have been deleted from the recurrence pattern.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.IRecurrencePattern.SkipDatesChanged">
            <summary>
            Raised when the SkipDates collection is changed.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.Includes(System.DateTime,System.DateTime,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.Includes(System.DateTime,System.DateTime,System.DateTime,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start and end date.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="endDate">The end date of recurrence.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.Includes(System.DateTime,System.DateTime,System.Int32,System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            When overridden in a derived class, gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32},System.DayOfWeek)">
            <summary>
            When overridden in a derived class, gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="E:Mindscape.WpfElements.RecurrencePattern.SkipDatesChanged">
            <summary>
            Occurs when the contents of the <see cref="P:Mindscape.WpfElements.RecurrencePattern.SkipDates"/> collection changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrencePattern.SkipDates">
            <summary>
            Gets a collection containing all the dates that are included in this <see cref="T:Mindscape.WpfElements.RecurrencePattern"/> but have been skipped.
            Adding a date to this collection will prevent schedule items from occuring on that date based on this pattern.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.EveryNDaysRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.EveryNDaysRecurrencePattern"/> class.
            </summary>
            <param name="dailyInterval">The number of days between occurrences.</param>
        </member>
        <member name="M:Mindscape.WpfElements.EveryNDaysRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.EveryNDaysRecurrencePattern.DailyInterval">
            <summary>
            Gets the number of days between occurrences.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.EveryWeekdayRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on every weekday
            (Monday to Friday).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.EveryWeekdayRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.MonthlyPatternRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a monthly schedule
            defined by a pattern (e.g. last Friday of every second month).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MonthlyRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a monthly basis.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthlyRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MonthlyRecurrencePattern"/> class.
            </summary>
            <param name="monthlyInterval">The number of months between recurrences.</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthlyRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.MonthlyRecurrencePattern.IncludesCore(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MonthlyRecurrencePattern.MonthlyInterval">
            <summary>
            Gets the number of months between recurrences.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.#ctor(System.Int32,Mindscape.WpfElements.Occurrence,Mindscape.WpfElements.DayOfRecurrence)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.MonthlyPatternRecurrencePattern"/> class.
            </summary>
            <param name="monthlyInterval">The number of months between recurrences.</param>
            <param name="occurrence">Which occurrence of the <paramref name="dayOfRecurrence"/> the item recurs on (e.g. first, last).</param>
            <param name="dayOfRecurrence">The days counted by <paramref name="occurrence"/> (e.g. weekdays, Fridays).</param>
        </member>
        <member name="M:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.IncludesCore(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.Occurrence">
            <summary>
            Gets which occurrence of the <see cref="P:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.DayOfRecurrence"/> the item recurs on (e.g. first, last).
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.DayOfRecurrence">
            <summary>
            Gets the days counted by <see cref="P:Mindscape.WpfElements.MonthlyPatternRecurrencePattern.Occurrence"/> (e.g. weekdays, Fridays).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NthDayOfMonthRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a monthly
            basis on specific day of the month (e.g. the 20th of every third month).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NthDayOfMonthRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.NthDayOfMonthRecurrencePattern"/> class.
            </summary>
            <param name="monthlyInterval">The number of months between recurrences.</param>
            <param name="dayOfMonth">The day of the month on which the item occurs.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NthDayOfMonthRecurrencePattern.IncludesCore(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.NthDayOfMonthRecurrencePattern.DayOfMonth">
            <summary>
            Gets the day of the month on which the item occurs.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Occurrence">
            <summary>
            Specifies on which occurrence of a day in a month a recurring schedule item recurs
            (as in "last Friday of the month" or "first weekday in January").
            This is used in conjunction with the <see cref="T:Mindscape.WpfElements.DayOfRecurrence"/> type.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Occurrence.First">
            <summary>
            The item occurs on the first DayOfRecurrence in the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Occurrence.Second">
            <summary>
            The item occurs on the second DayOfRecurrence in the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Occurrence.Third">
            <summary>
            The item occurs on the third DayOfRecurrence in the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Occurrence.Fourth">
            <summary>
            The item occurs on the fourth DayOfRecurrence in the month.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Occurrence.Last">
            <summary>
            The item occurs on the last DayOfRecurrence in the month.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RecurrenceEndType">
            <summary>
            Specifies when a recurring schedule item will end.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceEndType.NoEndDate">
            <summary>
            States that a recurrence has no end date.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceEndType.EndAfter">
            <summary>
            States that a recurrence can last for some maximum number of occurrences.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.RecurrenceEndType.EndBy">
            <summary>
            States that a recurrence must end by a particular date.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RecurrenceInfo">
            <summary>
            Specifies the recurrence schedule for a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.ToEndDate(System.DateTime,System.TimeSpan,System.DateTime,Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs until a specified date.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="endDate">The date on which the recurrence is to end.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.ToMaxOccurrences(System.DateTime,System.TimeSpan,System.Int32,Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs for a specified number of occurrences.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="maxOccurrences">The number of occurrences.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.Forever(System.DateTime,System.TimeSpan,Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs indefinitely.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.ToEndDate(System.DateTime,System.TimeSpan,System.DateTime,Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs until a specified date.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="endDate">The date on which the recurrence is to end.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.ToMaxOccurrences(System.DateTime,System.TimeSpan,System.Int32,Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs for a specified number of occurrences.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="maxOccurrences">The number of occurrences.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.Forever(System.DateTime,System.TimeSpan,Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Creates a <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> that runs indefinitely.
            </summary>
            <param name="start">The start date and time of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>A <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> representing the specified recurrence schedule.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.#ctor(System.DateTime,System.TimeSpan,System.TimeSpan,Mindscape.WpfElements.IRecurrencePattern,Mindscape.WpfElements.RecurrenceEndType,System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> class.
            </summary>
            <param name="startDate">The start date of the recurrence.</param>
            <param name="startTime">The start time of day of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="endType">The end criterion for the recurrence.</param>
            <param name="endDate">The date on which the recurrence is to end (for RecurrenceEndType.EndBy).</param>
            <param name="maxOccurrences">The number of occurrences (for RecurrenceEndType.EndAfter).</param>
            <remarks>This constructor is primarily for deserialisation purposes.  The factory methods
            "ToEndDate", "ToMaxOccurrences" and "Forever" provide a simpler
            API for creating specific types of RecurrenceInfo.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrenceInfo.#ctor(System.DateTime,System.TimeSpan,System.TimeSpan,Mindscape.WpfElements.IRecurrencePattern,Mindscape.WpfElements.RecurrenceEndType,System.DateTime,System.Int32,System.DayOfWeek)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.RecurrenceInfo"/> class.
            </summary>
            <param name="startDate">The start date of the recurrence.</param>
            <param name="startTime">The start time of day of the recurrence.</param>
            <param name="duration">The duration of the <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="endType">The end criterion for the recurrence.</param>
            <param name="endDate">The date on which the recurrence is to end (for RecurrenceEndType.EndBy).</param>
            <param name="maxOccurrences">The number of occurrences (for RecurrenceEndType.EndAfter).</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <remarks>This constructor is primarily for deserialisation purposes.  The factory methods
            "ToEndDate", "ToMaxOccurrences" and "Forever" provide a simpler
            API for creating specific types of RecurrenceInfo.</remarks>
        </member>
        <member name="E:Mindscape.WpfElements.RecurrenceInfo.RecurrencePatternSkipDatesChanged">
            <summary>
            Occurs when the contents of the skip dates collection of the <see cref="P:Mindscape.WpfElements.RecurrenceInfo.RecurrencePattern"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.StartDate">
            <summary>
            Gets the start date of the recurrence.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.StartTime">
            <summary>
            Gets the start time of day of the recurrence.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.Duration">
            <summary>
            Gets the duration of the recurring item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.MaxOccurrences">
            <summary>
            Gets the maximum number of occurrences.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.EndDate">
            <summary>
            Gets the end date of the recurrence.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.EndType">
            <summary>
            Gets the end criterion for the recurrence.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.RecurrenceInfo.RecurrencePattern">
            <summary>
            Gets the recurrence pattern.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.RecurrencePatternXmlSerializer">
            <summary>
            Contains helper methods for serializing recurrence patterns to XML.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePatternXmlSerializer.ToXml(Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Gets an XElement containing the details of the recurrence pattern.
            </summary>
            <param name="pattern">The recurrence pattern to serialize.</param>
            <returns>An XElement representing the recurrence pattern.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.RecurrencePatternXmlSerializer.ParseRecurrencePattern(System.Xml.Linq.XElement)">
            <summary>
            Parses a recurrence pattern from XML.
            </summary>
            <param name="xml">An XElement containing details of the recurrence pattern,
            as produced by the ToXml method.</param>
            <returns>An <see cref="T:Mindscape.WpfElements.IRecurrencePattern"/>.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.SpecificDateYearlyRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a yearly
            basis on specific day of the year (e.g. every 25th of April).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.YearlyRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a yearly basis.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.YearlyRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.YearlyRecurrencePattern"/> class.
            </summary>
            <param name="yearlyInterval">The number of years between recurrences.</param>
            <param name="month">The month in which the item recurs. (1 through 12)</param>
        </member>
        <member name="P:Mindscape.WpfElements.YearlyRecurrencePattern.YearlyInterval">
            <summary>
            Gets the number of years between recurrences.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.YearlyRecurrencePattern.Month">
            <summary>
            Gets the month in which the item recurs.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SpecificDateYearlyRecurrencePattern.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SpecificDateYearlyRecurrencePattern"/> class.
            </summary>
            <param name="yearlyInterval">The number of years between recurrences.</param>
            <param name="month">The month in which the item recurs. (1 through 12)</param>
            <param name="dayOfMonth">The day of the month on which the item occurs.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SpecificDateYearlyRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.SpecificDateYearlyRecurrencePattern.DayOfMonth">
            <summary>
            Gets the day of the month on which the item occurs.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WeeklyRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a weekly basis.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeeklyRecurrencePattern.#ctor(System.Int32,System.DayOfWeek[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WeeklyRecurrencePattern"/> class.
            </summary>
            <param name="weeklyInterval">The number of weeks between recurrences.</param>
            <param name="daysOfWeek">The days of the week on which the item recurs.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WeeklyRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WeeklyRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32},System.DayOfWeek)">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.WeeklyRecurrencePattern.WeeklyInterval">
            <summary>
            Gets the number of weeks between recurrences.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeeklyRecurrencePattern.DaysOfWeek">
            <summary>
            Gets the days of the week on which the item recurs.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.YearlyPatternRecurrencePattern">
            <summary>
            Represents the recurrence of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> on a yearly
            basis according to a pattern (e.g. the first Tuesday of November every four years).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.YearlyPatternRecurrencePattern.#ctor(System.Int32,System.Int32,Mindscape.WpfElements.Occurrence,Mindscape.WpfElements.DayOfRecurrence)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.YearlyPatternRecurrencePattern"/> class.
            </summary>
            <param name="yearlyInterval">The number of years between recurrences.</param>
            <param name="month">The month in which the item recurs. (1 through 12)</param>
            <param name="occurrence">Which occurrence of the <paramref name="dayOfRecurrence"/> the item recurs on (e.g. first, last).</param>
            <param name="dayOfRecurrence">The days counted by <paramref name="occurrence"/> (e.g. weekdays, Fridays).</param>
        </member>
        <member name="M:Mindscape.WpfElements.YearlyPatternRecurrencePattern.Includes(System.DateTime,System.DateTime,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets whether the pattern occurs on the specified day, assuming a given start date
            and maximum occurrence count.
            </summary>
            <param name="startDate">The start date of recurrence.</param>
            <param name="day">The day for which to check whether the recurrence occurs.</param>
            <param name="limitOccurrences">Whether to limit the number of occurrences considered.</param>
            <param name="occurrenceCount">The maximum number of occurrences to consider, if <paramref name="limitOccurrences"/> is true.</param>
            <returns>true if the pattern occurs on <paramref name="day"/>; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.YearlyPatternRecurrencePattern.Occurrence">
            <summary>
            Gets which occurrence of the <see cref="P:Mindscape.WpfElements.YearlyPatternRecurrencePattern.DayOfRecurrence"/> the item recurs on (e.g. first, last).
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.YearlyPatternRecurrencePattern.DayOfRecurrence">
            <summary>
            Gets the days counted by <see cref="P:Mindscape.WpfElements.YearlyPatternRecurrencePattern.Occurrence"/> (e.g. weekdays, Fridays).
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Schedule">
            <summary>
            Contains schedule data for display in a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Schedule"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.AddItem(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Adds a new item to the schedule.
            </summary>
            <param name="scheduleItem">The item to be added.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.GetDay(System.DateTime)">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.Internal.DayModel"/> for the given date.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> for selecting the <see cref="T:Mindscape.WpfElements.Internal.DayModel"/>.</param>
            <returns>The <see cref="T:Mindscape.WpfElements.Internal.DayModel"/> for the given date.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.RemoveItem(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Removes an item from the schedule.
            </summary>
            <param name="item">The item to be removed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.RemoveItem(Mindscape.WpfElements.ScheduleItem,System.Boolean)">
            <summary>
            Removes an item from the schedule.
            </summary>
            <param name="item">The item to be removed.</param>
            <param name="removeAllOccurrences">true to remove all occurrences of a recurring item;
            false to remove only the specified item.</param>
        </member>
        <member name="M:Mindscape.WpfElements.Schedule.Clear">
            <summary>
            Removes all items from the schedule.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Schedule.ScheduleItemBuilder">
            <summary>
            Gets or sets an <see cref="T:Mindscape.WpfElements.IScheduleItemBuilder"/> for creating and adding custom schedule items to the <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Schedule.Items">
            <summary>
            Gets the collection of items in the <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Schedule.RecurrencePatternSkipDatesChanged">
            <summary>
            Occurs when the contents of the skip dates collection of any of the recurrence patterns change.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Schedule.WorkHours">
            <summary>
            Gets or sets the work hours of the <see cref="T:Mindscape.WpfElements.Schedule"/>. The default is 9:00am - 5:00pm
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Schedule.RecurrencePatternRemoved">
            <summary>
            Occurs when a recurrence pattern is removed from the schedule.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Schedule.ItemRemoved">
            <summary>
            Occurs when the user deletes a schedule item from the <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.Schedule.ItemAdded">
            <summary>
            Occurs when the user adds a schedule item to the <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Schedule.SelectedItem">
            <summary>
            Gets the currently selected schedule item.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItem">
            <summary>
            Represents an item such as an appointment or task in a <see cref="T:Mindscape.WpfElements.Schedule"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.CreateInstanceCore">
            <summary>
            Creates a new instance of a recurring schedule item.
            Custom schedule item implementations can override this method to create an instance of the custom schedule item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurUntil(System.DateTime,Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur until the specified date.
            </summary>
            <param name="until">The date until which the item should recur.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurTimes(System.Int32,Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur for the specified number of occurrences.
            </summary>
            <param name="maxOccurrences">The number of times the item should recur.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurForever(Mindscape.WpfElements.IRecurrencePattern)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur indefinitely.
            </summary>
            <param name="recurrencePattern">The recurrence pattern.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurUntil(System.DateTime,Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur until the specified date.
            </summary>
            <param name="until">The date until which the item should recur.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurTimes(System.Int32,Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur for the specified number of occurrences.
            </summary>
            <param name="maxOccurrences">The number of times the item should recur.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.RecurForever(Mindscape.WpfElements.IRecurrencePattern,System.DayOfWeek)">
            <summary>
            Specifies that the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> should recur indefinitely.
            </summary>
            <param name="recurrencePattern">The recurrence pattern.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.MoveBy(System.Int32)">
            <summary>
            Moves the item by the specified time.
            </summary>
            <param name="deltaMinutes">The time to offset the item, in minutes.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItem.OnRecurrenceChanged">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.ScheduleItem.RecurrenceChanged"/> event.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.Name">
            <summary>
            Gets or sets the name of the item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.IsRecurring">
            <summary>
            Gets whether the item is recurring.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.RecurrenceInfo">
            <summary>
            Gets or sets the item's recurrence behavior.  This will be
            null if the item is not recurring.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.IsInstanceOfRecurringItem">
            <summary>
            Gets whether the item is an instance of a recurring <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.StartTime">
            <summary>
            Gets or sets when the item starts.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.EndTime">
            <summary>
            Gets or sets when the item ends.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItem.IsSelected">
            <summary>
            Gets or sets whether the item is selected.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleItem.IsSelectedChanged">
            <summary>
            Occurs when the item's selection status changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleItem.StartTimeChanged">
            <summary>
            Occurs when the item's <see cref="P:Mindscape.WpfElements.ScheduleItem.StartTime"/> changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleItem.EndTimeChanged">
            <summary>
            Occurs when the item's <see cref="P:Mindscape.WpfElements.ScheduleItem.EndTime"/> changes.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleItem.RecurrenceChanged">
            <summary>
            Occurs when the item's recurrence information changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemCollectionChangedEventArgs">
            <summary>
            Provides event data for when a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is added to or removed
            from a collection.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemCollectionChangedEventArgs.Action">
            <summary>
            Whether the <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is being added to or
            removed from the collection.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemCreationType">
            <summary>
            Specifies the cause of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> being created.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemCreationType.TextInput">
            <summary>
            The user has input some text to trigger the creation of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemCreationType.DoubleClick">
            <summary>
            The user has double clicked on a day or time slot to trigger the creation of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemCreationType.CreateHereButton">
            <summary>
            The user has hovered the mouse over a day or time slot and then clicked the create-here button that appeared.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemCreationType.AddItemToolBarButton">
            <summary>
            The user has used the add-item button found in the navigation tool bar.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemDialog">
            <summary>
            Provides a dialog-based interface for editing a <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.ScheduleItem"/>.
            </summary>
            <summary>
            ScheduleItemDialog
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemDialog.#ctor(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ScheduleItemDialog"/> class.
            </summary>
            <param name="item">The item to be edited.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemDialog.#ctor(Mindscape.WpfElements.ScheduleItem,System.DayOfWeek)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ScheduleItemDialog"/> class.
            </summary>
            <param name="item">The item to be edited.</param>
            <param name="firstDayOfWeek">The first day of a week.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.SubjectProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.Subject"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.StartTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.StartTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.EndTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.EndTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.StartDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.StartDate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.EndDateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.EndDate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.HasRecurrenceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.HasRecurrence"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.StartTimeListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.StartTimeList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.EndTimeListProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.EndTimeList"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemDialog.TitleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.Title"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.ScheduleItem">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.ScheduleItemDialog.ScheduleItem"/> being edited.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.Subject">
            <summary>
            Gets or sets the Subject.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.StartTime">
            <summary>
            Gets or sets the StartTime.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.EndTime">
            <summary>
            Gets or sets the EndTime.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.StartDate">
            <summary>
            Gets or sets the StartDate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.EndDate">
            <summary>
            Gets or sets the EndDate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.HasRecurrence">
            <summary>
            Gets whether or not the schedule item currently has a recurrence pattern.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemDialog.HasRecurrenceProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.StartTimeList">
            <summary>
            Gets the list of times to be displayed by the start time picker.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemDialog.StartTimeListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.EndTimeList">
            <summary>
            Gets the list of times to be displayed by the end time picker.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemDialog.EndTimeListProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.Title">
            <summary>
            Gets or sets the Title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemDialog.TitleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemDialog.DialogResult">
            <summary>
            Gets the dialog result.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.ScheduleItemDialog.Closed">
            <summary>
            Raised when this <see cref="T:Mindscape.WpfElements.ScheduleItemDialog"/> is closed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemPropertyChangedEventArgs">
            <summary>
            Contains event data relating to changing the value of one of the properties of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemPropertyChangedEventArgs.PropertyName">
            <summary>
            Gets the name of the property that changed.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemTimeChanger">
            <summary>
            Provides a user interface for changing the start or end time of a
            <see cref="P:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItem"/> by dragging with the mouse.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemTimeChanger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ScheduleItemTimeChanger"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemTimeChanger.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user releases the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemTimeChanger.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user presses the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemTimeChanger.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called by the framework when the user moves the mouse.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItem"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemTimeChanger.TimeEndProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemTimeChanger.TimeEnd"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItem">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItem"/> associated with the changer.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemTimeChanger.TimeEnd">
            <summary>
            Gets or sets the end (start or finish) of the <see cref="P:Mindscape.WpfElements.ScheduleItemTimeChanger.ScheduleItem"/> will
            be changed by dragging this <see cref="T:Mindscape.WpfElements.ScheduleItemTimeChanger"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemTimeChanger.TimeEndProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerCanvas">
            <summary>
            Represents a canvas on which schedule items can be laid out in a detail view.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerCanvasBase">
            <summary>
            Represents a canvas on which schedule items can be laid out.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SchedulerCanvasBase"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.ClearChildren">
            <summary>
            Clears the Children collection and performs some base preperations.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.GetDateTime(System.Double,System.Double,Mindscape.WpfElements.TimeEnd)">
            <summary>
            When overridden in a derived class, gets the time corresponding to a location
            on the canvas.
            </summary>
            <param name="x">The x-coordinate of the location.</param>
            <param name="y">The y-coordinate of the location.</param>
            <param name="timeEnd">Whether to adjust the time for the start or end of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <returns>The date and time corresponding to x and y.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.DaysProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.Days"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.OnDaysChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            When overridden in a derived class, handles changes to the
            <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.Days"/> property.
            </summary>
            <param name="e">Contains information about changes to the Days property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.FormatterProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.Formatter"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.OnFormatterChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Classes derived from <see cref="T:Mindscape.WpfElements.SchedulerCanvasBase"/> can override this method to provide additional logic when
            the formatter is changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.SelectStyle(Mindscape.WpfElements.SchedulerElement,System.Windows.Controls.StyleSelector,System.Windows.Style)">
            <summary>
            Selects a style for the given <see cref="T:Mindscape.WpfElements.SchedulerElement"/> based on the given <see cref="T:System.Windows.Controls.StyleSelector"/>. If the
            selector is null, or if it fails to select a style, then the given default style will be returned.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.SchedulerElement"/> to select a style for.</param>
            <param name="selector">The <see cref="T:System.Windows.Controls.StyleSelector"/> for selecting the style.</param>
            <param name="defaultStyle">The default <see cref="T:System.Windows.Style"/> if the selector fails to select one.</param>
            <returns>The <see cref="T:System.Windows.Style"/> to be applied to the given <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.SelectTemplate(Mindscape.WpfElements.SchedulerElement,System.Windows.Controls.DataTemplateSelector,System.Windows.DataTemplate)">
            <summary>
            Selects a template for the given <see cref="T:Mindscape.WpfElements.SchedulerElement"/> based on the given <see cref="T:System.Windows.Controls.DataTemplateSelector"/>.
            If the selector is null, or if it fails to select a template, then the given default template will be returned.
            </summary>
            <param name="element">The <see cref="T:Mindscape.WpfElements.SchedulerElement"/> to select a template for.</param>
            <param name="selector">The <see cref="T:System.Windows.Controls.DataTemplateSelector"/> for selecting the template.</param>
            <param name="defaultTemplate">The default <see cref="T:System.Windows.DataTemplate"/> if the selector fails to select one.</param>
            <returns>The <see cref="T:System.Windows.DataTemplate"/> to be applied to the given <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereHintContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereHintContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereButtonStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementDurationProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementDuration"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.RemoveCreateHereButton">
            <summary>
            Removes the "create here" button.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvasBase.RelayoutCreateHereButton(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Performs layout of the "create here" button when a setting or selection changes.
            </summary>
            <param name="dayIndex">The index of the day in which to display the "create here" button.</param>
            <param name="timeSlotIndex">The index of the time slot in which to display the "create here" button.</param>
            <param name="time">The time at whose location to display the "create here" button.</param>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.Days">
            <summary>
            Gets or sets the per-day data to be represented on the canvas.
            This member supports the <see cref="T:Mindscape.WpfElements.Scheduler"/> control and is not intended for use
            in your code, but may be referenced in advanced styling and templating scenarios.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvasBase.DaysProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.Formatter">
            <summary>
            Gets or sets the Formatter used to provide information about styling various parts of a <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereHintContent">
            <summary>
            Gets or sets the content displayed on the "create here" button
            that is displayed when the user hovers over the control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereHintContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereButtonStyle">
            <summary>
            Gets or sets the style for the "create here" button
            that is displayed when the user hovers over the control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereButtonStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementStyle">
            <summary>
            Gets or sets the style for the "new appointment" element that
            appears when the user clicks the "create here" button.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereElementDuration">
            <summary>
            Gets or sets the duration in minutes for a schedule item that is added useing the "Create here" button.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereDayIndex">
            <summary>
            Gets the day index on which to display the "create here" button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.CreateHereTime">
            <summary>
            Gets the time at whose location to display the "create here" button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvasBase.IsMouseDown">
            <summary>
            Gets whether the mouse button is down over the <see cref="T:Mindscape.WpfElements.SchedulerCanvasBase"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SchedulerCanvas"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.GetDateTime(System.Double,System.Double,Mindscape.WpfElements.TimeEnd)">
            <summary>
            Gets the time corresponding to a location on the canvas.
            </summary>
            <param name="x">The x-coordinate of the location.</param>
            <param name="y">The y-coordinate of the location.</param>
            <param name="timeEnd">Whether to adjust the time for the start or end of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <returns>The date and time corresponding to x and y.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.OnDaysChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the user interface in response to changes to the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.Days"/> property.
            </summary>
            <param name="e">Contains information about changes to the Days property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemTemplate"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.OnFormatterChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Changes the style and template of all the schedule elements based on the new formatter.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCanvas.TimeSlotTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerCanvas.TimeSlotTemplate"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.SchedulerCanvas.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerCanvas.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the mouse button is pressed over this <see cref="T:Mindscape.WpfElements.SchedulerCanvas"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvas.HourSlotHeight">
            <summary>
            Gets or sets the height of each hourly slot.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvas.RightAreaBuffer">
            <summary>
            Gets or sets the width of the empty area left to the right of each <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemStyle">
            <summary>
            Gets or sets the Style for schedule items displayed on the canvas.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvas.ScheduleItemTemplate">
            <summary>
            Gets or sets the DataTemplate. for schedule items displayed on the canvas.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerCanvas.TimeSlotTemplate">
            <summary>
            Gets or sets the DataTemplate for presenting <see cref="T:Mindscape.WpfElements.TimeSlot"/> objects on the canvas.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerCanvas.TimeSlotTemplateProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.SchedulerCanvas.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerCommands">
            <summary>
            Contains commands used within the <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.DecrementViewCommand">
            <summary>
            Moves the view backward to the previous block (e.g. previous week);
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.IncrementViewCommand">
            <summary>
            Moves the view forward to the next block (e.g. next week).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.AddScheduleItemCommand">
            <summary>
            A command for adding a schedule item in a <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.ShowWorkWeekCommand">
            <summary>
            A command for only displaying the 5 working days in <see cref="T:Mindscape.WpfElements.WeekView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.ShowFullWeekCommand">
            <summary>
            A command for showing all 7 days of the week in <see cref="T:Mindscape.WpfElements.WeekView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.SwitchToDayViewCommand">
            <summary>
            A command for switching to <see cref="T:Mindscape.WpfElements.DayView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.SwitchToWeekViewCommand">
            <summary>
            A command for switching to <see cref="T:Mindscape.WpfElements.WeekView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.SwitchToMonthViewCommand">
            <summary>
            A command for switching to <see cref="T:Mindscape.WpfElements.MonthView"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.GoToDayCommand">
            <summary>
            A command for bringing a specific day into view.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.GoToWeekCommand">
            <summary>
            A command for bringing a specific week into view.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.PreviousScheduleItemCommand">
            <summary>
            A command for bringing the previous schedule item into view.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.NextScheduleItemCommand">
            <summary>
            A command for bringing the next schedule item into view.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.ViewDetailsCommand">
            <summary>
            A command for switching to day view from month view for a day that has more items than can be displayed.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.OkCommand">
            <summary>
            A command for confirming dialogs.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.CancelCommand">
            <summary>
            A command for canceling dialogs.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.EditRecurrenceCommand">
            <summary>
            A command for opening the recurrence dialog for a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerCommands.RemoveRecurrenceCommand">
            <summary>
            A command for removing the recurrence pattern from a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerElement">
            <summary>
            Represents a <see cref="P:Mindscape.WpfElements.SchedulerElement.ScheduleItem"/> on a display surface (typically a
            <see cref="T:Mindscape.WpfElements.SchedulerCanvasBase"/>).
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElement.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user presses the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElement.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.SchedulerElement.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerElement.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the mouse is double clicked on this <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElement.IsScheduleItemStartVisible">
            <summary>
            Gets whether the start of the <see cref="P:Mindscape.WpfElements.SchedulerElement.ScheduleItem"/> represented by this
            <see cref="T:Mindscape.WpfElements.SchedulerElement"/> is on a displayed date.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElement.IsScheduleItemEndVisible">
            <summary>
            Gets whether the start of the <see cref="P:Mindscape.WpfElements.SchedulerElement.ScheduleItem"/> represented by this
            <see cref="T:Mindscape.WpfElements.SchedulerElement"/> is on a displayed date.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElement.ElementState">
            <summary>
            Gets display information for the <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElement.ScheduleItem">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.SchedulerElement.ScheduleItem"/> represented by this <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.SchedulerElement.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerElementDisplayState">
            <summary>
            Contains display information for a <see cref="T:Mindscape.WpfElements.SchedulerElement"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayState.IsScheduleItemStartVisible">
            <summary>
            Gets whether the start of the item is on a displayed date.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayState.IsScheduleItemEndVisible">
            <summary>
            Gets whether the end of the item is on a displayed date.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayState.ScheduleItemStartTime">
            <summary>
            Gets the start time of the item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayState.ScheduleItemEndTime">
            <summary>
            Gets the end time of the item.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerElementDisplayState.ScheduleItem">
            <summary>
            Gets the <see cref="P:Mindscape.WpfElements.SchedulerElementDisplayState.ScheduleItem"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerFormatter">
            <summary>
            Provides formatting information for a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.MonthButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.MonthButtonContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.WeekButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.WeekButtonContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.DayButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.DayButtonContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.AddAppointmentButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.AddAppointmentButtonContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.ShowWorkWeekLabelContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.ShowWorkWeekLabelContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.ShowFullWeekLabelContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.ShowFullWeekLabelContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.NextItemButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.NextItemButtonContent"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerFormatter.PreviousItemButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerFormatter.PreviousItemButtonContent"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ScheduleItemStyleSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.StyleSelector"/> for selecting the style of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> in day or week view.
            If this property is set to null, then the default schedule item style will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ScheduleItemTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> for selecting the template for a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> in day or week view.
            If this property is set to null, then the default schedule item template will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ShortItemStyleSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.StyleSelector"/> for selecting the style of a short <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            If this property is set to null, then the default schedule item style will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ShortItemTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> for selecting the template of a short <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            If this property is set to null, then the default schedule item template will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.LongItemStyleSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.StyleSelector"/> for selecting the style of a long <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            If this property is set to null, then the default schedule item style will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.LongItemTemplateSelector">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> for selecting the template of a long <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.
            If this property is set to null, then the default schedule item template will be used.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.MonthButtonContent">
            <summary>
            Gets or sets the content to be displayed in the 'Month' button of the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.MonthButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.WeekButtonContent">
            <summary>
            Gets or sets the content to be displayed in the 'Week' button of the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.WeekButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.DayButtonContent">
            <summary>
            Gets or sets the content to be displayed in the 'Day' button of the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.DayButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.AddAppointmentButtonContent">
            <summary>
            Gets or sets the content to be displayed in the 'Add Appointment' button of the <see cref="T:Mindscape.WpfElements.Scheduler"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.AddAppointmentButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ShowWorkWeekLabelContent">
            <summary>
            Gets or sets the content of the show-work-week label.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.ShowWorkWeekLabelContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ShowFullWeekLabelContent">
            <summary>
            Gets or sets the content of the show-full-week label.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.ShowFullWeekLabelContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.NextItemButtonContent">
            <summary>
            Gets or sets the content of the next-item wing button.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.NextItemButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.PreviousItemButtonContent">
            <summary>
            Gets or sets the content of the previous-item wing button.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerFormatter.PreviousItemButtonContentProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.ScheduleItemDialogStyle">
            <summary>
            Gets or sets a custom style for the schedule item dialog.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.RecurrenceDialogStyle">
            <summary>
            Gets or set a custom style for the recurrence dialog.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.DeleteRecurrenceDialogStyle">
            <summary>
            Gets or sets a custom style for the recurrence deletion dialog.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerFormatter.DefaultScheduleItemName">
            <summary>
            Gets or sets the default name for newly created schedule items.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.ScheduleItemMover">
            <summary>
            Provides a user interface for moving a <see cref="P:Mindscape.WpfElements.ScheduleItemMover.ScheduleItem"/> by dragging
            with the mouse.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemMover.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.ScheduleItemMover"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.ScheduleItemMover.ScheduleItemProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.ScheduleItemMover.ScheduleItem"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemMover.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called by the framework when the mouse leaves the control.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemMover.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called by the framework when the user moves the mouse.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemMover.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user presses the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.ScheduleItemMover.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called by the framework when the user releases the left mouse button.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="P:Mindscape.WpfElements.ScheduleItemMover.ScheduleItem">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.ScheduleItemMover.ScheduleItem"/> associated with the mover.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.ScheduleItemMover.ScheduleItemProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.SchedulerNavigationBar">
            <summary>
            Provides a user interface for navigating through a <see cref="T:Mindscape.WpfElements.Schedule"/> displayed in
            a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SchedulerNavigationBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SchedulerNavigationBar"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerNavigationBar.DateRangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerNavigationBar.DateRange"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SchedulerNavigationBar.ToolBarContentProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SchedulerNavigationBar.ToolBarContent"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerNavigationBar.DateRange">
            <summary>
            Gets or sets the date range to be displayed in the title.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SchedulerNavigationBar.DateRangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SchedulerNavigationBar.ToolBarContent">
            <summary>
            Gets or sets the ToolBarContent.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.SchedulerNavigationBar.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SmallSchedulerCanvas">
            <summary>
            Represents a canvas on which schedule items can be laid out in a summary view.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SmallSchedulerCanvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SmallSchedulerCanvas"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SmallSchedulerCanvas.GetDateTime(System.Double,System.Double,Mindscape.WpfElements.TimeEnd)">
            <summary>
            Gets the time corresponding to a location on the canvas.
            </summary>
            <param name="x">The x-coordinate of the location.</param>
            <param name="y">The y-coordinate of the location.</param>
            <param name="timeEnd">Whether to adjust the time for the start or end of a <see cref="T:Mindscape.WpfElements.ScheduleItem"/>.</param>
            <returns>The date and time corresponding to x and y.</returns>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.ShowShortItemsProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShowShortItems"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.EnlargeWhenFullProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.EnlargeWhenFull"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.BottomBufferProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.BottomBuffer"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SmallSchedulerCanvas.OnDaysChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the user interface in response to changes to the <see cref="P:Mindscape.WpfElements.SchedulerCanvasBase.Days"/> property.
            </summary>
            <param name="e">Contains information about changes to the Days property.</param>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.DayElementStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.DayElementStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemStyleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemStyle"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemTemplate"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SmallSchedulerCanvas.OnFormatterChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Changes the style and template of all the schedule elements based on the new formatter.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.TargetMonthProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.TargetMonth"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SmallSchedulerCanvas.TargetWeekProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SmallSchedulerCanvas.TargetWeek"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShowShortItems">
            <summary>
            Gets or sets whether to show single-day items.  This should be set to true
            for summary views such as month views, and false if the single-day items are
            shown elsewhere as in day and week views.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.ShowShortItemsProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.EnlargeWhenFull">
            <summary>
            Gets or sets whether the canvas should auto-enlarge to display its contents.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.EnlargeWhenFullProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.BottomBuffer">
            <summary>
            Gets or sets the minimum amount of space to be available underneath the elements within this <see cref="T:Mindscape.WpfElements.SmallSchedulerCanvas"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.DayElementStyle">
            <summary>
            Gets or sets the Style applies to <see cref="T:Mindscape.WpfElements.MonthViewDayElement"/> objects
            displayed on the canvas.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.DayElementStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemStyle">
            <summary>
            Gets or sets the Style applied to <see cref="T:Mindscape.WpfElements.SchedulerElement"/> controls
            representing multi-day items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.LongItemTemplate">
            <summary>
            Gets or sets the LongItemTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemStyle">
            <summary>
            Gets or sets the Style applied to <see cref="T:Mindscape.WpfElements.SchedulerElement"/> controls
            representing single-day items.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemStyleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.ShortItemTemplate">
            <summary>
            Gets or sets the ShortItemTemplate.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.TargetMonth">
            <summary>
            Gets or sets the month in whose view the canvas appears.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SmallSchedulerCanvas.TargetMonthProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SmallSchedulerCanvas.TargetWeek">
            <summary>
            Gets or sets the TargetWeek.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeEnd">
            <summary>
            Specifies which end (start or finish) of a schedule item is being referred to.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeEnd.StartTime">
            <summary>
            The start of a schedule item.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeEnd.EndTime">
            <summary>
            The end of a schedule item.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeOfDayBar">
            <summary>
            A control that displays a list of times.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeOfDayBar"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayBar.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeOfDayBar.VerticalOffsetProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeOfDayBar.VerticalOffset"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeOfDayBar.IsTimePointerVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeOfDayBar.IsTimePointerVisible"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeOfDayBar.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.TimeOfDayBar.PropertyChanged"/> event.
            </summary>
            <param name="name">The name of the property that changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDayBar.Times">
            <summary>
            Gets the times to display.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDayBar.VerticalOffset">
            <summary>
            Gets or sets the VerticalOffset of the scroll bar.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeOfDayBar.VerticalOffsetProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDayBar.IsTimePointerVisible">
            <summary>
            Gets or sets the whether or not to display the time pointer.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeOfDayBar.IsTimePointerVisibleProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeOfDayBar.Now">
            <summary>
            Gets the current date and time.
            </summary>
            <remarks>This is used for binding, to provide change notifications as time passes.
            It returns the same value as DateTime.Now.</remarks>
        </member>
        <member name="E:Mindscape.WpfElements.TimeOfDayBar.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSlot">
            <summary>
            Represents a slot on the display surface of a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSlot.CompareTo(Mindscape.WpfElements.TimeSlot)">
            <summary>
            Compares this <see cref="T:Mindscape.WpfElements.TimeSlot"/> to another.
            </summary>
            <param name="other">The TimeSlot to compare against.</param>
            <returns>A negative value if this TimeSlot occurs before the other; a positive
            value if this TimeSlot occurs after the other; 0 if the two TimeSlots coincide.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlot.IsSelected">
            <summary>
            Gets whether the <see cref="T:Mindscape.WpfElements.TimeSlot"/> is selected.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlot.DateTime">
            <summary>
            Gets the time of the <see cref="T:Mindscape.WpfElements.TimeSlot"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlot.Hour">
            <summary>
            Gets the hour of the <see cref="T:Mindscape.WpfElements.TimeSlot"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlot.Minute">
            <summary>
            Gets the minute of the <see cref="T:Mindscape.WpfElements.TimeSlot"/>.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSlot.TimeSlotState">
            <summary>
            Gets the display status of the <see cref="T:Mindscape.WpfElements.TimeSlot"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSlotState">
            <summary>
            Specifies status information used for rendering a <see cref="T:Mindscape.WpfElements.TimeSlot"/>.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSlotState.WorkTime">
            <summary>
            The timeslot is unselected and within working hours.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSlotState.NotWorkTime">
            <summary>
            The timeslot is unselected and outside working hours.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSlotState.SelectedWorkTime">
            <summary>
            The timeslot is selected and within working hours.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSlotState.SelectedNotWorkTime">
            <summary>
            The timeslot is selected and outside working hours.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Internal.WeekModel">
            <summary>
            This class supports the <see cref="T:Mindscape.WpfElements.Scheduler"/> control and is not intended for use from your code.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WeekView">
            <summary>
            Represents a week view in a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WeekView"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.#ctor(Mindscape.WpfElements.Schedule,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WeekView"/> class.
            </summary>
            <param name="schedule">The <see cref="T:Mindscape.WpfElements.Schedule"/> to be displayed.</param>
            <param name="startDate">The start date for the display.</param>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.IncrementView">
            <summary>
            Moves the view to the next week.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.DecrementView">
            <summary>
            Moves the view to the previous week.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.GetStartDateContaining(System.DateTime)">
            <summary>
            Gets a suitable start date for the control to display the requested date.
            </summary>
            <param name="date">The date to be displayed.</param>
            <returns>A start date for the view that will cause this date to be displayed.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.OnScheduleChanged">
            <summary>
            Called when the schedule of this <see cref="T:Mindscape.WpfElements.WeekView"/> changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.CreateScheduleItemForAdd">
            <summary>
            Adds a new schedule item at the current selection.
            </summary>
            <returns>The new item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.WeekView.CancelAdd(Mindscape.WpfElements.ScheduleItem)">
            <summary>
            Cancels the addition of the specified item.
            </summary>
            <param name="item">The item to cancel.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.ContainsToday">
            <summary>
            Gets whether the view contains the current day.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.WeekViewMode">
            <summary>
            Gets or sets whether to display the full week or the work week only.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.EndDate">
            <summary>
            Gets the end date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.StartDate">
            <summary>
            Gets or sets the start date of the view.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.Week">
            <summary>
            Gets the week being displayed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.SelectedDateRange">
            <summary>
            Gets a <see cref="T:Mindscape.WpfElements.DateRange"/> containing the selected start and end dates of this <see cref="T:Mindscape.WpfElements.WeekView"/>.
            If a <see cref="T:Mindscape.WpfElements.ScheduleItem"/> is selected, then the start and end times of the item will be returned instead.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WeekView.DateRangeDisplayMode">
            <summary>
            Gets how to format dates in the view title.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WeekViewMode">
            <summary>
            Specifies whether to show a full week in Week view, or only the work
            week (Monday to Friday).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WeekViewMode.WorkWeek">
            <summary>
            Show only the work week (Monday to Friday).
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.WeekViewMode.FullWeek">
            <summary>
            Show the full week.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WorkHours">
            <summary>
            Defines the work hours of a <see cref="T:Mindscape.WpfElements.Scheduler"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WorkHours.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WorkHours"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WorkHours.#ctor(Mindscape.WpfElements.TimeOfDay,Mindscape.WpfElements.TimeOfDay)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WorkHours"/> class using the given start and end times.
            </summary>
            <param name="startTime">The start time of the WorkHours.</param>
            <param name="endTime">The end time of the WorkHours.</param>
        </member>
        <member name="P:Mindscape.WpfElements.WorkHours.StartTime">
            <summary>
            Gets or sets the starting work time. The default is 9:00am.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WorkHours.EndTime">
            <summary>
            Gets or sets the finishing work time. The default is 5:00pm.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.DelegatingDataTemplateSelector">
            <summary>
            Selects a template, falling back to another <see cref="T:System.Windows.Controls.DataTemplateSelector"/> if
            no template is found by this selector.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.DelegatingDataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns a <see cref="T:System.Windows.DataTemplate"/> for the item.
            </summary>
            <param name="item">The item for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>A DataTemplate for the item.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.DelegatingDataTemplateSelector.SelectTemplateCore(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, gets a <see cref="T:System.Windows.DataTemplate"/> for the item.
            If this method returns null, the item is handed off to the <see cref="P:Mindscape.WpfElements.DelegatingDataTemplateSelector.BasedOn"/> <see cref="T:System.Windows.Controls.DataTemplateSelector"/>.
            </summary>
            <param name="item">The item for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>A DataTemplate for the item, or null to delegate to the BasedOn DataTemplateSelector.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.DelegatingDataTemplateSelector.BasedOn">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> on which to fall back if no template
            is found by this selector.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.MatchingTemplateSelector">
            <summary>
            Selects a data template based on a list of match criteria.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.MatchingTemplateSelector.SelectTemplateCore(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:System.Windows.DataTemplate"/> associated with the first criterion to match the item.
            </summary>
            <param name="item">The item for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>The template from the first matching entry in the <see cref="P:Mindscape.WpfElements.MatchingTemplateSelector.Templates"/> list if any; otherwise
            the <see cref="P:Mindscape.WpfElements.MatchingTemplateSelector.DefaultTemplate"/>.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.MatchingTemplateSelector.DefaultTemplate">
            <summary>
            Gets or sets the default data template.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.MatchingTemplateSelector.Templates">
            <summary>
            Gets the list of templates and matching criteria.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TypeTemplate">
            <summary>
            Maps a data type to a <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TypeTemplate.Matches(System.Object)">
            <summary>
            Tests whether an object matches the criterion for this <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
            <param name="item">The object to be tested.</param>
            <returns>true if the object matches the criterion; otherwise false.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.TypeTemplate.DataType">
            <summary>
            The data type to which the <see cref="P:Mindscape.WpfElements.TypeTemplate.Template"/> property applies.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TypeTemplate.Template">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> to be used for the specified <see cref="P:Mindscape.WpfElements.TypeTemplate.DataType"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Spin">
            <summary>
            A control for modifying a numeric value using up/down buttons.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Spin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Spin"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Spin.ChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Spin.Change"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Spin.ValueProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Spin.Value"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Spin.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Spin.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.Spin.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.Spin.Maximum"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Spin.Change">
            <summary>
            Gets or sets the amount by which the value is changed when the user
            spins the control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Spin.ChangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Spin.Value">
            <summary>
            Gets or sets the value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Spin.ValueProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>BindsTwoWayByDefault</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Spin.Minimum">
            <summary>
            Gets or sets the minimum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Spin.MinimumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Spin.Maximum">
            <summary>
            Gets or sets the maximum value.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.Spin.MaximumProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.Spin.SpinButtonStyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the <see cref="T:System.Windows.Style"/> for spin
            buttons.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SpinDecorator">
            <summary>
            Associates a control with a <see cref="T:Mindscape.WpfElements.Spin"/> control.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SpinDecorator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SpinDecorator"/> class.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinDecorator.ChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SpinDecorator.Change"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinDecorator.ValuePropertyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SpinDecorator.ValueProperty"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinDecorator.MinimumPropertyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SpinDecorator.MinimumProperty"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinDecorator.MaximumPropertyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SpinDecorator.MaximumProperty"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinDecorator.ShowSpinUIProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SpinDecorator.ShowSpinUI"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SpinDecorator.OnApplyTemplate">
            <summary>
            Called by the framework when a template is applied to the control.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SpinDecorator.Change">
            <summary>
            Gets or sets the amount by which the value is changed when the user
            spins the control.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SpinDecorator.ChangeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SpinDecorator.ValueProperty">
            <summary>
            Gets or sets the name of the property on the child control which will be
            modified when the user spins the control.  The default is "Value".
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SpinDecorator.ValuePropertyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SpinDecorator.MinimumProperty">
            <summary>
            Gets or sets the name of the property on the child control which controls
            the minimum value that can be entered directly.  The default is "Minimum".
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SpinDecorator.MinimumPropertyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SpinDecorator.MaximumProperty">
            <summary>
            Gets or sets the name of the property on the child control which controls
            the maximum value that can be entered directly.  The default is "Maximum".
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SpinDecorator.MaximumPropertyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.SpinDecorator.ShowSpinUI">
            <summary>
            Gets or sets whether the spin UI should be shown.  If false, the value
            can still be spun using the cursor keys.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.SpinDecorator.ShowSpinUIProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.SpinCommands">
            <summary>
            Contains commands used with the <see cref="T:Mindscape.WpfElements.Spin"/> control.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinCommands.Increase">
            <summary>
            Gets the value that represents the Increase command.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SpinCommands.Decrease">
            <summary>
            Gets the value that represents the Decrease command.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.SplitButton">
            <summary>
            A button which also provides an optional drop-down menu for selecting  alternate commands.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SplitButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.SplitButton"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SplitButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the <see cref="T:Mindscape.WpfElements.SplitButton"/> loses focus.
            </summary>
            <param name="e"><see cref="T:System.Windows.RoutedEventArgs"/> containing the event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SplitButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed over the <see cref="T:Mindscape.WpfElements.SplitButton"/>.
            </summary>
            <param name="e"><see cref="T:System.Windows.Input.MouseButtonEventArgs"/> containing the event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.SplitButton.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.SplitButton.OnClick">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.SplitButton"/> is clicked.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.SplitButton.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.SplitButton.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SplitButton.IsDropDownOpen">
            <summary>
            Gets or sets the whether the drop-down menu part of the <see cref="T:Mindscape.WpfElements.SplitButton"/> is open.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.SplitButton.DropDownItems">
            <summary>
            Gets the list of items to display in the drop-down menu.
            This supports <see cref="T:System.Windows.Controls.MenuItem"/> and <see cref="T:System.Windows.Controls.Separator"/> objects.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Themes.Alloy">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the Alloy style.
            </summary>
            <summary>
            Alloy
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.Alloy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Themes.Alloy"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.Alloy.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Themes.Alloy.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ComponentResourceKey"/> for the <see cref="T:Mindscape.WpfElements.Themes.Alloy"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Themes.AlloyLight">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the AlloyLight style.
            </summary>
            <summary>
            AlloyLight
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.AlloyLight.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Themes.AlloyLight"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.AlloyLight.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Themes.AlloyLight.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ComponentResourceKey"/> for the <see cref="T:Mindscape.WpfElements.Themes.AlloyLight"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Themes.OfficeSilver">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the OfficeSilver style.
            </summary>
            <summary>
            OfficeSilver
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeSilver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Themes.OfficeSilver"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeSilver.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Themes.OfficeSilver.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ComponentResourceKey"/> for the <see cref="T:Mindscape.WpfElements.Themes.OfficeSilver"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Themes.OfficeBlack">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the OfficeBlack style.
            </summary>
            <summary>
            OfficeBlack
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeBlack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Themes.OfficeBlack"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeBlack.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Themes.OfficeBlack.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ComponentResourceKey"/> for the <see cref="T:Mindscape.WpfElements.Themes.OfficeBlack"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.Themes.OfficeBlue">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the OfficeBlue style.
            </summary>
            <summary>
            OfficeBlue
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeBlue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.Themes.OfficeBlue"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.Themes.OfficeBlue.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.Themes.OfficeBlue.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ComponentResourceKey"/> for the <see cref="T:Mindscape.WpfElements.Themes.OfficeBlue"/> style.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.Themes.Radium">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the Radium property grid style.
            </summary>
            <summary>
            Radium
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.Themes.Radium.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.Themes.Radium"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.Themes.Radium.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.Themes.Radium.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the Radium <see cref="T:System.Windows.Style"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.WpfPropertyGrid.Themes.Whalesong">
            <summary>
            A <see cref="T:System.Windows.ResourceDictionary"/> containing resources for the Whalesong property grid style.
            </summary>
            <summary>
            Whalesong
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.Themes.Whalesong.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.WpfPropertyGrid.Themes.Whalesong"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.WpfPropertyGrid.Themes.Whalesong.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.WpfPropertyGrid.Themes.Whalesong.StyleKey">
            <summary>
            Gets the <see cref="T:System.Windows.ResourceKey"/> for the Whalesong <see cref="T:System.Windows.Style"/>.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeExplorer">
            <summary>
            A control that can host a <see cref="P:Mindscape.WpfElements.TimeExplorer.Chart"/> control and provides functionality for the user to explore
            through various time ranges by sliding the time window.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeExplorer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeExplorer"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeExplorer.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeExplorer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel is used over this <see cref="T:Mindscape.WpfElements.TimeExplorer"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.ChartProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.Chart"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.RangeStartTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.RangeStartTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.RangeEndTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.RangeEndTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.ViewportStartTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.ViewportStartTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.ViewportEndTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.ViewportEndTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.CanEditRangeMagnitudeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.CanEditRangeMagnitude"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.MinorRangeButtonsVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.MinorRangeButtonsVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.MajorRangeButtonsVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.MajorRangeButtonsVisibility"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.ShortWeekNameProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.ShortWeekName"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorer.FullWeekNameProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorer.FullWeekName"/> property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.TimeExplorer.TimeRangeChanged">
            <summary>
            Raised when the range of the time window has changed.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.Chart">
            <summary>
            Gets or sets the <see cref="P:Mindscape.WpfElements.TimeExplorer.Chart"/> control to be hosted by this <see cref="T:Mindscape.WpfElements.TimeExplorer"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.RangeStartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> at the start of the time window.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.RangeEndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> at the end of the time window.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.ViewportStartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> at the start of the overall viewport.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.ViewportStartTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.ViewportEndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> at the end of the overall viewport.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.ViewportEndTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.CanEditRangeMagnitude">
            <summary>
            Gets or sets whether or not the start and end thumbs of the range slider are enabled. The default is true.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.CanEditRangeMagnitudeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.MinorRangeButtonsVisibility">
            <summary>
            Gets or sets the visibility of the minor date-time range buttons. The default is Visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.MinorRangeButtonsVisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.MajorRangeButtonsVisibility">
            <summary>
            Gets or sets the visibility of the major date-time range buttons. The default is Visible.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.MajorRangeButtonsVisibilityProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.ShortWeekName">
            <summary>
            Gets or sets the string used for short-formatting week units, the default is "W".
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.ShortWeekNameProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorer.FullWeekName">
            <summary>
            Gets or sets the string used for full-formatting week units, the default is "Week".
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimeExplorer.FullWeekNameProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="T:Mindscape.WpfElements.TimeExplorerMainDualSlider">
            <summary>
            The main dual slider used by a <see cref="T:Mindscape.WpfElements.TimeExplorer"/>. Contains additional functioanlity for displaying
            a marker representing the logic position of the internal dual slider.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeExplorerMainDualSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeExplorerMainDualSlider"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeExplorerMainDualSlider.OnApplyTemplate">
            <summary>
            Called by the framework when the control template is applied.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeStartProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeStart"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeEndProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeEnd"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeStart">
            <summary>
            Gets or sets the start position of the internal dual slider marker.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerMainDualSlider.InternalRangeEnd">
            <summary>
            Gets or sets the end position of the internal dual slider marker.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeExplorerTimeUnit">
            <summary>
            Contains information about a time unit button within a <see cref="T:Mindscape.WpfElements.TimeExplorer"/> control.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerTimeUnit.Width">
            <summary>
            Gets or sets the width of the time unit button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerTimeUnit.Label">
            <summary>
            Gets or sets the label displayed by the time unit button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerTimeUnit.StartDateTime">
            <summary>
            Gets or sets the starting <see cref="T:System.DateTime"/> of the time unit button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerTimeUnit.EndDateTime">
            <summary>
            Gets or sets the ending <see cref="T:System.DateTime"/> of the time unit button.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeExplorerTimeUnit.IsSelected">
            <summary>
            Gets or sets the selection state of the time unit button.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimePicker">
            <summary>
            Provides a user interface for selecting a time of day by entering a time
            or selecting from a drop-down list.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimePickerBase">
            <summary>
            A base class for time picker controls that have a drop-down part and up/down functionality.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePickerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimePickerBase"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePickerBase.Increase">
            <summary>
            Increases the selected time based on the <see cref="P:Mindscape.WpfElements.TimePickerBase.Change"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePickerBase.Decrease">
            <summary>
            Decreases the selected time based on the <see cref="P:Mindscape.WpfElements.TimePickerBase.Change"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePickerBase.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePickerBase.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePickerBase.ChangeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePickerBase.Change"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePickerBase.IsUpDownVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePickerBase.IsUpDownVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePickerBase.IsDropDownToggleVisibleProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePickerBase.IsDropDownToggleVisible"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePickerBase.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePickerBase.IsReadOnly"/> property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePickerBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Mindscape.WpfElements.TimePickerBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <member name="P:Mindscape.WpfElements.TimePickerBase.IsDropDownOpen">
            <summary>
            Gets or sets whether the drop-down part of the <see cref="T:Mindscape.WpfElements.TimePickerBase"/> is open.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePickerBase.Change">
            <summary>
            Gets or sets a <see cref="T:System.TimeSpan"/> used to increase or decrease the selected time.
            The default is 30 minutes.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePickerBase.IsUpDownVisible">
            <summary>
            Gets or sets whether or not the up/down controls are visible.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePickerBase.IsDropDownToggleVisible">
            <summary>
            Gets or sets whether or not the drop-down toggle button is visible or not.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePickerBase.IsReadOnly">
            <summary>
            Gets or sets whether or not the text box part of this control is read only.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePickerBase.IsReadOnlyProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="E:Mindscape.WpfElements.TimePickerBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimePicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePicker.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.TimePicker"/> loses keyboard focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.TimePicker.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when this <see cref="T:Mindscape.WpfElements.TimePicker"/> gets keyboard focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mindscape.WpfElements.TimePicker.Increase">
            <summary>
            Increases the <see cref="P:Mindscape.WpfElements.TimePicker.SelectedTime"/> based on the Change property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimePicker.Decrease">
            <summary>
            Decreases the <see cref="P:Mindscape.WpfElements.TimePicker.SelectedTime"/> based on the Change property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.TimeDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.TimeDisplayMode"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.SelectedTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.SelectedTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.MaxTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.MaxTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.MinTimeProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.MinTime"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.TimeSuggestionIntervalProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.TimeSuggestionInterval"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.IsAutoFillSuggestionsEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.IsAutoFillSuggestionsEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.IsMaskEnabledProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.IsMaskEnabled"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.TextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.Text"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimePicker.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimePicker.ItemsSource"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.TimeDisplayMode">
            <summary>
            Gets or sets the TimeDisplayMode that specifies how to display time.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.TimeDisplayModeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.SelectedTime">
            <summary>
            Gets or sets the selected <see cref="T:Mindscape.WpfElements.TimeOfDay"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.TimePicker.SelectedTimeChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.TimePicker.SelectedTime"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.MaxTime">
            <summary>
            Gets or sets the maximum time of day to be displayed in the <see cref="T:Mindscape.WpfElements.TimePicker"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.MaxTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.MinTime">
            <summary>
            Gets or sets the minimum time of day to be displayed in the <see cref="T:Mindscape.WpfElements.TimePicker"/>.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.MinTimeProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.TimeSuggestionInterval">
            <summary>
            Gets or sets the interval between times when automatically filling the suggestion list.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.TimeSuggestionIntervalProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.IsAutoFillSuggestionsEnabled">
            <summary>
            Gets or sets whether or not this control should automatically fill the suggestion list when the MinTime, MaxTime or TimeSuggestionInterval
            properties change. The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.IsAutoFillSuggestionsEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.IsMaskEnabled">
            <summary>
            Gets or sets whether or not to use a mask for the text input of this <see cref="T:Mindscape.WpfElements.TimePicker"/>.
            The default is false.
            This is a dependency property.
            </summary>
            <remarks>
            <strong>Dependency Property Information</strong>
            <table>
              <tr><td>Identifier field</td><td><see cref="F:Mindscape.WpfElements.TimePicker.IsMaskEnabledProperty"/></td></tr>
              <tr><td>Metadata properties set to true</td><td>None</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.Text">
            <summary>
            Gets or sets the text displayed in the <see cref="T:Mindscape.WpfElements.TimePicker"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimePicker.ItemsSource">
            <summary>
            Gets or sets the collection of times to be displayed in the drop-down part of the control.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeDisplayMode">
            <summary>
            Specifies how to visualy display time.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeDisplayMode.TwelveHourTime">
            <summary>
            Time should be displayed in twelve hour time. (e.g. 3:00PM)
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeDisplayMode.TwentyFourHourTime">
            <summary>
            Time should be displayed in twenty four hour time. (e.g. 15:00)
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.TimeSpanPicker">
            <summary>
            Provides a user interface for selecting a duration or <see cref="T:System.TimeSpan"/>
            by entering a value directly or selecting from a drop-down list.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.TimeSpanPicker"/> class.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanPicker.Increase">
            <summary>
            Increases the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpan"/> based on the Change property.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TimeSpanPicker.Decrease">
            <summary>
            Decreases the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpan"/> based on the Change property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpanProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpan"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSpanPicker.TextProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.Text"/> property.
            </summary>
        </member>
        <member name="F:Mindscape.WpfElements.TimeSpanPicker.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.ItemsSource"/> property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpan">
            <summary>
            Gets or sets the selected TimeSpan.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpanChanged">
            <summary>
            Raised when the <see cref="P:Mindscape.WpfElements.TimeSpanPicker.SelectedTimeSpan"/> changes.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSpanPicker.Text">
            <summary>
            Gets or sets the text displayed in the <see cref="T:Mindscape.WpfElements.TimeSpanPicker"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.TimeSpanPicker.ItemsSource">
            <summary>
            Gets or sets the collection of <see cref="T:System.TimeSpan"/> values offered in the drop-down
            part of the <see cref="T:Mindscape.WpfElements.TimeSpanPicker"/>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.CollectionUtilities">
            <summary>
            Provides helper methods for working with collections.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.CollectionUtilities.Append``2(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Appends a set of items to a collection.
            </summary>
            <typeparam name="TCollection">The type of item in the collection being appended to.</typeparam>
            <typeparam name="TAppend">The type of item being appended.</typeparam>
            <param name="collection">The collection being appended to.</param>
            <param name="itemsToAdd">The items to be appended.</param>
            <remarks>This method is equivalent to the AddRange method available on various concrete
            collection types.</remarks>
        </member>
        <member name="M:Mindscape.WpfElements.CollectionUtilities.AddDefaultValueEntry(System.Object)">
            <summary>
            Adds an entry to a collection.  The new entry is a new instance of the collection
            value type (constructed using the default constructor), or null for reference types
            with no default constructor.
            </summary>
            <param name="collectionValue">The collection.</param>
        </member>
        <member name="M:Mindscape.WpfElements.CollectionUtilities.CanAddToCollection(System.Object)">
            <summary>
            Determines whether a collection can be added to using the <see cref="M:Mindscape.WpfElements.CollectionUtilities.AddDefaultValueEntry(System.Object)"/>
            method.
            </summary>
            <param name="collectionValue">The collection.</param>
            <returns>true if it is possible to add values to this collection using
            <see cref="M:Mindscape.WpfElements.CollectionUtilities.AddDefaultValueEntry(System.Object)"/>; otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.CollectionUtilities.CanRemoveFromCollection(System.Object)">
            <summary>
            Determines whether elements can be removed from a collection.
            </summary>
            <param name="collectionValue">The collection.</param>
            <returns>true if it is possible to remove values from this collection;
            otherwise false.</returns>
        </member>
        <member name="M:Mindscape.WpfElements.GeometryUtils.GetRotatedHeight(System.Double,System.Double,System.Double)">
            <summary>
            Returns the bounding box height of a rectangle that has been rotated by the given angle.
            The zero angle points east and rotates in a clockwise diraction.
            </summary>
            <param name="width">The width of the rotating rectangle.</param>
            <param name="height">The height of the rotating rectangle.</param>
            <param name="angle">The angle to rotate the rectangle in degrees.</param>
            <returns>The height of the bounding box of the rotated rectangle.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.IfFullTrustExtension">
            <summary>
            Provides conditional logic for creating objects in xaml that are not supported in partial trust mode.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.IfFullTrustExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Creates an object using the Xaml property if the current environment is in full trust mode.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/>.</param>
            <returns>An object based on the Xaml property if full trust is enabled. Otherwise returns null.</returns>
        </member>
        <member name="P:Mindscape.WpfElements.IfFullTrustExtension.Xaml">
            <summary>
            The xaml code for creating the object.
            </summary>
        </member>
        <member name="T:Mindscape.WpfElements.NamedColor">
            <summary>
            Associates a name with a color according to the WPF color naming standard.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.NamedColor.#ctor(System.String,System.Windows.Media.Color)">
            <summary>
            Initialises a new instance of the <see cref="T:Mindscape.WpfElements.NamedColor"/> class.
            </summary>
            <param name="name">The name of the color.</param>
            <param name="color">The color value.</param>
        </member>
        <member name="M:Mindscape.WpfElements.NamedColor.#ctor(System.Windows.Media.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Mindscape.WpfElements.NamedColor"/> class.
            </summary>
            <param name="color">The color value.</param>
        </member>
        <member name="P:Mindscape.WpfElements.NamedColor.Name">
            <summary>
            Gets the name of the color.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NamedColor.Color">
            <summary>
            Gets the color value.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NamedColor.NamedColors">
            <summary>
            Gets a list of all named colors, as defined in the WPF <see cref="T:System.Windows.Media.Colors"/> class.
            </summary>
        </member>
        <member name="P:Mindscape.WpfElements.NamedColor.ColorNames">
            <summary>
            Gets a mapping of colors to names, as defined in the WPF <see cref="T:System.Windows.Media.Colors"/> class.
            </summary>
            <remarks>In rare cases a color value may have multiple names (e.g. Cyan and Aqua).  In such cases, 
            the ColorNames dictionary will contain only one of these names; which name is chosen is not defined.</remarks>
        </member>
        <member name="T:Mindscape.WpfElements.ReflectionUtilities">
            <summary>
            Provides helper methods for working with reflection.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.ReflectionUtilities.IsBrowsable(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Determines whether a member is browsable (i.e. does not have a <see cref="T:System.ComponentModel.BrowsableAttribute"/>
            with the Browsable property set to false).
            </summary>
            <param name="member">The member to check.</param>
            <returns>true if the member is browsable (does not have the BrowsableAttribute, or has
            BrowsableAttribute.Yes); false if the member is not browsable.</returns>
        </member>
        <member name="T:Mindscape.WpfElements.TypeUtilities">
            <summary>
            Provides helper methods for working with types.
            </summary>
        </member>
        <member name="M:Mindscape.WpfElements.TypeUtilities.IsGenericCollection(System.Type)">
            <summary>
            Determines whether a type is a generic collection type.
            </summary>
            <param name="propertyType">The type to test.</param>
            <returns>true if the type is a (closed constructed) generic collection type; 
            otherwise false.</returns>
        </member>
    </members>
</doc>
